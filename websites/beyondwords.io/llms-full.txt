# Create ad
Source: https://docs.beyondwords.io/api-reference/ads/create

post /projects/{project_id}/ads
Creates an ad in a project



# Delete ad
Source: https://docs.beyondwords.io/api-reference/ads/delete

delete /projects/{project_id}/ads/{id}
Deletes an ad from a project



# List ads
Source: https://docs.beyondwords.io/api-reference/ads/list

get /projects/{project_id}/ads
Lists ads within a project



# Get ad
Source: https://docs.beyondwords.io/api-reference/ads/show

get /projects/{project_id}/ads/{id}
Gets an ad from a project



# Update ad
Source: https://docs.beyondwords.io/api-reference/ads/update

put /projects/{project_id}/ads/{id}
Updates an ad in a project



# Get ad analytics
Source: https://docs.beyondwords.io/api-reference/analytics/ad-analytics

get /projects/{project_id}/ads/{id}/analytics
Retrieve analytics for a single ad in a project.



# List ads analytics
Source: https://docs.beyondwords.io/api-reference/analytics/ads-analytics

get /projects/{project_id}/ads/analytics
Retrieve analytics overview for all ads in a project.



# Get content analytics
Source: https://docs.beyondwords.io/api-reference/analytics/content-analytics

get /projects/{project_id}/content/{id}/analytics
Retrieve analytics for some specific content.



# List content analytics
Source: https://docs.beyondwords.io/api-reference/analytics/contents-analytics

get /projects/{project_id}/content/analytics
Retrieves an analytics overview for all content items in a project



# Get organization analytics
Source: https://docs.beyondwords.io/api-reference/analytics/organization-analytics

get /organization/analytics
Retrieves analytics for all projects within an organization



# Get project analytics
Source: https://docs.beyondwords.io/api-reference/analytics/project-analytics

get /projects/{id}/analytics
Retrieves analytics for a project



# List projects analytics
Source: https://docs.beyondwords.io/api-reference/analytics/projects-analytics

get /projects/analytics
Retrieves an analytics overview for all projects within an organization



# Create background tracks
Source: https://docs.beyondwords.io/api-reference/background-tracks/create

post /background_tracks
Creates a background track in a organization



# Delete background track
Source: https://docs.beyondwords.io/api-reference/background-tracks/delete

delete /background_tracks/{id}
Deletes a background track



# List background tracks
Source: https://docs.beyondwords.io/api-reference/background-tracks/list

get /background_tracks
Lists background tracks.



# Get background track
Source: https://docs.beyondwords.io/api-reference/background-tracks/show

get /background_tracks/{id}
Gets a background track



# Update background track
Source: https://docs.beyondwords.io/api-reference/background-tracks/update

put /background_tracks/{id}
Updates a background track in a organization



# Create content
Source: https://docs.beyondwords.io/api-reference/content/create

post /projects/{project_id}/content
Creates a content item in your project



# Delete content
Source: https://docs.beyondwords.io/api-reference/content/delete

delete /projects/{project_id}/content/{id}
Delete a content item from your project



# List content
Source: https://docs.beyondwords.io/api-reference/content/list

get /projects/{project_id}/content
Lists content within a project



# Content Overview
Source: https://docs.beyondwords.io/api-reference/content/overview

Overview of the content object and its properties

This object represents an item of content that belongs to a project.

| Property                       | Type    | Description                                                                                                                                                                                                                                                                                     |
| ------------------------------ | ------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `id`                           | string  | Unique UUID for the object.                                                                                                                                                                                                                                                                     |
| `status`                       | string  | The current status of the content processing operation. This value will change as the content is processed. Possible values are `draft`, `queued`, `processing`, `processed`, `skipped`, `error`                                                                                                |
| `type`                         | string  | The type. Possible values are `auto_segmet`, `manual_segment` or `audio_upload`                                                                                                                                                                                                                 |
| `title`                        | string  | The content title.                                                                                                                                                                                                                                                                              |
| `summary`                      | string  | The content summary.                                                                                                                                                                                                                                                                            |
| `body`                         | string  | The content body.                                                                                                                                                                                                                                                                               |
| `source_id`                    | string  | The externally-provided source identifier of the content. For example, this could be the id of the content in your CMS.                                                                                                                                                                         |
| `source_url`                   | string  | The URL that contains the source content. For example, this could be the public URL of the content.                                                                                                                                                                                             |
| `author`                       | string  | The author of the content.                                                                                                                                                                                                                                                                      |
| `image_url`                    | string  | The feature image URL of the content.                                                                                                                                                                                                                                                           |
| `metadata`                     | object  | The arbitrary metadata associated with content. For example, this could be `{"category": "sport"}`                                                                                                                                                                                              |
| `audio`                        | array   | The array of generated audio files for the entire content.                                                                                                                                                                                                                                      |
| `audio.id`                     | integer | Unique identifier for the audio object.                                                                                                                                                                                                                                                         |
| `audio.content_type`           | string  | The MIME type of the audio file according to the IANA specification.                                                                                                                                                                                                                            |
| `audio.url`                    | string  | The URL of the generated audio file.                                                                                                                                                                                                                                                            |
| `audio.duration`               | integer | The duration of the generated audio file in milliseconds.                                                                                                                                                                                                                                       |
| `video`                        | array   | The array of generated video files for the entire content.                                                                                                                                                                                                                                      |
| `segments`                     | array   | The array of segments in the content                                                                                                                                                                                                                                                            |
| `segments.id`                  | integer | Unique identifier for the segment object                                                                                                                                                                                                                                                        |
| `segments.marker`              | string  | The marker associated with the segment. To support playback from segments (i.e. paragraphs), you need to use the [BeyondWords Player](https://github.com/beyondwords-io/player) and [add markers to the elements](https://github.com/beyondwords-io/player/blob/main/doc/segments-playback.md). |
| `segments.section`             | string  | The section type of the segment. Possible values are `title`, `summary`, or `body`                                                                                                                                                                                                              |
| `segments.content_type`        | string  | The content type of the segment. Possible values are `text`, `audio`, or `image`. Text and audio will be included in generated audios. Text, audio, and images will be included in generated videos (coming soon).                                                                              |
| `segments.text`                | string  | The plain text for this segment if `segment.content_type` is `text`                                                                                                                                                                                                                             |
| `segments.audio_url`           | string  | The URL of the uploaded audio file for this segment if the `segment.content_type` is `audio`                                                                                                                                                                                                    |
| `segments.image_url`           | string  | The URL of the uploaded image file for this segment if the `segment.content_type` is `image`                                                                                                                                                                                                    |
| `segments.language`            | object  | The language object associated with this segment if the `segment.content_type` is `text`                                                                                                                                                                                                        |
| `segments.language.code`       | string  | The language code of the segment if the `segment.content_type` is `text`                                                                                                                                                                                                                        |
| `segments.language.name`       | string  | The language name of the segment if the `segment.content_type` is `text`                                                                                                                                                                                                                        |
| `segments.voice`               | object  | The voice object associated with this segment if the `segment.content_type` is `text`                                                                                                                                                                                                           |
| `segments.voice.id`            | integer | The id of the voice used to generate the audio of the segment if the `segment.content_type` is text                                                                                                                                                                                             |
| `segments.voice.name`          | string  | The name of voice used to generate the audio of the segment if the `segment.content_type` is `text`                                                                                                                                                                                             |
| `segments.start_time`          | integer | The start time of this segment in milliseconds. This may not exactly match the summed durations because of audio alignment gaps.                                                                                                                                                                |
| `segments.duration`            | integer | The duration of this segment in milliseconds.                                                                                                                                                                                                                                                   |
| `segments.created`             | string  | Time at which the segment object was created (ISO 8601).                                                                                                                                                                                                                                        |
| `segments.updated`             | string  | Time at which the segment object was updated (ISO 8601).                                                                                                                                                                                                                                        |
| `published`                    | boolean | Whether the content will appear in the BeyondWords Players                                                                                                                                                                                                                                      |
| `publish_date`                 | string  | Time at which the content was published or is scheduled to be published (ISO 8601).                                                                                                                                                                                                             |
| `ads_enabled`                  | boolean | Whether adverts will play for this content in the BeyondWords Players. If you don't have any ads then no ads will play.                                                                                                                                                                         |
| `auto_segment_updates_enabled` | boolean | Whether the media files will be regenerated when the `title`, `summary` or `body` content is updated with `auto_segment`                                                                                                                                                                        |
| `created`                      | string  | Time at which the object was created (ISO 8601).                                                                                                                                                                                                                                                |
| `updated`                      | string  | Time at which the object was updated (ISO 8601).                                                                                                                                                                                                                                                |


# Regenerate content
Source: https://docs.beyondwords.io/api-reference/content/regenerate

post /projects/{project_id}/content/{id}/regenerate
Reprocess content in a project.



# Get search fields
Source: https://docs.beyondwords.io/api-reference/content/search-fields

get /projects/{project_id}/content/search_fields
Project search fields.



# Introduction to segments
Source: https://docs.beyondwords.io/api-reference/content/segments



## Segments

Each content item can have multiple segments. For instance, an article typically includes a title, a summary and a body. The body itself typically contains multiple paragraphs, which may include multimedia elements such as images, audio clips, and videos. These individual components are referred to as segments. Segmenting content enables flexibility, allowing for a range of features when combined with the [BeyondWords Player](https://github.com/beyondwords-io/player). These include skipping between segments, initiating playback from specific segments (e.g., clicking play on a paragraph), and highlighting segments during playback (e.g., paragraph highlighting as it plays).

You have three options when it comes to generating audio: `auto_segment`, `manual_segment`, or `audio_upload`.

### auto\_segment

We recommend the `auto_segment` option for publishers seeking a simple way to generate audio versions of their articles.

To use this option set `type` property to `auto_segment` whenever you create or update a content item.

Using this option, you are required to submit data for the `body` property, with the `title` and `summary` properties being optional additions.

Once submitted, BeyondWords will automatically segment the `body` data into `segments`. In the initial response, the `segments` will be an empty array, as automatic segmenting is an asynchronous operation. However, once the audio has been generated and you retrieve a content item using the `?segments=full` query parameter, you will be able to view the individual segments.

**Example request and responses:**

<CodeGroup>
  ```json Example POST request
  {
    "type": "auto_segment",
    "title": "<h1>Your content title text</h1>",
    "summary": "<h2>Your content summary text</h2>",
    "body": "<p>Your content body text</p>",
    "source_id": "article-id-in-your-cms",
    "source_url": "https://example.com/some-article",
    "author": "Steve Jobs",
    "image_url": "https://example.com/image.jpeg",
    "metadata": {
      "key": "value"
    },
    "published": true,
    "publish_date": null,
    "ads_enabled": true,
    "auto_segment_updates_enabled": true
  }
  ```

  ```json Example POST response
  {
    "type": "auto_segment",
    "status": "queued",
    "id": "d7dfd636-098c-4b1b-83e5-15a3cba5a0bd",
    "title": "<h1>Your content title text</h1>",
    "summary": "<h2>Your content summary text</h2>",
    "body": "<p>Your content body text</p>",
    "source_id": "article-id-in-your-cms",
    "source_url": "https://example.com/some-article",
    "author": "Steve Jobs",
    "image_url": "https://example.com/image.jpeg",
    "audio": [],
    "video": [],
    "segments": [],
    "is_copy": false,
    "ads_enabled": true,
    "title_voice_id": null,
    "summary_voice_id": null,
    "body_voice_id": null,
    "metadata": {
      "key": "value"
    },
    "created": "2023-01-01T00:00:00Z",
    "updated": "2023-01-01T00:00:05Z",
    "published": true,
    "publish_date": "2023-01-01T00:00:00Z",
    "auto_segment_updates_enabled": true
  }
  ```

  ```json Example GET response (processed)
  {
    "type": "auto_segment",
    "status": "processed",
    "id": "d7dfd636-098c-4b1b-83e5-15a3cba5a0bd",
    "title": "<h1>Your content title text</h1>",
    "summary": "<h2>Your content summary text</h2>",
    "body": "<p>Your content body text</p>",
    "source_id": "article-id-in-your-cms",
    "source_url": "https://example.com/some-article",
    "author": "Steve Jobs",
    "image_url": "https://example.com/image.jpeg",
    "audio": [
      {
        "id": 36553942,
        "content_type": "application/x-mpegURL",
        "url": "https://example.com/media.m3u8",
        "duration": 7051
      },
      {
        "id": 36553929,
        "content_type": "audio/mpeg",
        "url": "https://example.com/media_compiled.mp3",
        "duration": 7056
      }
    ],
    "video": [],
    "segments": [
      {
        "marker": "0a2bae2e-542f-498e-95c4-91dfc403eb8b",
        "section": "title",
        "start_time": 45,
        "duration": 1730,
        "id": 95737414,
        "content_type": "text",
        "text": "Your content title text",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English (USA)"
        },
        "voice": {
          "id": 298,
          "name": "Matthew"
        },
        "created": "2023-07-26T05:02:24Z",
        "updated": "2023-07-26T05:02:25Z"
      },
      {
        "marker": "b012ad1b-7366-4ed1-a6f2-b855665065ad",
        "section": "summary",
        "start_time": null,
        "duration": null,
        "id": 95737415,
        "content_type": "text",
        "text": "Your content summary text",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English (USA)"
        },
        "voice": {
          "id": 776,
          "name": "Sara"
        },
        "created": "2023-07-26T05:02:24Z",
        "updated": "2023-07-26T05:02:25Z"
      },
      {
        "marker": "ad212f8f-8356-4059-9ee9-c5b1406f70b7",
        "section": "body",
        "start_time": 1841,
        "duration": 2595,
        "id": 95737416,
        "content_type": "text",
        "text": "Your content summary text",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English (USA)"
        },
        "voice": {
          "id": 776,
          "name": "Sara"
        },
        "created": "2023-07-26T05:02:24Z",
        "updated": "2023-07-26T05:02:25Z"
      },
      {
        "marker": "76bfc232-2755-4da7-86b1-222a66434444",
        "section": "body",
        "start_time": 4503,
        "duration": 2559,
        "id": 95737417,
        "content_type": "text",
        "text": "Your content body text",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English (USA)"
        },
        "voice": {
          "id": 776,
          "name": "Sara"
        },
        "created": "2023-07-26T05:02:24Z",
        "updated": "2023-07-26T05:02:25Z"
      }
    ],
    "ads_enabled": true,
    "is_copy": false,
    "title_voice_id": null,
    "summary_voice_id": null,
    "body_voice_id": null,
    "metadata": {
      "key": "value"
    },
    "created": "2023-01-01T00:00:00Z",
    "updated": "2023-01-01T00:00:05Z",
    "published": true,
    "publish_date": "2023-01-01T00:00:00Z",
    "auto_segment_updates_enabled": true
  }
  ```
</CodeGroup>

### manual\_segment

We recommend the `manual_segment` option for publishers seeking enhanced control over the audio conversion of their content. This is particularly beneficial for those who wish to integrate the content API into their editorial interface or create videos with multiple images (coming soon).

To use this option set `type` property to `manual_segment` whenever you create or update a content item.

Using this option, you **should not** submit any data to the `title`, `body` or `summary` properties.

Instead, you will need to submit an array of one or multiple `segments`.

For each segment you submit you will need to submit data to the following properties:

| Property       | Options                                                                                                                                                                                                                       |
| :------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `section`      | Use this property define the section type of a segment as either `title`, `summary` or `body`.                                                                                                                                |
| `content_type` | If `content_type` is `text` then submit plain text to be converted into audio. If no `voice_id` is submitted then the audio will be generated with the default project voices assigned title, summary or body in the project. |
|                | If `content_type` is `audio` then submit an `audio_url` to be uploaded.                                                                                                                                                       |
|                | If `content_type` is `image` then submit an `image_url` to be uploaded.                                                                                                                                                       |

Once submitted, BeyondWords will generate the audio for segments with text and then concatenate all segments into a single audio.

Text and audio will be included in generated audios and text, audio and images will be included in generated videos (coming soon).

**Example request and responses:**

<CodeGroup>
  ```json Example POST request
  {
    "type": "manual_segment",
    "source_id": "example-source-id",
    "source_url": "https://example.com/some-article",
    "author": "Steve Jobs",
    "image_url": "https://example.com/image.jpeg",
    "metadata": {
      "key": "value"
    },
    "segments": [
      {
        "section": "title",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6310a5",
        "content_type": "text",
        "text": "This is a title",
        "voice": {
          "id": 1
        }
      },
      {
        "section": "body",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6310a2",
        "content_type": "text",
        "text": "This is a paragraph",
        "voice": {
          "id": 1
        }
      },
      {
        "section": "body",
        "content_type": "image",
        "image_url": "https://example.com/image.jpeg"
      },
      {
        "section": "body",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6311a5",
        "content_type": "text",
        "text": "This is another paragraph",
        "voice": {
          "id": 1
        }
      },
      {
        "section": "body",
        "marker": "75aa616c-1849-4d71-bb3b-7691cc6310a5",
        "content_type": "audio",
        "audio_url": "https://example.com/audio.mp3"
      },
      {
        "section": "body",
        "marker": "75aa416c-1849-4d70-bb3b-7691cc6310a5",
        "content_type": "text",
        "text": "This is another paragraph",
        "voice": {
          "id": 1
        }
      }
    ],
    "published": true,
    "ads_enabled": false,
    "auto_segment_updates_enabled": false
  }
  ```

  ```json Example GET response
  {
    "id": "d7dfd636-098c-4b1b-83e5-15a3cba5a0bd",
    "status": "processed",
    "type": "manual_segment",
    "title": null,
    "summary": null,
    "body": null,
    "source_id": "example-source-id",
    "source_url": "https://example.com/some-article",
    "author": "Steve Jobs",
    "image_url": "https://example.com/image.jpeg",
    "metadata": {
      "key": "value"
    },
    "audio": [
      {
        "id": 1,
        "content_type": "application/vnd.apple.mpegurl",
        "url": "https://example.com/audio.m3u8",
        "duration": 10000
      },
      {
        "id": 2,
        "content_type": "audio/mpeg,",
        "url": "https://example.com/audio.mp3",
        "duration": 10000
      }
    ],
    "video": [],
    "segments": [
      {
        "id": 1,  
        "section": "title",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6310a5",
        "content_type": "text",
        "text": "This is a title",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English"
        },
        "voice": {
          "id": 123,
          "name": "Steve"
        },
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      },
      {
        "id": 2,
        "section": "body",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6310a2",
        "content_type": "text",
        "text": "This is a paragraph",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English"
        },
        "voice": {
          "id": 123,
          "name": "Steve"
        },
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      },
      {
        "id": 3,
        "section": "body",
        "content_type": "image",
        "text": null,
        "audio_url": null,
        "image_url": "https://example.com/image.jpeg",
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      },
      {
        "id": 4,
        "section": "body",
        "marker": "75aa616c-1849-4d70-bb3b-7691cc6311a5",
        "content_type": "text",
        "text": "This is another paragraph",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English"
        },
        "voice": {
          "id": 123,
          "name": "Steve"
        },
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      },
      {
        "id": 5,
        "section": "body",
        "marker": "75aa616c-1849-4d71-bb3b-7691cc6310a5",
        "content_type": "audio",
        "text": null,
        "audio_url": "https://example.com/image.mp3",
        "image_url": null,
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      },
      {
        "id": 6,
        "section": "body",
        "marker": "75aa416c-1849-4d70-bb3b-7691cc6310a5",
        "content_type": "text",
        "text": "This is another paragraph",
        "audio_url": null,
        "image_url": null,
        "language": {
          "code": "en_US",
          "name": "English"
        },
        "voice": {
          "id": 123,
          "name": "Steve"
        },
        "start_time": 3,
        "duration": 2000,
        "created": "2023-01-01T00:00:00Z",
        "updated": "2023-01-01T00:00:05Z"
      }
    ],
    "ads_enabled": true,
    "auto_segment_updates_enabled": true,
    "created": "2023-01-01T00:00:00Z",
    "updated": "2023-01-01T00:00:05Z"
  }
  ```
</CodeGroup>

### audio\_upload

We recommend `audio_upload` option for publishers that want to host podcasts or human-recorded articles on BeyondWords and leverage the BeyondWords Player, podcast feeds and analytics.

To use this option set the `type` property to `audio_upload` whenever you create or update a content item.

Using this option, you should submit a `title`, `body` and `segments` array with a single segment object with `section` set to `title`, `content_type` set to `audio` and an `audio_url` with a URL to the audio file to be upload.

<Info>
  The title and body text will not be converted into audio. However the text may be present in the player or podcast feeds depending on your player or playlist settings.
</Info>

**Example request:**

```json Example POST request
{
  "type": "audio_upload",
  "title": "Podcast episode title",
  "body": "Podcast episode description",
  "source_id": "example-source-id",
  "source_url": "https://example.com/some-article",
  "author": "Harry Stebbings",
  "image_url": "https://example.com/image.jpeg",
  "metadata": {
    "key": "value"
  },
  "segments": [
    {
      "section": "title",
      "content_type": "audio",
      "audio_url": "https://example.com/audio.mp3"
    }
  ],
  "published": true,
  "ads_enabled": true,
  "auto_segment_updates_enabled": false
}
```


# Get content
Source: https://docs.beyondwords.io/api-reference/content/show

get /projects/{project_id}/content/{id}
Get a content item from your project



# Summarize content
Source: https://docs.beyondwords.io/api-reference/content/summarize

post /projects/{project_id}/content/{id}/summarize
Create summary.



# Update content
Source: https://docs.beyondwords.io/api-reference/content/update

put /projects/{project_id}/content/{id}
Update a content item from your project



# Create filter
Source: https://docs.beyondwords.io/api-reference/html-filters/create

post /html_filters
Creates a html filter



# Delete filter
Source: https://docs.beyondwords.io/api-reference/html-filters/delete

delete /html_filters/{id}
Deletes a html filter



# List filters
Source: https://docs.beyondwords.io/api-reference/html-filters/list

get /html_filters
Html filters in a organization



# Overview
Source: https://docs.beyondwords.io/api-reference/html-filters/overview



You can use the API to configure which HTML elements should be included or excluded from audio generation.

For example, if you want to exclude `<h2>` subheadings from audio generation, you can add a filter to do so.

```json Example
{
  "element_type": "h2",
  "include": false,
}
```

To make HTML filters as flexible as possible, you can define them based on the following:

* `element_type`: `<H2>`, `<blockquote>`, `<ul>`, `<table>` etc.
* `element_class`: `.header`, `.footer`, `.aside` etc.
* `element_id`: `#advert`, `#related`, `#navigation` etc.
* `element_data`: `data-include`, `data-exclude` etc.
* `element_xpath`: `//\*[@role='dialog']` etc.
* `value`: “Sponsored” etc

You can also combine attributes to create more targeted filters. For example, to exclude only `<h3>` subheadings with the class “header” that contain the word “title”:

```json Example
{
  "element_type": "h3",
  "element_class": "header",
  "value": "title",
  "include": false,
}
```

**Note**: Other than with `element_xpath`, when specifying elements, classes, or other HTML attributes, provide only the name or identifier. Do not include prefix characters such as \<, ., #, or any other syntax.


# Get filter
Source: https://docs.beyondwords.io/api-reference/html-filters/show

get /html_filters/{id}
Gets a html filter



# Update filter
Source: https://docs.beyondwords.io/api-reference/html-filters/update

put /html_filters/{id}
Updates html filter



# List languages
Source: https://docs.beyondwords.io/api-reference/languages/list

get /organization/languages
Lists available languages



# Update quota settings
Source: https://docs.beyondwords.io/api-reference/organization-settings/update-quota-settings

put /organization/settings/quota
Updates a quota settings in a organization



# Overview
Source: https://docs.beyondwords.io/api-reference/overview

Learn about the BeyondWords API

# BeyondWords API overview

The BeyondWords API is a RESTful API that provides headless access to the entire platform, allowing you to programmatically create, manage, and deliver audio content.

## API basics

* **Base URL**: `https://api.beyondwords.io/`
* **Format**: The API accepts form-encoded request bodies and returns JSON-encoded responses
* **Design**: Uses predictable resource-oriented URLs and standard HTTP methods
* **Status Codes**: Uses standard HTTP response codes to indicate success or failure

## Authentication

All API requests require authentication using your Project ID and API Key.

### Obtaining credentials

1. [Create a BeyondWords account](https://dash.beyondwords.io/auth/signup)
2. Create a project in the dashboard
3. Navigate to **Settings > Integrations > API** to find your Project ID and API Key

### Security best practices

* Your API key carries many privileges, so be sure to safeguard it
* Never share your API key in publicly accessible places such as client-side code or GitHub
* Consider using environment variables to store your API credentials

### Authentication methods

Most endpoints require the `X-Api-Key` header for authentication:

```bash
# API request example
curl -X GET "https://api.beyondwords.io/v1/endpoint" \
  -H "X-Api-Key: YOUR_API_KEY"
```

Most endpoints also require your Project ID, which is typically included as a path parameter. Each endpoint in this documentation will clearly indicate whether a Project ID is required.

## Request guidelines

* All API requests must use HTTPS; requests over plain HTTP will fail
* Requests without proper authentication will be rejected with a 401 Unauthorized response
* Include a content-type header of `application/json` for requests with JSON bodies

## Versioning

The API uses versioned endpoints to ensure compatibility:

* Current stable version: `v1`
* Include the version in the URL path: `https://api.beyondwords.io/v1/endpoint`

## Error handling

The API uses conventional HTTP response codes:

* `2xx` - Success
* `4xx` - Client errors (invalid request)
* `5xx` - Server errors

Error responses include a JSON body with details:

```json
{
  "error": {
    "code": "invalid_request",
    "message": "A detailed error message",
    "details": { /* Additional context */ }
  }
}
```

## Getting help

If you encounter issues or have questions:

* Contact [support@beyondwords.io](mailto:support@beyondwords.io)


# Get player settings
Source: https://docs.beyondwords.io/api-reference/player-settings/show

get /projects/{project_id}/player_settings
Get the player settings for your project



# Update player settings
Source: https://docs.beyondwords.io/api-reference/player-settings/update

put /projects/{project_id}/player_settings
Updates the player settings for a project



# Get player by content ID
Source: https://docs.beyondwords.io/api-reference/player/show

get /projects/{project_id}/player/by_content_id/{id}
Gets player data related to a content item



# Get player by playlist ID
Source: https://docs.beyondwords.io/api-reference/player/show-1

get /projects/{project_id}/player/by_playlist_id/{id}
Gets player data related to a playlist



# Get player by source ID
Source: https://docs.beyondwords.io/api-reference/player/show-2

get /projects/{project_id}/player/by_source_id/{id}
Gets player data related to a content item



# Get player by source URL
Source: https://docs.beyondwords.io/api-reference/player/show-3

get /projects/{project_id}/player/by_source_url/{url}
Gets player data related to a content item



# Get player by multiple identifiers
Source: https://docs.beyondwords.io/api-reference/player/show-4

get /projects/{project_id}/player/by_identifiers/{array}
Gets player data related to a content item



# Create playlist
Source: https://docs.beyondwords.io/api-reference/playlists/create

post /projects/{project_id}/playlists
Creates a playlist in a project



# Delete playlist
Source: https://docs.beyondwords.io/api-reference/playlists/delete

delete /projects/{project_id}/playlists/{id}
Deletes a custom playlist from a project



# List playlists
Source: https://docs.beyondwords.io/api-reference/playlists/list

get /projects/{project_id}/playlists
Lists playlists within a project



# Get playlist
Source: https://docs.beyondwords.io/api-reference/playlists/show

get /projects/{project_id}/playlists/{id}
Gets a playlist from a project



# Get playlist settings
Source: https://docs.beyondwords.io/api-reference/playlists/show-1

get /projects/{project_id}/playlists/{playlist_id}/settings
Gets the feed settings for a playlist



# Update playlist
Source: https://docs.beyondwords.io/api-reference/playlists/update

put /projects/{project_id}/playlists/{id}
Updates a playlist in a project



# Update playlist settings
Source: https://docs.beyondwords.io/api-reference/playlists/update-1

put /projects/{project_id}/playlists/{playlist_id}/settings
Updates the feed settings for a playlist



# Add member to project
Source: https://docs.beyondwords.io/api-reference/project-members/add-member-to-project

post /projects/{project_id}/members/add
Add member to project



# Delete a project member
Source: https://docs.beyondwords.io/api-reference/project-members/delete

delete /projects/{project_id}/members/{id}
Deletes a project member in a project.



# Get project members
Source: https://docs.beyondwords.io/api-reference/project-members/list

get /projects/{project_id}/members
Lists project members within a project



# Create a project voice
Source: https://docs.beyondwords.io/api-reference/project-voices/create

post /organization/voices/permissions
Add a voice permission to a project



# Delete a project voice
Source: https://docs.beyondwords.io/api-reference/project-voices/delete

delete /organization/voices/permissions/{id}
Deletes a voice in a project.



# List project voices
Source: https://docs.beyondwords.io/api-reference/project-voices/list

get /organization/voices/permissions
Lists project voices within a project



# Get project voice
Source: https://docs.beyondwords.io/api-reference/project-voices/show

get /organization/voices/permissions/{id}
Gets a project voice



# Create project
Source: https://docs.beyondwords.io/api-reference/projects/create

post /projects
Creates a project in your organization



# Delete project
Source: https://docs.beyondwords.io/api-reference/projects/delete

delete /projects/{id}
Deletes a project



# List projects
Source: https://docs.beyondwords.io/api-reference/projects/list

get /projects
Lists all projects in your organization



# Get project
Source: https://docs.beyondwords.io/api-reference/projects/show

get /projects/{id}
Gets a project from your organization



# Update project
Source: https://docs.beyondwords.io/api-reference/projects/update

put /projects/{id}
Updates a project in your organization



# Get project voices
Source: https://docs.beyondwords.io/api-reference/projects/voices

get /projects/{id}/voices
Gets a project voices



# Create a role
Source: https://docs.beyondwords.io/api-reference/roles/create

post /roles
Creates a role in a organization



# Delete a role
Source: https://docs.beyondwords.io/api-reference/roles/delete

delete /roles/{id}
Deletes a role from your organization



# Get roles
Source: https://docs.beyondwords.io/api-reference/roles/list

get /roles
Lists roles in a organization



# Get role permissions
Source: https://docs.beyondwords.io/api-reference/roles/permissions

get /roles/permissions
Permissions list



# Get a role
Source: https://docs.beyondwords.io/api-reference/roles/show

get /roles/{id}
Gets a role from your organization



# Update a role
Source: https://docs.beyondwords.io/api-reference/roles/update

put /roles/{id}
Updates role in a organizaiton



# Create RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/create

post /projects/{project_id}/integrations/rss_importer/feeds
User should be able to create an RSS feed.



# Delete RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/delete

delete /projects/{project_id}/integrations/rss_importer/feeds/{id}
User should be able to delete an RSS feed.



# List RSS feed imports
Source: https://docs.beyondwords.io/api-reference/rss-feed/list

get /projects/{project_id}/integrations/rss_importer/feeds
User should be able to list all RSS feeds.



# Run RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/run

post /projects/{project_id}/integrations/rss_importer/feeds/{id}/run
User should be able to run an RSS feed bypassing the "import_interval".



# Get RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/show

get /projects/{project_id}/integrations/rss_importer/feeds/{id}
Gets a RSS feed



# Test RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/test

post /projects/{project_id}/integrations/rss_importer/feeds/test
User should be able to run an RSS feed bypassing the "import_interval".



# Update RSS feed import
Source: https://docs.beyondwords.io/api-reference/rss-feed/update

put /projects/{project_id}/integrations/rss_importer/feeds/{id}
Request body can include all but the readonly props.



# Create pronunciation rule
Source: https://docs.beyondwords.io/api-reference/rules/create

post /rules
Creates a rule in a organization



# Delete pronunciation rule
Source: https://docs.beyondwords.io/api-reference/rules/delete

delete /rules/{id}
Deletes a rule from your organization



# List pronunciation rules
Source: https://docs.beyondwords.io/api-reference/rules/list

get /rules
Lists rules in a organization



# Get phonemes
Source: https://docs.beyondwords.io/api-reference/rules/phonemes

get /rules/phonemes
Phonemes list



# Generate pronunciation preview
Source: https://docs.beyondwords.io/api-reference/rules/preview

post /rules/preview
Preview audio for organization rule



# Regenerate pronunciation preview
Source: https://docs.beyondwords.io/api-reference/rules/regenerate-preview

post /rules/{id}/regenerate_preview
Regenerate organization rule preview



# Get pronunciation rule
Source: https://docs.beyondwords.io/api-reference/rules/show

get /rules/{id}
Gets a rule from your organization



# Transcribe rule
Source: https://docs.beyondwords.io/api-reference/rules/transcribe

post /rules/transcribe
Transcribe



# Update pronunciation rule
Source: https://docs.beyondwords.io/api-reference/rules/update

put /rules/{id}
Updates rule in a organizaiton



# Get project summarization settings
Source: https://docs.beyondwords.io/api-reference/summarization-settings/show

get /projects/{project_id}/summarization_settings
Get the summarization settings for your project



# Update project summarization settings
Source: https://docs.beyondwords.io/api-reference/summarization-settings/update

put /projects/{project_id}/summarization_settings
Update the summarization settings for your project



# Get video settings
Source: https://docs.beyondwords.io/api-reference/video-settings/show

get /projects/{project_id}/video_settings
Get the video settings for your project



# Update video settings
Source: https://docs.beyondwords.io/api-reference/video-settings/update

put /projects/{project_id}/video_settings
Update the video settings for your project



# Clone voice
Source: https://docs.beyondwords.io/api-reference/voices/clone

post /organization/voices/{id}/clone
Clones a voice from cloning_consent and an uploaded utterance



# Create voice
Source: https://docs.beyondwords.io/api-reference/voices/create

post /organization/voices
Creates a voice in your organization



# Delete voice
Source: https://docs.beyondwords.io/api-reference/voices/delete

delete /organization/voices/{id}
Deletes a voice that is available to your organization



# List voices
Source: https://docs.beyondwords.io/api-reference/voices/list

get /organization/voices
Lists all voices available to your organization



# Get voice
Source: https://docs.beyondwords.io/api-reference/voices/show

get /organization/voices/{id}
Get a voice that is available to your organization



# Update voice
Source: https://docs.beyondwords.io/api-reference/voices/update

put /organization/voices/{id}
Updates a voice that is available to your organization



# Create webhook
Source: https://docs.beyondwords.io/api-reference/webhooks/create

post /projects/{project_id}/webhooks
Creates a webhook in project.



# Delete webhook
Source: https://docs.beyondwords.io/api-reference/webhooks/delete

delete /projects/{project_id}/webhooks/{id}
Deletes a webhook in a project.



# List webhooks
Source: https://docs.beyondwords.io/api-reference/webhooks/list

get /projects/{project_id}/webhooks
Lists webhooks within a project



# Get webhook
Source: https://docs.beyondwords.io/api-reference/webhooks/show

get /projects/{project_id}/webhooks/{id}
Gets a webhook in a project



# Test webhook
Source: https://docs.beyondwords.io/api-reference/webhooks/test

post /projects/{project_id}/webhooks/test
Test project webhook



# Update webhook
Source: https://docs.beyondwords.io/api-reference/webhooks/update

put /projects/{project_id}/webhooks/{id}
Updates a webhook in a project



# Members and Roles
Source: https://docs.beyondwords.io/docs-and-guides/administration/members-and-roles

Learn how to manage team members and their roles in BeyondWords

## Overview

In BeyondWords, you can manage team members and their roles in the **Members** section. Click on the top left menu and go to **Organization > Members**.

The Members page, which can be found by going to Organization > Members, shows a list of current members. Here, you can see each member that belong to your organization, their role, their status, and their join date.

## Invite a member to your organization

To invite a member to your organization:

1. Go to **Organization > Members > All members**.
2. Click the **Invite** button.
3. Enter the email address of the person you want to invite.
4. Enter the first name and last name of the person you want to invite.
5. Select the role for the person you want to invite.
6. Add a profile picture (optional).
7. You can select the project(s) you want your invitee to automatically join.
8. Click **Send invite**. New members will receive an invite link via email along with steps to join the project.

<Note>
  In case an email server is filtering out invitation emails, we recommend whitelisting [support@mail.beyondwords.io](mailto:support@mail.beyondwords.io) as a trusted sender in email settings.
</Note>

## Resend an invite

To resend an invite:

1. Go to **Organization > Members > All members**.
2. Click the **⋯** next to the member you want to resend the invite to and then click **Resend invite**.

## Remove a member from your organization

To remove a member from your organization:

1. Go to **Organization > Members > All members**.
2. Click the **⋯** next to the member you want to remove and then click **Delete**.

## Change a member's role

To change a member's role:

1. Go to **Organization > Members > All members**.
2. Click the **⋯** next to the member you want to change the role of and then click **Edit**.
3. Select the new role from the dropdown menu.
4. Click **Save changes**.

## Change a member's project access

To change a member's project access:

1. Go to **Organization > Members > All members**.
2. Click the **⋯** next to the member you want to change the project access of and then click **Edit**.
3. Add or remove projects from the member's project access.
4. Click **Save changes**.

Alternatively, you can change a member's project access by going to \*\*Project > **Settings > Members**.

## Create a new role

To create a new role:

1. Go to **Organization > Members > Roles**.
2. Click the **+ Role**.
3. Enter the name of the new role.
4. Select the permissions for the new role.
5. Click **Save changes**.

## Edit a role

To edit a role:

1. Go to **Organization > Members > Roles**.
2. Click the **⋯** next to the role you want to edit and then click **Edit**.
3. Edit the name and permissions of the role.
4. Click **Save changes**.

<Note>
  You cannot edit the Owner role.
</Note>

## Delete a role

To delete a role:

1. Go to **Organization > Members > Roles**.
2. Click the **⋯** next to the role you want to delete and then click **Delete**.
3. Click **Confirm** to delete the role.

<Note>
  You cannot delete the Owner, Admin or Collaborator roles.
</Note>


# Organization
Source: https://docs.beyondwords.io/docs-and-guides/administration/organization

Update your organization details in BeyondWords

### How to update your organization details

<Steps>
  <Step title="Go to the Organization settings">
    Click on the top left menu and select Organization.
  </Step>

  <Step title="Update organization details">
    <Info>
      Your organization name will be visible to your team.
    </Info>

    In organization settings, you can update the following:

    * Organization name
    * Legal name
    * Website
    * Address
      * Address line 1
      * Address line 2
      * City
      * State
      * Zip code / Post code
      * Country
  </Step>

  <Step title="Save changes">
    Click on the "Save changes" button to save the changes.
  </Step>
</Steps>


# Profile
Source: https://docs.beyondwords.io/docs-and-guides/administration/profile

Update your profile in BeyondWords

### How to update your profile details

<Steps>
  <Step title="Go to Profile settings">
    Click on the top left menu and select Profile.
  </Step>

  <Step title="Update profile details">
    <Info>
      Your profile details will be visible to your team.
    </Info>

    In profile settings, you can update the following:

    * First name
    * Last name
    * Profile picture
  </Step>

  <Step title="Save changes">
    Click on the "Save changes" button to save the changes.
  </Step>
</Steps>

<Tip>
  To update your email address, please contact support.
</Tip>


# Projects
Source: https://docs.beyondwords.io/docs-and-guides/administration/projects

Create and update your projects in BeyondWords

In BeyondWords, all your content is organized into Projects. A Project is your AI audio CMS.

## Create a project

<Steps>
  <Step title="Click + Project">
    Click on the top left menu and click **+ Project**.
  </Step>

  <Step title="Enter a name">
    Enter a name for your project.
  </Step>

  <Step title="Set your project language and accent">
    Select the language and accent for your project.
  </Step>

  <Step title="Upload a logo (optional)">
    Upload a logo for your project. This will make it easier to identify your project in the future.
  </Step>

  <Step title="Save changes">
    Click **Save changes** to create your project.
  </Step>
</Steps>

## Update project settings

Click on the top left menu and click on the project you want to update. Go to the **Settings** tab and click **General**. Here you will be able to update the following:

* **Project name** - The name of your project.
* **Project logo** - The logo of your project.
* **Project time zone** - The time zone of your project.

<Info>
  Choose the time zone for scheduling and analytics reporting in your project.
</Info>

* **Automatic publishing** - Whether to automatically publish articles. Enabled by default.

<Tip>
  To update the default project language, accent and voice, go to the **Voice** tab.
</Tip>


# Quota
Source: https://docs.beyondwords.io/docs-and-guides/administration/quota

Manage your usage limits and quotas

## Overview

Each BeyondWords plan has a fixed quota. This quota is shared between all your projects. You can see your quota in the quota widget in the bottom left corner of each project.

## Article quota

Each subscription plan includes a specific article quota, which is the maximum number of articles you can generate into audio each month. We consider one article to be up to 5,000 characters, including spaces. Therefore, if an article exceeds this limit, such as being 7,000 characters, it will count as two articles.

### Regenerating articles

When you edit an article, such as changing a word in a paragraph and regenerating the audio, this will not count towards your quota. However, changing voices or adding new paragraphs will affect your article limit if the total article size exceeds 5,000 characters.

### Rollover policy

Please note that unused articles will not roll over to the next billing cycle, and deleting audio will not restore your article count. The monthly quota renews based on the start date of your subscription.

## Plan changes

### Upgrading your plan

If you upgrade your plan, the upgrade takes effect immediately. Your quota will be refreshed with the new article quota limit, and any unused articles from your previous plan will not roll over. Your first payment will be adjusted accordingly if necessary.

### Downgrading your plan

If you downgrade your plan, the change will not take effect until the end of your current billing cycle. On the first day of your new billing cycle, your quota will be updated to reflect your new plan, and any unused articles from your previous plan's quota will be lost. Your subscription will automatically renew at the end of each billing cycle, and your article quota will reset.

## Usage-based pricing

For Personal, Pro, Plus, and Premium plans, you can enable usage-based pricing, which allows you to access additional articles after your monthly quota is exhausted.

The cost per additional article varies by plan:

* Personal: \$0.90 per article
* Pro: \$0.70 per article
* Plus: \$0.60 per article
* Premium: \$0.50 per article

You can enable usage-based billing and set a monthly limit in the **Organization > Subscriptions > Overage** section. Additional charges will be billed at the end of your billing cycle or whenever your account reaches \$25 in usage, whichever occurs first.


# Subscriptions
Source: https://docs.beyondwords.io/docs-and-guides/administration/subscriptions

Manage your subscription and billing

When you sign up, you’ll automatically start on the **Pilot** plan. To check your subscription, go to **Organization > Subscriptions > Plans**. You’ll find a breakdown of all available plans, plus a comparison table to help you see what’s included in each.

## Change your plan

To change your plan, go to **Organization > Subscriptions > Plans**. Select the plan you want to change to and click **Upgrade** or **Downgrade**.

We offer five public plans: Pilot, Personal, Pro, Plus, Premium. For larger organizations, there’s also an Enterprise option, tailored to specific needs and usage.

## Cancel your subscription

To cancel your subscription, go to **Organization > Subscriptions > Billing**. Click **Cancel** and follow the instructions.

## Change your billing information

To change your billing information, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can update your billing information.

## Change your payment method

To change your payment method, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can update your payment method.

## Change your billing email

To change your billing email, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can update your billing email.

## Change your billing address

To change your billing address, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can update your billing address.

## Add your Tax ID/VAT number

To add your Tax ID/VAT number, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can add your Tax ID/VAT number.

## Change your billing country

To change your billing country, go to **Organization > Subscriptions > Billing**. Click **Manage billing**. You will be redirected to Stripe where you can change your billing country.


# Player
Source: https://docs.beyondwords.io/docs-and-guides/analytics/player

Track and analyze audio engagement

## Overview

The BeyondWords player tracks how your audience engage, distilling data into a set of key metrics for clear and actionable insights.

![player](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/analytics/playeranalytics.png)

## Metrics

BeyondWords tracks the following metrics on a per-project and per-article basis. The metrics are updated every few minutes.

### Plays

The number of times users hit play. We count one play per user session.

### Loads

The number of times a page was loaded with the player. We count one load per user session.

### Engagement rate

The percentage of Loads that converted into Plays. We calculate this as Plays divided by Loads.

### Unique users

The number of unique users who hit play. We identify users with an anonymous ID stored in their browser.

### Avg. playback duration

The average percentage completed per play. We measure this across all plays.

### Drop-off analysis

The percentage of users remaining at each 10% interval. Shows how many continue from start to finish.

### Playback time

The cumulative playback time of all plays. We measure this across all plays.

### Avg. playback time

The average time spent per play. We measure this across all plays.

### Device analysis

The percentage of users who played on each device.

## Filter metrics

You can filter the metrics by the following:

* **Content type**: Articles or Summaries
* **Device**: Desktop, Mobile (web), Tablet (web), iOS (SDK), Android (SDK)
* **Date range**: All time, Month to date, Today, Yesterday, Last 7 days, Last 14 days, Last 30 days, Last 90 days, Last 180 days, Custom


# Preferences
Source: https://docs.beyondwords.io/docs-and-guides/analytics/preferences

Configure analytics settings and preferences

## Overview

You can configure analytics preferences for your project. Go to **Project > Analytics > Preferences**

![player](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/analytics/analyticspreferences.png)

### General

#### Track analytics

You can enable or disable analytics tracking for your project. You will need to **Save changes** to apply changes.

#### Track unique users

You can enable or disable unique user tracking for your project. You will need to **Save changes** to apply changes.

### Integrations

#### Send data to Google Analytics

To send data to Google Analytics:

1. Enter your Google Analytics tracking ID.
2. Turn on **Send data to Google Analytics**.
3. Click **Save changes**.

#### Send data to Custom analytics URL

To send data to a custom analytics URL:

1. Enter the URL to send data to.
2. Turn on **Send data to Custom analytics URL**.
3. Click **Save changes**.


# Audio articles
Source: https://docs.beyondwords.io/docs-and-guides/content/articles

Learn how to manage your audio articles in BeyondWords

## Overview

Audio articles are the core content type in BeyondWords. Each article can also have an **audio summary**, **video article**, and **video summary** associated with it.

In the **Articles** section you will see a list of all your audio articles ordered by the date that they were published. For each article you will be able to see the **Title**, **Duration**, **Publication date**, **Feature image**, **Visibility status**, whether it has a **summary** and or **video**, and a direct link to **analytics**.

![editor](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/articles.png)

## Article actions

For each article you can do the following by clicking on the **⋯** button:

### Edit the article

This will open the **Editor** where you can edit the article content.

### Regenerate the audio

This will regenerate the audio for the article. Useful for applying new custom pronunciations.

### Replace the audio

This lets you replace the AI-generated audio with a human-recorded version.

### Duplicate the article

This will create a new draft copy of the article that you can edit.

### Download the audio

This will download the audio file for the article.

### Get the embed code

This will open a modal where you can demo the audio in the player and also copy the player embed code.

### Copy the shareable URL

This will copy a URL that you can share with others to listen to the article.

### Copy the identifiers

Here you can copy the **Content ID**, **Source ID**, or **Source URL** for the article.

### Set the visibility

This will toggle the visibility of the article between **Public** and **Private**.

### Delete the article

This will delete the article from your project.

## Summaries

Click the summary icon to generate an audio summary for the article. If a summary already exists, a dialog will open where you can copy the player embed code with the summary or download the summary audio.

## Article videos

Click the video icon to generate a video for the article. If a video already exists, a dialog will open where you can copy the player embed code with the video or download the video.

## **Sorting and Filtering**

You can search your articles using:

* **Sort by**: Status, Creation Date, Duration, or Published Date
* **Filter by**: Status, Created Date, or Visibility

## **Bulk actions**

Apply changes to multiple articles at once:

* **Regenerate** audio for multiple articles (useful when updating pronunciations)
* **Set visibility** (Public or Private)
* **Delete** multiple articles


# Editor
Source: https://docs.beyondwords.io/docs-and-guides/content/editor

Learn how to generate audio using the Editor

## Overview

You can use the Editor to generate and edit audio from text. You can:

* Paste text directly to create audio and make edits.
* Modify audio generated through our API, Magic Embed, or CMS plugins.

Each audio article is structured into segments, typically aligned with article paragraphs. By default, all segments use the project's language and voice, but you can adjust them individually as needed.

![editor](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/editor.png)

### Use the Editor to generate audio

<Steps>
  <Step title="Open the Editor">
    In your project, go to the Content section and click "+ Article" to open the Editor.
  </Step>

  <Step title="Paste your text">
    Paste your article text into the editor. The text paragraphs will be automaticlally split into segments and assigned the the default project language and voice.

    <Tip>
      You can edit the default project language and voice in the [voices tab](/preferences/voices).
    </Tip>
  </Step>

  <Step title="Generate audio">
    Click the "Generate" button to generate audio for your article.

    <Info>
      It can take a few seconds to generate audio depending on the length of the article. Once generated, the audio will be accessible in the Articles section.
    </Info>
  </Step>
</Steps>

### Use the Editor to modify audio

<Steps>
  <Step title="Open the Editor">
    In your project, go to the Content section, find the Article you want to modify and click on the (•••) menu next to it, and click "Edit".
  </Step>

  <Step title="Modify the audio">
    Edit the text of the segment you want to modify.
  </Step>

  <Step title="Regenerate the audio">
    Click the "Update" button to apply the changes and regenerate the audio for your article.

    <Info>
      It can take a few seconds to regenerate the audio depending on your changes. Once regenerated, the updatedaudio will be accessible in the Articles section.
    </Info>
  </Step>
</Steps>

### Content preferences

For each audio article in the Editor, you can configure content preferences like metadata, pronunciations, summarization, video, background music, monetization, and visibility in the left sidebar - giving you full control over how your audio is generated and distributed.

#### Metadata

In the Metadata tab you can configure the following:

* **Author**: The article author. This data can be used to create Smart Playlists.
* **Featured image**: The article featured image. This is used to generate the article thumbnail in the Articles list and will also be used in your videos or player depending on your settings.
* **Content ID**: Copy the article content ID. This is the ID that we assign to the article after it's generated.
* **Source ID**: Copy or edit the article source ID. We recommend using the article ID from your CMS as the source ID.
* **Source URL**: Copy or edit the article Source URL. We recommend using the article URL as the source URL.
* **Properties**: Add or edit the article properties. We recommend adding the article category as a property. This data can be used to create Smart Playlists.

#### Pronunciations

In the Pronunciations tab you can configure which custom pronunciations will be applied when generating the audio for your article.

#### Summarization

In the Summarization tab, you can manage your article's summary settings. Choose whether to generate a summary, and if enabled, customize it by editing the system prompt. Click "Summarize" to generate a summary, which you can edit. The final summary will be generated when you update the article.

<Note>
  You will need to generate the audio for your article before you can generate a summary.
</Note>

#### Video

In the Video tab, you can manage your article's video settings. Choose whether to generate a video, and if enabled, customize it by editing the video settings. The video will be generated when you generate or update the article.

#### Background music

In the Background Music tab, you can manage your article's background music settings. Choose whether to add a background track to your article. The background music will be added when you generate or update the article.

#### Monetization

In the Monetization tab, you can manage your article's monetization settings. Choose whether the audio article should include any ads.

<Note>
  No ads will be included in the audio article if you don't have any ads in your project.
</Note>

#### Visibility

In the Visibility tab, you can manage your article's visibility settings. Choose whether the player should be visible or not.


# Background music
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/background-music

Learn how to add background music to your audio articles with BeyondWords

## Overview

You can include background music automatically whenever an audio article is created or manually add it to each article.

![background music](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/backgroundmusic.png)

## Include background music on all articles

<Steps>
  <Step title="Turn on background music">
    Go to the **Background music** tab in the **Content** section and enable background music.
  </Step>

  <Step title="Upload a background track">
    Click the **+ Track** button, upload a background track, give it a name, set the volume, and scope.
  </Step>

  <Step title="Set the default background track">
    Set the default background track to be used for all articles.
  </Step>

  <Step title="Save changes">
    Click **Save** to apply your changes. Moving forward, the background track will be added automatically to all new audio articles.
  </Step>
</Steps>

<Tip>
  To include the background track on existing articles, manually update them in the **Editor** or by clicking **Regenerate**. Otherwise, background music will only be added to new articles.
</Tip>

## Add background music to a specific article

<Steps>
  <Step title="Find the article">
    Go to the **Articles** section and locate the article you want to add background music to.
  </Step>

  <Step title="Open the background music settings">
    * Click the **⋯** button next to the article and then click **Edit**.
    * This will open the **Editor**.
    * Click the **Background music** tab.
  </Step>

  <Step title="Add background music">
    Turn on background music and select the background track you want to use.

    <Note>
      If you don't see the background track you want to use, you will need to upload it first in the **Background music** tab in the **Content** section.
    </Note>
  </Step>

  <Step title="Update the article">
    Click **Update** to save changes and add the background music.
  </Step>
</Steps>


# Filters
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/filters

Learn how to filter what should be included or excluded from audio generation in BeyondWords

## Overview

In BeyondWords, you can filter what should be included or excluded from audio generation. This is useful if you want to ensure that certain content is not included in the audio generation process.

![filters](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/filters.png)

<Tip>
  This is most useful when using the Magic Embed or API to generate audio.
</Tip>

## Create a filter

To add a filter go to **Project > Content > Preferences > Filters**.

1. Click **+ Filter**.
2. Select the type of filter you want to create.
3. Enter the text you want to filter.
4. Select whether you want to include or exclude the content.
5. Set the scope of the filter.
6. Click **Save changes**.

<Steps>
  <Step title="Click + Filter">
    Click **+ Filter** to add a new filter.
  </Step>

  <Step title="Select the type of filter">
    Select the type of filter you want to create.

    > For example, you can select **Type** to filter by HTML element type.
  </Step>

  <Step title="Set the filter value">
    Specify the value you want to filter.

    > For example, yo can enter **H2** to filter H2 elements.

    <Info>
      When specifying elements, classes, or other HTML attributes, provide only the name or identifier. Avoid prefix characters like `<`, `.`, `#`, or any other syntax. The only exception is with `element_xpath`.
    </Info>
  </Step>

  <Step title="Select whether you want to include or exclude the content.">
    Select whether you want to include or exclude the content.

    > For example, you can select **Include** to include H2 elements in the audio.
  </Step>

  <Step title="Set the scope">
    Set where this filter should apply:

    * **All projects**: Use this filter in all your projects.
    * **This project only**: Use this filter in this project only.
  </Step>

  <Step title="Save changes">
    Click **Save changes** to save the filter.

    <Tip>
      To apply the filter to past articles, go to **Project > Content > Articles** click **⋯** and then click **Regenerate**. Otherwise, the filter will only apply to new articles.
    </Tip>
  </Step>
</Steps>

### Filter types

#### Element type

Create an **Element type** filter to include or exclude HTML elements based on their tag name.

> Filter content by HTML tag name such as `<H2>`, `<blockquote>`, `<ul>`, `<table>`, etc. This is useful for consistently including or excluding specific structural elements across your content.

#### Element class

Create an **Element class** filter to include or exclude HTML elements based on their class attribute.

> Filter content by CSS class names such as `.header`, `.footer`, `.aside`, etc. This filter will be applied to any element that contains the specified class, allowing you to target styled components.

#### Element ID

Create an **Element ID** filter to include or exclude HTML elements based on their ID attribute.

> Filter content by element IDs such as `#advert`, `#related`, `#navigation`, etc. This is useful for targeting unique elements on a page that you consistently want to include or exclude.

#### Element data

Create an **Element data** filter to include or exclude HTML elements based on their data attributes.

> Filter content by data attributes such as `data-include`, `data-exclude`, etc. This allows you to add custom data attributes to your HTML specifically for controlling audio generation.

#### Element XPath

Create an **Element XPath** filter to include or exclude HTML elements based on an XPath expression.

> Filter content using XPath expressions such as `//*[@role='dialog']`. This provides advanced targeting capabilities for complex document structures where other filter types may not be sufficient.

#### Value

Create a **Value** filter to include or exclude HTML elements based on the text they contain.

> Filter content by searching for specific text such as "Sponsored". This filter will be applied to any element that contains the specified text value, allowing you to target elements based on their content rather than structure.


# Pronunciations
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/pronunciations

Learn how to customize the pronunciation of words in your articles with BeyondWords

## Overview

You can customize how words are pronounced in your audio articles by adding **Pronunciations**. These rules ensure names, acronyms, and industry-specific terms sound just right.

![pronunciations](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/pronunciations.png)

## Create a pronunciation rule

To get started, you can either create pronunciations from the Pronunciations section of your project or through the Editor.

1. **Pronunciations tab** - Go to **Project > Content > Preferences** and click **+ Pronunciation**.
2. **Editor** - Highlight the word or phrase you want to add a pronunciation for and click **+ Pronunciation**.

<Steps>
  <Step title="Select type">
    Select the type of pronunciation rule you want to create:

    * **Substitute** – Replace a word with an alternative word or phrase.
    * **Say as Word** – Force an acronym to be pronounced as a word.
    * **Say as Letter Sequence** – Force an acronym to be pronounced as a sequence of letters.
    * **Language** – Force a word to be pronounced in a target language.
    * **Phonetic Spelling** – Customize the pronunciation of a word using a phonetic notation:
      * **IPA (International Phonetic Alphabet)**
      * **Jyutping (Cantonese Romanization)**
      * **Pinyin (Mandarin Romanization)**
  </Step>

  <Step title="Enter the word or phrase">
    Specify the exact text the rule should apply to.
  </Step>

  <Step title="Define the change">
    Depending on the pronunciation type, enter the substitute word, language, or phonetic spelling.
  </Step>

  <Step title="Set the language">
    Choose which language the pronunciation rule should apply to.
  </Step>

  <Step title="Preview the pronunciation">
    Use a premade voice to preview the pronunciation.

    <Note>
      At the moment, you cannot preview rules with custom voices.
    </Note>
  </Step>

  <Step title="Set the scope">
    Set where this pronunciation rule should apply:

    * **All projects**: Use this pronunciation in all your projects.
    * **This project only**: Use this pronunciation in this project only.
    * **This article only**: Use this pronunciation in this article only.

    <Tip>
      Update past articles to apply the new pronunciation. Otherwise, the pronunciation will only apply to new articles.
    </Tip>
  </Step>
</Steps>

<Note>
  You cannot add pronunciation rules for numbers on their own unless their scope is for a single article.
</Note>

### Pronunciation types

#### Substitute

Create a **Substitute** pronunciation to replace a word with an alternative word.

> Expand an acronym into words e.g. "CO2" as "carbon dioxide", or get your preferred pronunciation with a re-write e.g. read "scone" as "scon". Correct a heteronym e.g. choose "reed" for "read" not "red".

#### Say as word

Create a **Say as word** pronunciation to force an acronym to be said as a word.

> Make sure a word is read as a word e.g. UNESCO as "Unesco" not "U N E S C O".

#### Say as letter sequence

Create a **Say as letter sequence** pronunciation to force an acronym to be pronounced as a sequence of letters.

> Read a word out letter by letter e.g. " IT" as "I T" not "it".

#### Language

Create a **Language** pronunciation to force a word to be pronounced in a target language.

> For multilingual voices, switch to a second language for greater pronunciation accuracy e.g. tag "Frittura di paranza" to be read in Italian.

<Note>
  Not all voices support the Language rule type yet. This pronunciation type is only available for multilingual voices.
</Note>

#### Phonetic spelling

Create a **Phonetic spelling** pronunciation to define the pronunciation of a word using a notation type.

> Use the international phonetic alphabet to provide an exact pronunciation e.g. ˈniːs for Nice.

#### IPA

Select the IPA (international phonetic alphabet) notation type to force a word to be pronounced according to your preferences.

> Use IPA to provide an exact pronunciation e.g. ˈniːs for Nice.

To make it easier to create IPA pronunciations, you can use the Magic IPA tool by clicking the "Generate spelling" button.

#### Jyutping (Cantonese)

Select the Jyutping notation type to force a word to be pronounced according to your preferences.

#### Pinyin (Mandarin)

Select the Pinyin notation type to force a word to be pronounced according to your preferences.


# Summarization
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/summarization

Learn how to create audio summaries of your articles with BeyondWords

## Overview

You can set it to generate summaries automatically when an audio article is created or manually for each article.

![summarization](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/summarization.png)

## Create summaries for all articles

<Steps>
  <Step title="Turn on summarization">
    Go to the **Summarization** tab in the **Content** section and enable summarization.
  </Step>

  <Step title="Customize the system prompt">
    Modify the system prompt to fine-tune how the AI generates the summary.
  </Step>

  <Step title="Save changes">
    Click **Save** to apply your changes. Moving forward, summaries will be generated automatically for all new audio articles.
  </Step>
</Steps>

<Tip>
  To generate summaries for existing articles, manually update them in the **Editor** or by clicking **Regenerate**. Otherwise, summaries will only be created for new articles.
</Tip>

## Create a summary for an article

<Steps>
  <Step title="Find the article">
    Go to the **Articles** section and locate the article you want to summarize.
  </Step>

  <Step title="Open the summary settings">
    Click the **summary** button next to the article. This will open the **Editor**.
  </Step>

  <Step title="Enable AI summarization">
    In the **Editor**, turn on AI summarization for the article.
  </Step>

  <Step title="Customize the system prompt">
    Modify the system prompt to fine-tune how the AI generates the summary.
  </Step>

  <Step title="Update the article">
    Click **Update** to save changes and generate the audio summary.
  </Step>
</Steps>

<Card title="Video summaries" href="/preferences/video">
  Turn on video generation to generate videos of article summaries.
</Card>


# Video
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/video

Learn how to create videos of your articles with BeyondWords

## Overview

You can set it to generate video articles automatically when an audio article is created or manually for each article.

![Video](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/video.png)

## Create videos for all articles

<Steps>
  <Step title="Turn on video generation">
    Go to the **Video** tab in the **Content** section and enable video generation.
  </Step>

  <Step title="Customize the video settings">
    Customize the video settings to align the video with your brand.
  </Step>

  <Step title="Save changes">
    Click **Save** to apply your changes. Moving forward, videos will be generated automatically for all new audio articles.
  </Step>
</Steps>

<Tip>
  To generate videos for existing articles, manually update them in the **Editor** or by clicking **Regenerate**. Otherwise, videos will only be created for new articles.
</Tip>

## Create a video for an article

<Steps>
  <Step title="Find the article">
    Go to the **Articles** section and locate the article you want to create a video for.
  </Step>

  <Step title="Open the video settings">
    Click the **video** button next to the article. This will open the **Editor**.
  </Step>

  <Step title="Customize the video settings">
    Customize the video settings to align the video with your brand.
  </Step>

  <Step title="Update the article">
    Click **Update** to save changes and generate the video.
  </Step>
</Steps>

<Card title="Video summaries" href="/preferences/summarization">
  Turn on summarization to generate video of article summaries.
</Card>

## Video settings

Customize how BeyondWords generates videos from your audio articles by adjusting these settings.

### Logo

* **Upload a logo** – Upload a logo to add a branded watermark to your videos.
* **Choose the logo position** – Select whether the logo appears in the **top-right** or **top-left** of the video.

### Images

* **Include feature image** – Use the article feature image as the default video background when no other images are available.
* **Include article images** – Bring your videos to life with images from the article, dynamically changing as the video plays.
* **Pan and zoom enabled** – Add subtle pan and zoom effects to bring images to life.

### Audio & Captions

* **Audio and waveform** – Show a dynamic waveform to visualize the audio in your videos. When disabled, the video will not include audio.
* **Text captions** – Show captions with real-time word highlighting.

### Colors & Styling

* **Video background color** – Set a background color for when no image is displayed.
* **Caption text background color** – Set a background color to enhance caption readability.
* **Caption text color** – Set the color of the caption text.
* **Caption text highlight color** – Set the color that highlights words as they are spoken.
* **Waveform color** – Set the color of the waveform bars in your videos.

After configuring these settings, click **Save Changes** to apply them. Changes will apply to new videos—existing videos may need to be regenerated.


# Voices
Source: https://docs.beyondwords.io/docs-and-guides/content/preferences/voices

Configure voice preferences

## Overview

Go to the **Voices** tab in the **Content** section to configure your voice preferences. Here you will be able to access and preview all the voices, including **Premade** and **Custom** voices available for your project.

![voices](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/content/voices.png)

## Choose language and accent

Select the default language and accent for your project based on the language of your content.

## Choose voice

Find your preferred voice and click "Use voice" to set it as the default. This will be used for all articles unless otherwise specified.

### Choose a voice for article titles

If you want to use a different voice for the titles of your articles, you can click on the dropdown button next to each voice and select "Use as title voice". This will be used for all new article titles unless otherwise specified.

### Choose a voice for article content

If you want to use a different voice for the body text of your articles, you can click on the dropdown button next to each voice and select "Use as body voice". This will be used for all new article body text unless otherwise specified.

### Choose a voice for article summaries

If you want to use a different voice for the summaries of your articles, you can click on the dropdown button next to each voice and select "Use as summary voice". This will be used for all new article summaries unless otherwise specified.

### Speaking rate

You can also adjust the default speed of a voice by clicking on the **⋯** button next to each voice and selecting "Adjust speaking rate". This will allow you to increase or decrease the speaking rate of the voice. This will be applied to all new segments that use that voice.

### Voice ID

You can copy the voice ID of a voice by clicking on the **⋯** button next to each voice and selecting "Copy voice ID". This is useful when using the API or Magic Embed to generate audio.


# Overview
Source: https://docs.beyondwords.io/docs-and-guides/distribution/player/overview

Get started with the BeyondWords player

## Overview

BeyondWords Player is the easiest way to add BeyondWords audios into your website or app.

It is a fully-featured audio player for content generated and hosted on BeyondWords. It is fully integrated with analytics and monetization features on BeyondWords without the need for any extra configuration.

![player](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/distribution/player.png)

<Info>
  Please note that the BeyondWords player is automatically installed if you are using any of the following integrations:

  * Magic Embed
  * WordPress
  * Ghost
</Info>

## Installation

Choose one of the following methods to install the BeyondWords player:

### Install via embed script

Add the script in your web app:

```javascript
<script async defer src="https://proxy.beyondwords.io/npm/@beyondwords/player@latest/dist/umd.js"
    onload="new BeyondWords.Player({
        target: this,
        projectId: <ID>,
        contentId: '<ID>'
    })">
</script>
```

<Info>
  You'll need to replace `<ID>` with your actual project ID and content ID. See the [Identifiers](#identifiers) section below for details on all available identifier options.
</Info>

<Tip>
  For production environments, consider specifying a fixed version instead of using `@latest` to ensure stability.
</Tip>

### Install via NPM

<Steps>
  <Step title="Add the player NPM package">
    ```javascript
    npm add @beyondwords/player
    ```
  </Step>

  <Step title="Add a target div in your web app">
    ```javascript
    <div id='beyondwords-player'></div>
    ```
  </Step>

  <Step title="Initialize the player">
    ```javascript
    import BeyondWords from '@beyondwords/player';

    new BeyondWords.Player({ target: '#beyondwords-player', projectID: <ID>, contentId: '<ID>' });
    ```
  </Step>
</Steps>

<Info>
  You'll need to replace `<ID>` with your actual project ID and content ID. See the [Identifiers](#identifiers) section below for details on all available identifier options.
</Info>

## Identifiers

You will need to replace project `ID` and content `ID` with your `projectId` and `contentId`. You can use any of the following properties in conjunction with the `projectId` to initialize the player:

| **Property** | **Description**                                                                                                                                                                                   |
| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `contentId`  | Unique UUID string for the audio content.<br /> You can also pass the previous integer audio ID as a string for users migrating from the legacy API.                                              |
| `sourceId`   | The externally provided source identifier for a content item.<br />This could be the ID from your CMS, the `<guid>` from an RSS `<item>`, or the post ID if generated using the WordPress Plugin. |
| `sourceUrl`  | The URL containing the source content.<br /> This could be the public URL submitted via the API, the `<link>` from an RSS `<item>`, or the post URL from the WordPress Plugin.                    |
| `playlistId` | The unique ID for a playlist created in the dashboard or through the API.                                                                                                                         |

## Advanced customization

For developers looking to build custom interfaces or use the player in headless mode, additional documentation is available on GitHub. This includes guides on:

* Building your own UI on top of the BeyondWords player
* Using the player SDK programmatically
* Implementing custom analytics

For complete documentation on advanced customization options, visit the [BeyondWords Player GitHub repository](https://github.com/beyondwords-io/player?tab=readme-ov-file).

## Next steps

After installing the player, you'll likely want to customize its appearance and behavior to match your brand and user experience requirements.

<CardGroup>
  <Card title="Player settings" icon="sliders" href="/docs-and-guides/distribution/player/settings">
    Configure your player's appearance, branding, and interactive features
  </Card>

  <Card title="JavaScript SDK" icon="js" href="/docs-and-guides/distribution/player/sdk/javascript">
    Integrate the player in web applications
  </Card>

  <Card title="iOS SDK" icon="apple" href="/docs-and-guides/distribution/player/sdk/ios">
    Integrate the player in iOS applications
  </Card>

  <Card title="Android SDK" icon="android" href="/docs-and-guides/distribution/player/sdk/android">
    Add the player to Android applications
  </Card>
</CardGroup>


# Android
Source: https://docs.beyondwords.io/docs-and-guides/distribution/player/sdk/android

Integrate the BeyondWords player in Android

<Card title="Android SDK Documentation" icon="android" href="https://github.com/beyondwords-io/player-android" target="_blank">
  View the Android SDK documentation in our GitHub repository
</Card>


# iOS
Source: https://docs.beyondwords.io/docs-and-guides/distribution/player/sdk/ios

Integrate the BeyondWords player in iOS

<Card title="iOS SDK Documentation" icon="apple" href="https://github.com/beyondwords-io/player-ios" target="_blank">
  View the iOS SDK documentation in our GitHub repository
</Card>


# JavaScript
Source: https://docs.beyondwords.io/docs-and-guides/distribution/player/sdk/javascript

Integrate the BeyondWords player using JavaScript

<Card title="JavaScript SDK Documentation" icon="js" href="https://github.com/beyondwords-io/player?tab=readme-ov-file">
  View the JavaScript SDK documentation in our GitHub
</Card>


# Settings
Source: https://docs.beyondwords.io/docs-and-guides/distribution/player/settings

Configure the BeyondWords player settings

# Player settings

Once you've installed the BeyondWords player, you can customize its appearance and behavior through various settings. This guide walks you through all available configuration options.

## General settings

### Player size

Control the overall size of the player interface:

* **Small**: Compact version for limited space
* **Standard** (default): Balanced size suitable for most websites
* **Large**: Expanded size with enhanced visibility

### Player widget

Enable or disable the floating mini-player widget that appears when scrolling away from the main player.

### Widget size

When the player widget is enabled, you can set its size:

* **Small**: Minimal floating player
* **Standard** (default): Medium-sized floating player
* **Large**: Prominent floating player

### Widget position

Choose where the floating widget appears on the screen:

* **Left**: Aligned to the left side of the viewport
* **Center**: Centered horizontally in the viewport
* **Right**: Aligned to the right side of the viewport

## Branding

### Logo

Upload a custom logo to display in the player.

* Limited to the Large player size
* Use PNG, JPG, or WebP format (max 10MB)
* Recommended dimensions: at least 300px × 300px

### Color theme

Choose the color scheme for your player:

* **System**: Adapts to the user's device settings (light/dark mode)
* **Light mode** (default): Always use light theme
* **Dark mode**: Always use dark theme

### Light mode colors

Customize colors for the light theme:

* **Background color**: The main player background (#F5F5F5 by default)
* **Icon color**: Color for player controls and icons (#000 by default)
* **Text color**: Color for text elements (#111 by default)

### Dark mode colors

Customize colors for the dark theme:

* **Background color**: The main player background (#000 by default)
* **Icon color**: Color for player controls and icons (#FFF by default)
* **Text color**: Color for text elements (#FFF by default)

### Call-to-action

Customize the text for the main player button (default: "Listen to this article")

### Include article title

Toggle whether to display the article title in the player.

* Limited to Large player size

### Intro

Add a custom audio clip to play at the beginning of your content:

* Upload MP3 or WAV format (max 50MB)
* Useful for branded intros or sponsorship messages

### Outro

Add a custom audio clip to play at the end of your content:

* Upload MP3 or WAV format (max 50MB)
* Perfect for calls-to-action or acknowledgments

## Controls

### Skipping

Choose how users can navigate through the audio:

* **Skip by paragraph**: Move forward or backward by logical segments of content
* **Skip by seconds**: Set a specific time jump (e.g., 15 seconds) for skipping

## Interactions

### Highlight paragraphs

Enable this feature to highlight the paragraph that's currently being read aloud, keeping users engaged with the content.

### Highlight colors

* **Light mode highlight**: Color used for highlighting in light mode (#A4FF00 by default)
* **Dark mode highlight**: Color used for highlighting in dark mode (#A4FF00 by default)

### Playback from paragraphs

Allow users to click or tap on any paragraph to begin playback from that point, boosting engagement with your content.

### Allow downloads

Enable listeners to download the audio from the player for offline listening.

## Saving your settings

After configuring your player settings, click the "Save changes" button to apply them. Your settings will be applied to all instances of the player using your project ID.

<Card title="Programmatic configuration" icon="js" href="/docs-and-guides/distribution/player/sdk/javascript">
  All these settings can also be configured programmatically when initializing the player. See the JavaScript SDK documentation for details.
</Card>


# Smart
Source: https://docs.beyondwords.io/docs-and-guides/distribution/playlists/smart

Create and manage smart playlists

## Overview

Use Smart playlists to automatically curate a list of audio articles or summaries based on your criteria.

![player](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/distribution/playlist.png)

## Create a Smart playlist

To create a Smart playlist:

1. Go to **Project > Distribution > Playlists**.
2. Click **+ Playlist**.
3. Enter a name for your playlist.
4. Upload a cover image for your playlist.
5. Select **Smart**.
6. Click **Continue**.

Your playlist will be created and you'll be redirected to the playlist editor.

<Note>
  Whenever you create a playlist, a podcast feed will be created automatically.
</Note>

## Curate a Smart playlist

To curate a Smart playlist:

<Info>
  By default, your Smart playlist will include all articles in your project.
</Info>

1. Click **Set rules**.
2. Click **+ Rule**.
3. Select the field you want to filter by. This will be based on your arricle metadata. By default it will include author, title, and published date.
4. Choose the operator you want to use: `is`, `is not`, `contains`, `wildcard`.
5. Enter the value you want to filter by.
6. Click **Apply**.
7. You can add multiple rules and combine them using the `AND` operator.
8. Review the results and click **Save changes**.

## Publish your playlist

To publish your playlist:

1. Click on the **Embed code** button.
2. Select the content type: **Articles** or **Summaries**.
3. Copy the embed code.
4. Paste the embed code into your website.

<Info>
  You can only select **Summaries** if your articles have summaries.
</Info>

## Share your playlist

To share your playlist:

1. Click on the **Share** button.
2. Select the content type: **Articles** or **Summaries**.
3. Click **Copy link**.
4. Share the link.

<Note>
  You playlist will not be visible unless you have set the visibility to **Public**.
</Note>

## Copy your playlist ID

To copy your playlist ID:

1. Click on the **⋯** button.
2. Click **Copy playlist ID**.

## Want to let your audience create their own playlists?

To let your audience create their own playlists, you can use the [Player JavaScript SDK](/distribution/player/sdk/javascript).


# Standard
Source: https://docs.beyondwords.io/docs-and-guides/distribution/playlists/standard

Create and manage standard playlists

## Overview

Use Standard playlists to handpick and publish a curated list of audio articles or summaries.

![player](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/distribution/playlist.png)

## Create a Standard playlist

To create a Standard playlist:

1. Go to **Project > Distribution > Playlists**.
2. Click **+ Playlist**.
3. Enter a name for your playlist.
4. Upload a cover image for your playlist.
5. Select **Standard**.
6. Click **Continue**.

Your playlist will be created and you'll be redirected to the playlist editor.

<Note>
  Whenever you create a playlist, a podcast feed will be created automatically.
</Note>

## Curate a Standard playlist

To curate a Standard playlist:

1. Click **Select articles**.
2. Select the articles you want to include in your playlist.
3. Click **Save changes**.

## Publish your playlist

To publish your playlist:

1. Click on the **Embed code** button.
2. Select the content type: **Articles** or **Summaries**.
3. Copy the embed code.
4. Paste the embed code into your website.

<Info>
  You can only select **Summaries** if your articles have summaries.
</Info>

## Share your playlist

To share your playlist:

1. Click on the **Share** button.
2. Select the content type: **Articles** or **Summaries**.
3. Click **Copy link**.
4. Share the link.

<Note>
  You playlist will not be visible unless you have set the visibility to **Public**.
</Note>

## Copy your playlist ID

To copy your playlist ID:

1. Click on the **⋯** button.
2. Click **Copy playlist ID**.

## Want to let your audience create their own playlists?

To let your audience create their own playlists, you can use the [Player JavaScript SDK](/distribution/player/sdk/javascript).


# Smart
Source: https://docs.beyondwords.io/docs-and-guides/distribution/podcast-feeds/smart

Create and manage smart podcast feeds

## Overview

Use Smart podcast feeds to automatically curate a list of audio articles or summaries based on your criteria.

![podcast feed](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/distribution/podcastfeed.png)

## Create a Smart podcast feed

To create a Smart podcast feed:

1. Go to **Project > Distribution > Podcast Feeds**.
2. Click **+ Podcast Feed**.
3. Enter a title for your podcast.
4. Enter a description for your podcast.
5. Upload a cover image for your podcast.
6. Enter a URL for your podcast.
7. Select **Smart**.
8. Add Categories and Tags to your podcast.
9. Add Author and Owner details.
10. Select the language of your podcast.
11. Check whether your podcast contains explicit content.
12. Click **Continue**.

Your podcast feed will be created and you'll be redirected to the podcast feed editor.

<Note>
  Whenever you create a podcast feed, a playlist will be created automatically.
</Note>

## Curate a Smart podcast feed

To curate a Smart podcast feed:

<Info>
  By default, your Smart podcast feed will include all articles in your project.
</Info>

1. Click **Set rules**.
2. Click **+ Rule**.
3. Select the field you want to filter by. This will be based on your arricle metadata. By default it will include author, title, and published date.
4. Choose the operator you want to use: `is`, `is not`, `contains`, `wildcard`.
5. Enter the value you want to filter by.
6. Click **Apply**.
7. You can add multiple rules and combine them using the `AND` operator.
8. Review the results and click **Save changes**.

## Share your podcast feed

To share your podcast feed:

1. Click on the **Share** button.
2. Select the content type: **Articles** or **Summaries**.
3. Click **Copy RSS Feed URL**.
4. Publish the RSS Feed URL to your website or preferred podcast platforms.

<Note>
  You podcast feed will not be accessible unless you have set the visibility to **Public**.
</Note>


# Standard
Source: https://docs.beyondwords.io/docs-and-guides/distribution/podcast-feeds/standard

Create and manage standard podcast feeds

## Overview

Use standard podcast feeds to manually curate a list of audio articles or summaries.

![podcast feed](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/distribution/podcastfeed.png)

## Create a standard podcast feed

To create a standard podcast feed:

1. Go to **Project > Distribution > Podcast Feeds**.
2. Click **+ Podcast Feed**.
3. Enter a title for your podcast.
4. Enter a description for your podcast.
5. Upload a cover image for your podcast.
6. Enter a URL for your podcast.
7. Select **Standard**.
8. Add Categories and Tags to your podcast.
9. Add Author and Owner details.
10. Select the language of your podcast.
11. Check whether your podcast contains explicit content.
12. Click **Continue**.

Your podcast feed will be created and you'll be redirected to the podcast feed editor.

<Note>
  Whenever you create a podcast feed, a playlist will be created automatically.
</Note>

## Curate a standard podcast feed

To curate a standard podcast feed:

1. Click **Select articles**.
2. Select the articles you want to include in your podcast feed.
3. Click **Save changes**.

## Share your podcast feed

To share your podcast feed:

1. Click on the **Share** button.
2. Select the content type: **Articles** or **Summaries**.
3. Click **Copy RSS Feed URL**.
4. Publish the RSS Feed URL to your website or preferred podcast platforms.

<Note>
  You podcast feed will not be accessible unless you have set the visibility to **Public**.
</Note>


# Concepts
Source: https://docs.beyondwords.io/docs-and-guides/getting-started/concepts

Understanding how BeyondWords is structured will help you get the most out of it.

## Basic concepts

### Organizations

An Organization is the highest-level entity in BeyondWords. Your account belongs to an Organization, and within it, you can create andmanage multiple Projects. Organizations are typically set up at the company level, allowing teams to collaborate and manage audio content across different publications or categories.

### Projects

A Project is your AI audio CMS. Within a Project, you can manage CMS integrations, voice settings, audio articles, player settings, playlists, and podcast feeds. You can also track engagement with analytics, set up native ads, or connect to an ad server. This structure makes it easy to manage audio across different brands, topics, or content streams.

Each Project is organized into the following sections:

* **Content** - Create, edit, and manage your audio articles.
* **Distribution** - Publish your audio articles through players, playlists, and podcast feeds
* **Analytics** - Track your audio performance and engagement metrics.
* **Monetization** - Create and manage direct ads or connect to your ad server.
* **Settings** - Connect your CMS and manage your project members.

#### Articles

An Article is a single item of AI-generated audio content, typically mapped 1:1 with your written articles.

Within each Project, you can create audio articles using the Editor, Magic Embed, API, or a CMS integration. Audio articles will be generated using the project's default voice, unless a different one is specified.

Articles are structured into segments, which correspond to paragraphs and other elements. Each segment can have its own language and voice settings, allowing for greater control over narration.

### Voices

We offer Premade and Custom voices.

* **Premade voices** are a selection of high-quality AI voices available for immediate use.
* **Custom voices** are voice clones based on your own Speakers. There are two types:
  * **Instant voice cloning** creates a voice clone from as little as 5 seconds of audio.
  * **Professional voice cloning** trains a hyper-realistic voice clone from as few as five article narrations.

By default, both Premade and Custom voices are available across all Projects. However, with Custom voices, you can control which Projects have access to them (coming soon).

### Members

Each Organization can have multiple Members. You can invite team members and control which Projects they can access.

Roles and permissions are managed at the Organization level, ensuring structured access control across Projects.


# Overview
Source: https://docs.beyondwords.io/docs-and-guides/getting-started/overview

BeyondWords connects publishers and their audiences through the possibilities of AI voice.

## Get started

<CardGroup cols={2}>
  <Card title="Concepts" icon="code" href="/docs-and-guides/getting-started/concepts">
    Understanding how BeyondWords is structured will help you get the most out of it.
  </Card>

  <Card title="Quickstart" icon="code" href="/docs-and-guides/getting-started/quickstart">
    Get started with BeyondWords in minutes.
  </Card>
</CardGroup>

## Voices

<CardGroup cols={2}>
  <Card title="Premade voices" icon="code" href="/docs-and-guides/voices/premade-voices">
    Explore our library of high-quality premade voices for your content.
  </Card>

  <Card title="Instant voice cloning" icon="code" href="/docs-and-guides/voices/instant-voice-cloning">
    Create a custom AI voice in minutes with our instant voice cloning technology.
  </Card>

  <Card title="Professional voice cloning" icon="code" href="/docs-and-guides/voices/professional-voice-cloning">
    Get a studio-quality custom voice created by our professional team.
  </Card>
</CardGroup>

## Content

<CardGroup cols={2}>
  <Card title="Editor" icon="code" href="/docs-and-guides/content/editor">
    Learn how to generate audio articlesusing the Editor
  </Card>

  <Card title="Articles" icon="code" href="/docs-and-guides/content/articles">
    Learn how to manage your audio articles
  </Card>

  <Card title="Voices" icon="code" href="/docs-and-guides/content/voices">
    Learn how to create and use voices
  </Card>

  <Card title="Pronunciation" icon="code" href="/docs-and-guides/content/preferences/pronunciations">
    Learn how to customize the pronunciation of words in your audio articles
  </Card>

  <Card title="Summarization" icon="code" href="/docs-and-guides/content/preferences/summarization">
    Learn how to create audio summaries of your audio articles
  </Card>

  <Card title="Video" icon="code" href="/docs-and-guides/content/video">
    Learn how to create videos of your audio articles
  </Card>

  <Card title="Background music" icon="code" href="/docs-and-guides/content/background-music">
    Learn how to add background music to your audio articles
  </Card>

  <Card title="Filters" icon="code" href="/docs-and-guides/content/preferences/filters">
    Learn how to filter what should be included or excluded in your audio articles
  </Card>
</CardGroup>

## Distribution

<CardGroup cols={2}>
  <Card title="Player" icon="code" href="/docs-and-guides/distribution/player">
    Learn how to use the BeyondWords player
  </Card>

  <Card title="Playlists" icon="code" href="/docs-and-guides/distribution/playlists">
    Create and manage playlists
  </Card>

  <Card title="Podcast feeds" icon="code" href="/docs-and-guides/distribution/podcast-feeds">
    Create and manage podcast feeds
  </Card>
</CardGroup>

## Analytics

<CardGroup cols={2}>
  <Card title="Player" icon="code" href="/docs-and-guides/analytics/player">
    Track and analyze audio engagement
  </Card>
</CardGroup>

## Monetization

<CardGroup cols={2}>
  <Card title="Custom ads" icon="code" href="/docs-and-guides/monetization/custom">
    Launch direct ads with BeyondWords
  </Card>

  <Card title="VAST ads" icon="code" href="/docs-and-guides/monetization/vast">
    Launch programmatic ads with BeyondWords
  </Card>
</CardGroup>

## Integrations

<CardGroup cols={2}>
  <Card title="WordPress" icon="code" href="/docs-and-guides/integrations/wordpress">
    Integrate BeyondWords with WordPress
  </Card>

  <Card title="Ghost" icon="code" href="/docs-and-guides/integrations/ghost">
    Integrate BeyondWords with Ghost
  </Card>

  <Card title="API" icon="code" href="/docs-and-guides/integrations/api">
    Integrate with the BeyondWords API
  </Card>

  <Card title="Webhooks" icon="code" href="/docs-and-guides/integrations/webhooks">
    Configure and manage webhooks
  </Card>

  <Card title="RSS Feed Importer" icon="code" href="/docs-and-guides/integrations/rss-feed-importer">
    Import content from RSS feeds
  </Card>

  <Card title="Magic Embed" icon="code" href="/docs-and-guides/integrations/magic-embed">
    Use Magic Embed for seamless integration
  </Card>
</CardGroup>

## Administration

<CardGroup cols={2}>
  <Card title="Members" icon="code" href="/docs-and-guides/administration/members">
    Manage your team and their access to BeyondWords
  </Card>

  <Card title="Roles" icon="code" href="/docs-and-guides/administration/roles">
    Manage your team and their access to BeyondWords
  </Card>
</CardGroup>


# Quickstart
Source: https://docs.beyondwords.io/docs-and-guides/getting-started/quickstart

Learn how to make your first audio article with BeyondWords.

<Steps>
  <Step title="Sign up">
    Create an account on [BeyondWords](https://dash.beyondwords.io/auth/signup).
  </Step>

  <Step title="Create a project">
    Create a [project](/docs-and-guides/administration/projects) in BeyondWords.
  </Step>

  <Step title="Choose or clone a voice">
    [Choose a voice](/docs-and-guides/content/preferences/voices) or [clone a voice](/docs-and-guides/voices/voice-cloning/instant-voice-cloning) from our collection of voices.
  </Step>

  <Step title="Generate audio">
    Use the [Editor](/docs-and-guides/content/editor) to generate audio from your text.
  </Step>
</Steps>

### Next Steps

<CardGroup cols={2}>
  <Card title="Distribution" icon="code" href="/docs-and-guides/getting-started/distribution">
    Distribute your audio articles to your audience.
  </Card>

  <Card title="Integrations" icon="code" href="/docs-and-guides/getting-started/integrations">
    Integrate BeyondWords with your existing tools and platforms.
  </Card>

  <Card title="API" icon="code" href="/docs-and-guides/getting-started/api">
    Use the BeyondWords API to create and manage your audio articles.
  </Card>
</CardGroup>


# API
Source: https://docs.beyondwords.io/docs-and-guides/integrations/api

Learn how to use the BeyondWords API

# Overview

The BeyondWords API is a RESTful API that provides headless access to the entire platform. It has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.

## Base URL

The base URL for the API is: `https://api.beyondwords.io/v1/`

## Authentication

To access the API endpoints, you will need a Project ID and API Key. To obtain these, you will need to [create a project](/docs-and-guides/administration/projects#create-a-project) and go to **Project > Settings > Integrations > API**.

## Core Resources

The API provides access to several resources. The primary ones include:

### Projects

This object represents your project and its settings. You can list, create, retrieve, update and delete projects.

[Learn more about Projects](/api-reference/projects)

### Content

This object represents your generated content and its associated metadata. You can list, create, retrieve, update and delete content.

[Learn more about Content](/api-reference/content)

### Player

You can use the API to retrieve audio and player configurations. The Player endpoints allow you to fetch player data using different identifiers such as:

* Content ID
* Source ID
* Source URL
* Playlist ID
* Multiple identifiers

[Learn more about Player](/api-reference/player/overview)

### Analytics

You can use the API to retrieve analytics for an organization, project, content item, or ad. You can retrieve data for a specific time period and aggregate by year, month, week, day, or hour. You can also filter the data based on specific metrics.

[Learn more about Analytics](/api-reference/analytics)

### Languages

You can use the API to retrieve a list of languages available on your account, along with their locale codes.

[Learn more about Languages](/api-reference/languages)

### Voices

You can use the API to retrieve a list of voices available on your account. You can also use this endpoint to configure settings for each voice.

[Learn more about Voices](/api-reference/voices)

### Upload

You can use the API to upload media files, such as images and videos, for submitting to image and media URLs.

[Learn more about Upload](/api-reference/upload)

## Additional Resources

For complete API documentation, please refer to our [API Reference](/api-reference/overview).


# Ghost
Source: https://docs.beyondwords.io/docs-and-guides/integrations/ghost

Integrate BeyondWords with Ghost

## Overview

The Ghost integration allows you to make your Ghost posts available in audio or video with BeyondWords. Once integrated, BeyondWords will automatically:

1. Create audio versions of your posts.
2. Embed the **BeyondWords Player** directly into your content.

## Set up

<Steps>
  <Step title="Access Ghost Admin settings">
    In Ghost Admin, go to **Settings > Integrations**.
  </Step>

  <Step title="Add custom integration">
    Click **Add custom integration**. Name it **BeyondWords**, then click **Add**.
  </Step>

  <Step title="Copy API credentials">
    Copy the **Admin API Key** and **API URL**, then paste them where needed.
  </Step>

  <Step title="Access Code Injection settings">
    In Ghost Admin, go to **Settings > Code injection**.
  </Step>

  <Step title="Add the BeyondWords script">
    Click **Open**, then navigate to **Site Footer**. Paste the BeyondWords Ghost Helper script and click **Save**.
  </Step>

  <Step title="Choose the content format">
    Select the embed code that matches the audio or video format you want to embed.

    ```html
    <script async defer src="https://proxy.beyondwords.io/npm/@beyondwords/ghost-helper@latest" 
    onload="new BeyondWords.GhostHelper({
      projectId: <ID>
    })">
    </script>
    ```

    <Note>
      Replace `<ID>` with your project ID.
    </Note>
  </Step>
</Steps>

## Completion

You're all set! BeyondWords is now fully integrated with your Ghost site.

Next time you publish a post, an audio version will be created automatically. Once generated (this should take just a few minutes), it will be embedded in your post using the BeyondWords Player.

<Card title="Customize the BeyondWords Player" icon="play" href="/docs-and-guides/distribution/player/introduction">
  Learn how to customize the appearance and behavior of the BeyondWords Player to match your website's design.
</Card>


# Magic Embed
Source: https://docs.beyondwords.io/docs-and-guides/integrations/magic-embed

Easily embed BeyondWords on any web page.

## Overview

Magic Embed is a **lightweight, client-side solution** that lets you automatically generate and embed audio into your articles. Once enabled, it will:

1. Extract the article content from your webpage.
2. Generate the audio.
3. Embed the **BeyondWords Player** directly into your webpage.

## Set up

<Steps>
  <Step title="Navigate to Magic Embed settings">
    Go to **Project > Settings > Integrations > Magic Embed**.
  </Step>

  <Step title="Allow website domains">
    Add the domains where you want Magic Embed to work.

    * Enter your website domain (e.g., `yourwebsite.com`) and click **Add**.
    * Magic Embed will only function on pages under these domains.
    * Subdomains will need to be added seperately (e.g. `app.yourwebsite.com`)
  </Step>

  <Step title="Set request headers (optional)">
    For **paywalled or protected content**, you may need to provide authentication headers.

    * Add a **Header Name** and **Header Value** to authenticate requests.
    * Click **+** to add multiple headers if needed.
  </Step>

  <Step title="Enable Static IP (optional)">
    If your website requires **IP allowlisting**, enable this option to use a **static IP** for content extraction.
  </Step>

  <Step title="Choose the content format">
    Select the embed code that matches the audio or video format you want to embed.

    <Note>
      You can only embed video or summaries if you have enabled video or summaries in your project settings.
    </Note>
  </Step>

  <Step title="Embed the player">
    Copy the **embed script** and add it to your webpage.

    ```html
    <script async defer src="https://proxy.beyondwords.io/npm/@beyondwords/player@latest/dist/umd.js"
      onload="new BeyondWords.Player({
        target: this,
        projectId: <ID>,
        clientSideEnabled: true
      })">
    </script>
    ```

    <Note>
      Replace `<ID>` with your project ID.
    </Note>
  </Step>

  <Step title="Enable Magic Embed">
    After configuring all settings:

    1. Turn on the **Magic Embed** switch.
    2. Click **Save changes**.
  </Step>
</Steps>


# RSS Feed Importer
Source: https://docs.beyondwords.io/docs-and-guides/integrations/rss-feed-importer

Turn articles from your RSS feeds into audio.

<Info>
  You will need to install the BeyondWords Player separately.
</Info>

## Overview

The RSS Feed Importer allows you to automatically convert articles from your RSS feeds into audio. Once enabled, BeyondWords will regularly check your feeds for new content and generate audio for each new article.

## Add a new feed

To get started go to **Project > Settings > Integrations > RSS Feed Importer**.

<Steps>
  <Step title="Click + Feed">
    Click the **+ Feed** button.
  </Step>

  <Step title="Select Feed type">
    Select the type of feed you want to add. You can choose between **XML** and **JSON**.
  </Step>

  <Step title="Add Feed URL">
    Enter the URL of your RSS feed.
  </Step>

  <Step title="Set request headers (optional)">
    For **paywalled or protected content**, you may need to provide authentication headers.

    * Add a **Header Name** and **Header Value** to authenticate requests.
    * Click **+** to add multiple headers if needed.
  </Step>

  <Step title="Enable Static IP (optional)">
    If your website requires **IP allowlisting**, enable this option to use a **static IP** for content extraction.
  </Step>

  <Step title="Enable page extraction (optional)">
    If your RSS feed only contains article links and not the full text, BeyondWords can fetch the content from article URLs.

    * **Page extractor headers (optional):** Use request headers or a static IP to allow BeyondWords to extract content from protected or paywalled articles. If your site requires authentication, add a request header with the required key and value.
  </Step>
</Steps>

## Map the feed

After adding your feed, you'll need to map the RSS feed fields to BeyondWords article properties. This ensures the correct information - such as titles, descriptions, and content - is used to generate audio.

<Steps>
  <Step title="Required fields">
    Map these required fields from your feed:

    * **Title**: Select the field containing the article title
    * **Body**: Select the field containing the article content
    * **Source ID**: Select the field containing a unique identifier for each article (usually corresponds to your article ID in your CMS). This ID can be used to easily embed the audio on your articles using the BeyondWords Player.
    * **Source URL**: Select the field containing the URL for each article. This URL can also be used to easily embed the audio on your articles using the BeyondWords Player.
  </Step>

  <Step title="Optional fields">
    You can also map these optional fields:

    * **Summary**: Select the field containing a summary of the article. You can leave this empty if you use BeyondWords summarization.
    * **Author**: Select the field containing the article author's name
    * **Image URL**: Select the field containing the URL of the article's featured image
    * **Metadata**: Select the field containing additional metadata about the article
    * **Publish date**: Select the field containing when the article was published
      <Info>
        The publish date is used to check for updates to articles. When BeyondWords detects a change in the publish date, it will update the audio for that article.
      </Info>
  </Step>

  <Step title="Save and activate">
    Click **Save changes** to complete the setup. Your feed will automatically be enabled and BeyondWords will begin checking for articles.
  </Step>
</Steps>

## Managing your feed

Once your feed is set up:

* BeyondWords will automatically check your feed every 10 minutes for new or updated articles
* You can manually trigger an import by clicking the **⋯** button next to your feed and selecting **Run**
* New articles will be processed and converted to audio automatically
* Updated articles (detected by changes in the publish date) will have their audio updated

## Embed the Player

You can embed the audio on your website using either the Source ID or Source URL you mapped during setup.

<Card title="Embed the BeyondWords Player" icon="play" href="/docs-and-guides/distribution/player/introduction">
  Once your content is imported and converted to audio, learn how to embed the BeyondWords Player on your website to deliver a seamless audio experience to your audience.
</Card>


# Webhooks
Source: https://docs.beyondwords.io/docs-and-guides/integrations/webhooks

Configure and manage webhooks

## Overview

Webhooks let you receive HTTP requests when an article's audio is created, updated, or deleted. Use them to automate workflows and keep your systems in sync with your BeyondWords content.

![webhooks](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/integrations/webhooks.png)

## Setting up a webhook

To get started go to **Project > Settings > Integrations > Webhooks**.

<Steps>
  <Step title="Create a new webhook">
    Click the **+ Webhook** button to create your first webhook.
  </Step>

  <Step title="Enter webhook URL">
    In the "Webhook URL" field, enter the URL where BeyondWords should send event notifications. This should be an endpoint on your server that's configured to receive and process webhook events.
  </Step>

  <Step title="Set request headers (optional)">
    If your webhook requires authentication or custom headers:

    * Enter a **Header name** (e.g., "Authorization")
    * Enter a **Header value** (e.g., "Bearer your-token-here")
    * Click the **+** button to add additional headers if needed
  </Step>

  <Step title="Enable the webhook">
    Toggle the **Enabled** switch to activate the webhook. You can disable it at any time without deleting the configuration.
  </Step>

  <Step title="Save your changes">
    Click the **Save changes** button to complete the setup.
  </Step>
</Steps>

## Webhook events

Once configured, your webhook will receive notifications for the following events:

* **Audio created**: When new audio is generated for an article
* **Audio updated**: When existing audio is modified
* **Audio deleted**: When audio is removed from the system

## Webhook payload

Each webhook notification includes a JSON payload with details about the event and the affected content. You can use this information to trigger appropriate actions in your systems.

## Managing webhooks

You can create multiple webhooks to integrate with different systems. For each webhook, you can:

* Edit the configuration
* Temporarily disable it
* Delete it when no longer needed

## Security considerations

For enhanced security:

* Use HTTPS URLs for your webhook endpoints
* Implement authentication using request headers
* Validate incoming webhook requests on your server


# WordPress
Source: https://docs.beyondwords.io/docs-and-guides/integrations/wordpress

Integrate BeyondWords with WordPress

## Overview

WordPress publishers can use the BeyondWords plugin to publish audio articles directly from WordPress.

<CardGroup cols={3}>
  <Card title="Installation" icon="download" href="#install-the-plugin">
    Install and configure the BeyondWords WordPress plugin
  </Card>

  <Card title="Generate Audio" icon="microphone" href="#generate-audio-for-new-posts">
    Create audio for new and existing posts
  </Card>

  <Card title="Video Player" icon="video" href="#video-player">
    Use the video player style
  </Card>

  <Card title="Headless Mode" icon="code" href="#headless-mode">
    Use the plugin in headless mode
  </Card>

  <Card title="Languages" icon="language" href="#add-languages">
    Configure multiple languages
  </Card>

  <Card title="Shortcode" icon="brackets-curly" href="#wordpress-shortcode">
    Position your player with shortcodes
  </Card>

  <Card title="Categories" icon="folder-tree" href="#generate-audio-by-category">
    Control audio generation by category
  </Card>

  <Card title="Sidebar" icon="sidebar" href="#beyondwords-sidebar">
    Access advanced audio options
  </Card>

  <Card title="Inspect Panel" icon="magnifying-glass" href="#inspect-panel">
    Manage BeyondWords data
  </Card>

  <Card title="Site Health" icon="heart-pulse" href="#copy-site-health">
    Share site information for support
  </Card>

  <Card title="Compatibility" icon="puzzle-piece" href="#plugin--theme-compatibility">
    Plugin and theme compatibility
  </Card>

  <Card title="WPGraphQL" icon="database" href="#wpgraphql">
    Access BeyondWords data with GraphQL
  </Card>
</CardGroup>

Upon publishing, each new post is automatically processed into audio, which will then populate the player at the top of the post once the audio is complete.

These guides are applicable for version 5.0.0 of the plugin or higher.

To get started, you'll need to have set up a BeyondWords account and to install the [BeyondWords plugin](/docs-and-guides/integrations/wordpress/install).

<Info>The plugin works with pages, posts, and custom post types that have 'custom-fields' in the 'supports' array. For more information, refer to this [WordPress resource](https://developer.wordpress.org/reference/functions/register_post_type/#supports).</Info>

Once you've created an account in BeyondWords, and [created a new project](/docs-and-guides/getting-started/projects/create-a-project), you can get started by installing the BeyondWords plugin.

### Install the plugin

<Steps>
  <Step title="Locate BeyondWords plugin">
    In your WordPress admin dashboard, go to the plugin marketplace and search for **BeyondWords**.

    {/* ![locate](/assets/images/integration/wordpress/locate.gif) */}
  </Step>

  <Step title="Install the plugin">
    {/* ![install](/assets/images/integration/wordpress/install.png) */}
  </Step>

  <Step title="Locate plugin">
    After downloading, you can find the plugin in the **Installed Plugins** section on your WordPress dashboard.

    {/* ![settings](/assets/images/integration/wordpress/settings.png) */}
  </Step>

  <Step title="Fill in the credentials">
    Enter your API Key and Project ID.

    {/* ![credentials](/assets/images/integration/wordpress/credentials.png) */}

    You can find these in **Project > Settings > Integrations > WordPress**.

    {/* ![install](/assets/images/integration/wordpress/api.png) */}
  </Step>

  <Step title="Save changes">
    Once done you can save your changes.

    You're now ready to begin publishing!
  </Step>
</Steps>

Once activated, the plugin will automatically generate audio for new posts as you publish them.

If you have existing posts you'd like to convert into audio, you can generate audio for those posts as well.

### Generate audio for new posts

<Steps>
  <Step title="Ensure the plugin has been installed" />

  <Step title="Publish your post">
    If the plugin has been installed correctly you should now have a Beyondwords panel in the WordPress Sidebar.

    By default Generate Audio is preselected, you can uncheck this if you do not want to generate audio for a particular post.

    {/* ![publish](/assets/images/integration/wordpress/publish.gif) */}
  </Step>

  <Step title="Audio generation">
    Once you hit publish the text from the post will be submitted to BeyondWords and the audio will begin to generate.

    {/* ![publish](/assets/images/integration/wordpress/processing.gif) */}

    You can track its progress in the BeyondWords dashboard. The time it takes to generate audio depends on the length of the article but it usually only takes a couple of minutes.

    Once the audio is generated, you'll be able to listen to your new audio by clicking on the `play` button next to the title. For more tips on using the dashboard and editor, visit [The Editor](/docs-and-guides/content/editor) section in our documentation.
  </Step>

  <Step title="Displaying the player">
    Once your audio is sucesfully generated the BeyondWords Player will then appear on the front end of your post.

    {/* ![publish](/assets/images/integration/wordpress/player.png) */}

    The Player is customizable through the BeyondWords Settings and the Plugin Settings, and both will sync seamlessly with each other.
  </Step>
</Steps>

<Note>This example was created using the **Classic Editor**, but the steps are the same for both the Classic and Block Editors. The location of the BeyondWords side panel may vary slightly.</Note>

### Generate audio for past posts

<Steps>
  <Step title="All Posts">
    Navigate to the **All Posts** section in the WordPress dashboard.

    Here, you'll see a tick next to any posts that have generated audio.

    {/* ![posts](/assets/images/integration/wordpress/all-posts.png) */}
  </Step>

  <Step title="Previous posts">
    Select all the previous posts you want to generate audio for.

    Then, choose **Generate Audio** from the Batch Actions dropdown menu and click `Apply`.

    {/* ![batch](/assets/images/integration/wordpress/batch.gif) */}
  </Step>

  <Step title="Audio generation">
    The selected posts will be sent to the BeyondWords dashboard to begin audio generation. Once the audio is generated, the player will automatically appear on your front end.
  </Step>
</Steps>

### Video player

If the Video option is disabled in your Player style dropdowns please email us at [support@beyondwords.io](mailto:support@beyondwords.io) to discuss enabling it for your project.

Only sites using the latest player can select the "video" player style. Not using the latest player? See [Updating to the latest player](/docs-and-guides/player/updating-to-latest-player).

#### Use the video player style for a single post

The video player style can be set for each individual post on the post edit screen.

In the BeyondWords panel (Block editor) or the BeyondWords meta box (Classic editor), select Video in the Player style dropdown menu:

{/* ![Block editor](/assets/images/integration/wordpress/video-block-editor.png) */}

{/* ![Classic editor](/assets/images/integration/wordpress/video-classic-editor.png) */}

#### Set video as the default player style

To apply the video player style to all your future posts by default, set Video as the Player style in the BeyondWords plugin settings page:

{/* ![Default video player](/assets/images/integration/wordpress/default-video-player.png) */}

#### Replace the "Featured image" with a video player

Every WordPress theme has specific HTML elements and CSS styling, so there is unfortunately no single method to reliably replace the Featured image with a BeyondWords video player that will work for all themes. To achieve this you can make use of our WordPress filters to apply the relevant HTML and CSS for your specific theme.

An example of the required steps is provided below, using a standard BeyondWords install on a WordPress site using the Newspack theme.

<Info>If you are on an Enterprise or Pro plan we can provide direct support to help you fully integrate the video player into your site. Email us on [support@beyondwords.io](mailto:support@beyondwords.io) for assistance.</Info>

##### Step 1: Create a test post

Create a test post with a Featured image and Player style set to Video. When you view this post you should see a video player displayed in the default position – in-between the featured image and the post body. The video should have the featured image as the default video placeholder.

##### Step 2: Hide the default player

Hide the default auto-prepended player for posts with a Player style of Video with the following filter:

```php
function my_remove_beyondwords_player_filter() {
    global $beyondwords_wordpress_plugin;

    if ( ! $beyondwords_wordpress_plugin || ! isset( $beyondwords_wordpress_plugin->player ) ) {
        return;
    }
    
    $post = get_post();
	
    if ( ! $post || is_admin() ) {
        return;
    }
    
    $playerStyle = get_post_meta( $post->ID, 'beyondwords_player_style', true );
	
    if ( $playerStyle === 'video' ) {
        remove_filter( 'the_content', array( $beyondwords_wordpress_plugin->player, 'autoPrependPlayer' ), 1000000 );
    }
}
add_action( 'wp', 'my_remove_beyondwords_player_filter' );
```

##### Step 3: Note the CSS classes applied to the featured image

Your featured image will likely have some CSS classes to style the img element, or a wrapper element. Inspect the HTML of the featured image and make a note of any classes or IDs.

In our example, we note down the HTML tags and CSS classes of both the wrapper figure element and the img element:

```html
figure.post-thumbnail
img.attachment-newspack-featured-image
img.size-newspack-featured-image
img.wp-post-image
```

##### Step 4: Replace the featured image with a video player

Use the WordPress post\_thumbnail\_html filter to replace the Featured image with the BeyondWords shortcode.

```php
function my_post_thumbnail_html( $html, $post_id, $post_thumbnail_id, $size, $attr ) {
    $playerStyle = get_post_meta( $post_id, 'beyondwords_player_style', true);
	
    if ( is_single() && $playerStyle === 'video' ) {
        $html = do_shortcode( '[beyondwords_player]' );
    }
    
    return $html;
}
add_filter( 'post_thumbnail_html', 'my_post_thumbnail_html', 10, 5 );
```

View the post again and you should see a video player, although it may currently lack the CSS styling it needs to display it like a featured image.

##### Step 5: Apply CSS classes to the video player HTML

Modify the code above to add any required HTML tags and/or CSS classes to a wrapper element.

We decided to add img CSS classes we noted earlier into a div wrapper element:

```php
...
    if ( is_single() && $playerStyle === 'video' ) {
        $html  = '<div class="attachment-newspack-featured-image size-newspack-featured-image wp-post-image">';
        $html .= do_shortcode( '[beyondwords_player]' );
        $html .= '</div>';
    }
...
```

View the post again and inspect the HTML. You should see that the player is now wrapped in the div element we have defined.

Continue to apply any required HTML wrapper elements and CSS classes to the shortcode to style it like a featured image.

You may find that you need to add custom CSS selectors and HTML classes to style the video player as intended. To do this, enqueue a CSS file using the WordPress wp\_enqueue\_styles action and specify the class names into your wrapper element.

##### Step 6: Optionally repeat steps 2-5 for all your featured image sizes or positions

Some themes, including the Newspack Theme, add options which allow you to set the position/size of the Featured image for each post.

If your site displays featured images in multiple positions/sizes you should repeat the steps above, testing the presentation of the player against all the relevant options.

### Headless mode

The BeyondWords plugin now includes a headless mode, meaning a publisher can take advantage of audio processing and the audio CMS whilst building their own front-end players.

To change to headless mode, head to the plugin settings at Settings > BeyondWords.

In the Player UI dropdown select **Headless** to use the player in headless mode, or select **Disabled** to entirely disable the front-end player (the admin player will still appear so you can review any processed audio).

{/* ![Headless mode settings](/assets/images/integration/wordpress/headless-mode.png) */}

Once in headless mode you can build your own UI on top of the player.

### Add languages

From version 4.0.0 you can select the language and voice to use for each of your WordPress posts.

The default language and voice for your project is set in the BeyondWords dashboard, and optional secondary languages are set in the BeyondWords plugin settings in WordPress. These secondary languages, and their voices, will be available to select whilst you are editing your posts.

This allows for publishing in multiple languages from one domain and from one BeyondWords project.

<Steps>
  <Step title="Set secondary languages">
    Head to the plugin settings at Settings > BeyondWords.

    Under the Content settings section add your secondary languages in the Languages field and click Save Settings.

    {/* ![Secondary languages settings](/assets/images/integration/wordpress/secondary-languages.png) */}
  </Step>

  <Step title="Switch languages in the editor">
    Once new languages are set you can switch languages in the sidebar of the editor.

    Select the language and select a voice and you're ready to publish!

    {/* ![Language selection in editor](/assets/images/integration/wordpress/language-selection.png) */}
  </Step>
</Steps>

### WordPress shortcode

Position your BeyondWords Player anywhere on the page using our WordPress shortcode.

A shortcode is a WordPress-specific code that lets you do nifty things with very little effort. Shortcodes can embed files or create objects that would normally require lots of complicated, ugly code in just one line. Shortcode = shortcut. Learn more about [WordPress shortcodes](https://wordpress.org/documentation/article/shortcode-block/).

By default our BeyondWords Player is automatically prepended to the body content of each post or page. If our shortcode is detected anywhere in the WordPress content (`the_content`) then we prevent the automatic prepending of our default player and instead display the BeyondWords Player where you have placed the shortcode.

#### Using our shortcode

##### Block Editor

Add the shortcode `[beyondwords_player]` into a shortcode block to define a custom location for the audio player in the WordPress Block Editor.

{/* ![Shortcode in Block Editor](/assets/images/integration/wordpress/shortcode-block-editor.png) */}

##### Classic Editor

For the WordPress Classic Editor, type the `[beyondwords_player]` shortcode anywhere in your WordPress content. For example:

```
Content before player.

[beyondwords_player]

Content after player.
```

{/* ![Shortcode in Classic Editor](/assets/images/integration/wordpress/shortcode-classic-editor.png) */}

##### PHP

The WordPress `do_shortcode` function can be used to output a player in PHP.

```php
<p>Content before player.</p>
<?php echo do_shortcode( '[beyondwords_player]' ); ?>
<p>Content after player.</p>
```

<Info>
  Our shortcode will only function whilst running inside The Loop, because each BeyondWords Player needs to access the audio data we store in the `beyondwords_content_id` and `beyondwords_project_id` custom fields.

  If you would like to display BeyondWords Players outside of the The Loop then please email the details of your use case to [support@beyondwords.io](mailto:support@beyondwords.io).
</Info>

### Generate audio by category

You can choose to have the Generate audio checkbox in the editor deselected by default for certain categories.

<Steps>
  <Step title="Access category settings">
    Head to the plugin settings at Settings > BeyondWords.

    Uncheck **Posts** and you'll see a list of your categories below.

    {/* ![Category settings](/assets/images/integration/wordpress/category-settings.png) */}
  </Step>

  <Step title="Select categories">
    Check the categories for which you want to automatically generate audio.

    Assigning any of the categories you check here to a new post will check the Generate audio checkbox on the post edit screen automatically.

    {/* ![Selected categories](/assets/images/integration/wordpress/selected-categories.png) */}
  </Step>
</Steps>

### BeyondWords sidebar

Access advanced audio options for each post in the BeyondWords Sidebar.

The BeyondWords Sidebar for the Block Editor is toggled using the audio icon in the top right of the post edit screen.

{/* ![BeyondWords Sidebar toggle](/assets/images/integration/wordpress/sidebar-toggle.png) */}

The sidebar includes the following panels:

#### Status

Control the audio status and the onscreen presentation of the player using the Status panel. If audio has been generated you can also preview the audio here.

{/* ![Status panel](/assets/images/integration/wordpress/status-panel.png) */}

#### Help

Access our support guide or email our support team using the links in the Help panel.

{/* ![Help panel](/assets/images/integration/wordpress/help-panel.png) */}

#### Inspect

View, copy and remove BeyondWords audio data using the Inspect panel. Refer to the [Inspect panel documentation](/docs-and-guides/integrations/wordpress/inspect-panel) for more details.

{/* ![Inspect panel](/assets/images/integration/wordpress/inspect-panel.png) */}

### Inspect panel

Our Inspect panel on the post edit screen allows you to view, copy or remove the BeyondWords data we store in WordPress for each post.

#### Access the Inspect panel

##### Block Editor

You can find the Inspect panel at the bottom the BeyondWords Sidebar. If it's closed (with the arrow pointing down) then click on the panel title to open it.

{/* ![Inspect panel in Block Editor](/assets/images/integration/wordpress/inspect-panel-block.png) */}

##### Classic Editor

Enable or disable the BeyondWords: Inspect panel using the Screen Options.

{/* ![Inspect panel in Classic Editor](/assets/images/integration/wordpress/inspect-panel-classic.png) */}

#### Managing BeyondWords data

We provide controls at the bottom of the Inspect panel to manage linked audio data.

##### Copy

Use "Copy" to copy the BeyondWords audio data in text format.

Pasting this data into a support request enables us to see exactly what audio data has been saved for a particular post.

{/* ![Copy audio data](/assets/images/integration/wordpress/copy-audio-data.png) */}

##### Remove

Use "Remove" to remove the audio data from the post – to delete all BeyondWords custom fields from your post. Recent versions of our WordPress plugin will also attempt to delete the audio from your BeyondWords dashboard, to keep WordPress and your BeyondWords dashboard in sync.

To prevent accidental deletion, after pressing "Remove" you will then need to save your changes to the post. The audio data will not be removed until the post has been updated.

{/* ![Remove audio data](/assets/images/integration/wordpress/remove-audio-data.png) */}

### Copy site health

To help our team debug any issues, or respond to your queries, please send us your WordPress site health information.

<Steps>
  <Step title="Access Site Health">
    In the left-hand sidebar of your WordPress admin dashboard, select **Tools > Site Health**.

    {/* ![Access Site Health](/assets/images/integration/wordpress/access-site-health.png) */}
  </Step>

  <Step title="Copy site information">
    Once in the Site Health panel, click on the **Info** tab.

    Click **Copy site info to clipboard** and append this to your support query.

    {/* ![Copy site info](/assets/images/integration/wordpress/copy-site-info.png) */}
  </Step>
</Steps>

This information helps our support team better understand your WordPress environment and resolve issues more efficiently.

### Plugin & theme compatibility

We are compatible with most other plugins and themes that you may have installed on your WordPress site. You will usually not need to do anything to use our plugin with the other plugins/themes of your site.

This section includes supporting documentation for plugins/themes that we aim to be compatible with, and any steps that you will need to take to ensure compatibility when we could not provide it automatically.

<Info>
  If you have a question regarding compatibility with plugins/themes, or you are a plugin/theme developer who would like to ensure compatibility, then please email us at [support@beyondwords.io](mailto:support@beyondwords.io).
</Info>

#### Newspack

The Newspack Theme adds some non-standard fields into the WordPress edit screens and presents the values in the theme template files. These custom fields are not be passed to our API by default, but you can send them to us using a WordPress filter.

##### Include Newspack custom fields in your audio content

If you want the Newspack Subtitle, Summary title and Summary body to be included in your audio content then you can use the `beyondwords_content_params` WordPress filter to send them to us.

```php
function my_beyondwords_content_params( $params, $post_id ) {
    $subtitle = get_post_meta( $post_id, 'newspack_post_subtitle', true);
    $summary_title = get_post_meta( $post_id, 'newspack_article_summary_title', true);
    $summary = get_post_meta( $post_id, 'newspack_article_summary', true);
    
    $prepend = '';
    
    if ( $subtitle ) {
        $prepend .= '<p>' . esc_html( $subtitle ) . '</p>';
    }
    
    if ( $summary_title ) {
        $prepend .= '<p>' . esc_html( $summary_title ) . '</p>';
    }
    
    if ( $summary ) {
        $prepend .= '<p>' . esc_html( $summary ) . '</p>';
    }
    
    $params['body'] = $prepend . $params['body'];
    
    return $params;
}

add_filter( 'beyondwords_content_params', 'my_beyondwords_content_params', 10, 2 );
```

You can optionally include additional standard WordPress content that your theme may display, such as the author name and the article publish date, by integrating the code above with the Example 1 from our [beyondwords\_content\_params WordPress filter documentation](/docs-and-guides/integrations/wordpress/filters/beyondwords-content-params).

### WPGraphQL

For WordPress sites using WPGraphQL, the BeyondWords project ID and content ID are available as fields at the following locations:

* `beyondwords.projectId`
* `beyondwords.contentId`

You can use the values of these fields to embed an audio player using one of our [Player SDKs](/docs-and-guides/player/sdks).

#### Sample GraphQL Query

Retrieve the post title and the BeyondWords data for your posts.

##### Query

```graphql
query MyQuery {
  posts {
    nodes {
      title
      beyondwords {
        projectId
        contentId
      }
    }
  }
}
```

##### Example response

```json
{
  "data": {
    "posts": {
      "nodes": [
        {
          "title": "A post",
          "beyondwords": {
            "projectId": 1234,
            "contentId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        },
        {
          "title": "Another post",
          "beyondwords": {
            "projectId": 1234,
            "contentId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
          }
        }
      ]
    }
  }
}
```

<Note>
  For legacy support we provide a 3rd field `beyondwords.podcastId` with the same value as `contentId`. If you are currently using `podcastId` then please update your application to read `contentId` instead. The `podcastId` field is deprecated and it will be removed in plugin version 5.0.
</Note>


# API (Legacy)
Source: https://docs.beyondwords.io/docs-and-guides/migration-guides/api-legacy

Migrate from legacy API to current version

We're deprecating our legacy API at the end of Q2 2025.

To support this change, we've created a migration guide to help you update your integration. It includes example requests, responses and the steps needed to migrate.

If you're currently using the legacy API, please read this migration guide to ensure continued functionality. You can find our most up-to-date API documentation [here](/api-reference).

## Updating your request header

|                           | Legacy API                          | New API                         |
| ------------------------- | ----------------------------------- | ------------------------------- |
| **Base URL**              | `https://app.beyondwords.io/api/v4` | `https://api.beyondwords.io/v1` |
| **Authentication header** | `'Authorization'`                   | `'X-Api-Key'`                   |
| **Authentication value**  | Your API key                        | Your API key                    |

### Example requests

<CodeGroup>
  ```javascript New API
  curl --request POST \
       --url https://api.beyondwords.io/v1 \
       --header 'X-Api-Key: <APIKEY>' \
       --header 'Content-Type: application/json' \
  ```

  ```javascript Legacy API
  curl -L \
    --request POST \
    --url 'https://app.beyondwords.io/api/v4' \
    --header 'Authorization: <APIKEY>' \
    --header 'Content-Type: application/json' \

  ```
</CodeGroup>

### Key differences

* Base URL: `https://api.beyondwords.io/v1` (replaces `https://app.beyondwords.io/api/v4`)

* Authentication: `X-Api-Key` (replaces `Authorization` header)

## Endpoint and request body updates

<br />

|                         | Legacy API                     | New API                                                                     |
| ----------------------- | ------------------------------ | --------------------------------------------------------------------------- |
| **Endpoint**            | `/projects/{project_id}/audio` | `/projects/{project_id}/content`                                            |
| **Title Format**        | Plain text                     | Plain text or HTML-formatted (e.g., `<h1>Title</h1>`) — **HTML preferred.** |
| **Body Format**         | Plain text                     | Plain text or HTML-formatted (e.g., `<p>Body</p>`) — **HTML preferred.**    |
| **Content ID Handling** | Set using `'external_id'`      | Set using `'source_id'`                                                     |

### Example requests

<CodeGroup>
  ```javascript New API
  curl --request POST \
       --url https://api.beyondwords.io/v1/projects/{project_id}/content \
       --header 'X-Api-Key: <APIKEY>' \
       --header 'Content-Type: application/json' \
       --data '
  {
    "type": "auto_segment",
    "title": "<h1>Title</h1>",
    "body": "<p>Example body text.</p>",
    "source_id": "<articleId>"
  }'
  ```

  ```javascript Legacy API
  curl -L \
    --request POST \
    --url 'https://app.beyondwords.io/api/v4/projects/{project_id}/audio' \
    --header 'Authorization: <API KEY>' \
    --header 'Content-Type: application/json' \
    --data '
  {
    "title":"Title",
    "body":"Example body text.",
    "external_id":"<articleId>"
  }'
  ```
</CodeGroup>

These examples compare requests made using the Legacy APIs create endpoint  with those using the new APIs create endpoint.

### Example response

<CodeGroup>
  ```javascript New API
  {
    "id": "744429b3-d77e-4230-b29f-c301f9da3bdd",
    "title": "title",
    "type": "auto_segment",
    "source_id": "<articleId>",
    "source_url": null,
    "published": true,
    "publish_date": "2025-03-12T16:28:19Z",
    "auto_segment_updates_enabled": true,
    "ai_summary_updates_enabled": true,
    "summary": null,
    "body": "example body text"
  }
  ```

  ```javascript Legacy API
  {
    "id": 15312327,
    "title": "Title",
    "external_id": "<articleId>",
    "state": "unprocessed",
    "metadata": {
      "key": "value"
    },
    "media": [],
    "image_url": null,
    "deleted": false,
    "access_key": null,
    "processing_at": "2025-02-18T16:33:35.537Z",
    "published": true,
    "published_at": "2025-02-18T16:33:35.315Z",
    "source_id": "<externallySetID>"
  }
  ```
</CodeGroup>

<Info>This is not a full response. It has been shortened to highlight the main differences. For more details on what a full response looks like, please visit our [documentation](#).</Info>

### Key differences

In the legacy API response, the returned ID is a numeric "podcast" id , which will no longer be used. In contrast, the new API returns a string `content_id`, which will remain the standard identifier moving forward.

While setting a `source_id` when creating content is optional, doing so eliminates the need to store the `content_id` from the response. Without a `source_id`, you may need to save the `content_id` separately to embed the player. By setting the `source_id` as the article ID you may have already set, you can easily use this to embed the BeyondWords player without additional data handling.

## Migration steps

<Steps>
  <Step title="Update the base URL">
    * Change all API requests from: `https://app.beyondwords.io/api/v4`
    * To: `https://api.beyondwords.io/v1`
      <Tip>Search your codebase for the legacy URL to find all instances</Tip>
  </Step>

  <Step title="Update request header method">
    * Legacy API: Uses the `Authorization` header with the API key.
    * New API: Requires the `X-Api-Key` header with the API key.
    * **Note**: The API key value itself remains the same
  </Step>

  <Step title="Update endpoints">
    Replace old API endpoints with the new ones:

    * Legacy API: `/projects/{project_id}/audio`
    * New API: `/projects/{project_id}/content`
    * **Also update**: Any other endpoints you're using (see our [full documentation](#))
  </Step>

  <Step title="Handle ID changes">
    * Legacy API: Returns a numeric "podcast" id (deprecated).
    * New API: Returns a string-based UUID "content" id.
    * **Action required**: Update any code that expects or processes the ID
  </Step>

  <Step title="Use source_id for easier integration">
    * Change field name from `external_id` to `source_id` in your requests
    * Setting a `source_id` when creating content is optional but recommended
    * If you set `source_id` to match your existing article ID, you can use it to embed the BeyondWords player without needing to store the content\_id from the response
  </Step>

  <Step title="Update Content Format (Optional)">
    * Consider using HTML formatting for title and body content
    * Example: `"title": "<h1>Title</h1>"` instead of `"title": "Title"`
    * This provides better control over how content is processed
  </Step>
</Steps>

## FAQ

**Q: Will my existing API key still work?**\
A: Yes, your API key will continue to work. Only the header name and endpoints are changing.

**Q: What happens if I don't migrate by the deadline?**\
A: After Q2 2025, the legacy API will be shut down and any applications using it will receive errors.

**Q: Can I use both APIs during the transition period?**\
A: Yes, both APIs will be available until the deprecation date to allow for a smooth transition.

📖 For full details, refer to our [API documentation](/api-reference).\
💬 If you need further support, reach out on Slack or contact [support@beyondwords.io](mailto:support@beyondwords.io).

## Summary of key changes

| Feature            | Legacy API                          | New API                          | Notes                                    |
| ------------------ | ----------------------------------- | -------------------------------- | ---------------------------------------- |
| Base URL           | `https://app.beyondwords.io/api/v4` | `https://api.beyondwords.io/v1`  | All endpoints use the new base URL       |
| Authentication     | `Authorization` header              | `X-Api-Key` header               | Same API key, different header name      |
| Content creation   | `/projects/{project_id}/audio`      | `/projects/{project_id}/content` | Endpoint name change                     |
| Content identifier | Numeric `id`                        | String UUID `id`                 | Format change for BeyondWords content ID |
| Article identifier | `external_id`                       | `source_id`                      | Field name change (both string format)   |
| Content format     | Plain text only                     | Plain text or HTML (preferred)   | Enhanced formatting options              |

<Warning>
  Remember to update all instances where your application interacts with our API, including scheduled jobs, error handling, and any third-party integrations.
</Warning>


# Player (Legacy)
Source: https://docs.beyondwords.io/docs-and-guides/migration-guides/player-legacy

Migrate from legacy player to current version

We're deprecating our legacy Player at the end of Q2 2025.

To support this transition, we've created a migration guide to help you update your integration and take advantage of the new features.

This guide will walk you through the migration process, whether by updating the player embed script or using NPM.

## Whats new?

The updated player comes with several new customization features designed to enhance user engagement and improve the listening experience.

For more details on the new player’s features, visit our [player documentation](/docs-and-guides/distribution/player/settings). To explore customization options and test new features in a sandbox environment, check out our [player demo page](https://beyondwords-io.github.io/player-demo/).

## Update the Embed Script

To start using the new BeyondWords player, you’ll need to replace the legacy embed script with the one below.

<CodeGroup>
  ```javascript New Embed Script
  <script async defer src="https://proxy.beyondwords.io/npm/@beyondwords/player@latest/dist/umd.js" 
    onload="new BeyondWords.Player({ 
      target: this, 
      projectId: <projectID>,
      contentId: '<ID>'
    })">
  </script>;
  ```

  ```javascript Legacy Embed Script
  <iframe
    id="speechkit-io-iframe"
    data-src="https://audio.beyondwords.io/e/{contentID}"
    frameborder="0"
    scrolling="no"
    allowfullscreen="false"
    style="display: none;">
  </iframe>

  <script 
    src="https://proxy.beyondwords.io/npm/@beyondwords/audio-player@latest/dist/module/iframe-helper.js" 
    type="text/javascript">
  </script>

  ```
</CodeGroup>

* The `<script>` tag loads the BeyondWords Player and instantiates a new player instance.

* The async and defer attributes ensure the browser doesn’t stall while downloading the script.

* Setting `target: this` places the player immediately after the script tag in the `<body>`. If you need a different placement, you can specify another target.

* You must replace the `<ID>` placeholders in the script with your **projectId** and **contentId** to ensure the correct audio is played.

You can use any of the following properties along with **projectId** to initialise the player.

| **Property** | **Description**                                                                                                                                                                                   |
| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `contentId`  | Unique UUID string for the audio content.<br /> You can also pass the previous integer audio ID as a string for users migrating from the legacy API.                                              |
| `sourceId`   | The externally provided source identifier for a content item.<br />This could be the ID from your CMS, the `<guid>` from an RSS `<item>`, or the post ID if generated using the WordPress Plugin. |
| `sourceUrl`  | The URL containing the source content.<br /> This could be the public URL submitted via the API, the `<link>` from an RSS `<item>`, or the post URL from the WordPress Plugin.                    |
| `playlistId` | The unique ID for a playlist created in the dashboard or through the API.                                                                                                                         |

## Update via NPM

<Steps>
  <Step title="Add the new player NPM package">
    <CodeGroup>
      ```javascript New
      npm add @beyondwords/player
      ```

      ```javascript Legacy
      npm install --save @beyondwords/audio-player
      ```
    </CodeGroup>
  </Step>

  <Step title="Add a target <div>">
    This will be where the player is shown in your web application.

    ```javascript
    <div id='beyondwords-player'></div>
    ```
  </Step>

  <Step title="Initialize the player">
    ```javascript
    import BeyondWords from '@beyondwords/player';

    new BeyondWords.Player({ target: '#beyondwords-player', projectID: <ID>, contentId: '<ID>' });
    ```

    You must replace the `<ID>` placeholders in the script with your **projectId** and **contentId** to ensure the correct audio is played.
  </Step>
</Steps>

You can use any of the following properties along with **projectId** to initialise the player.

| **Property** | **Description**                                                                                                                                                                                   |
| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `contentId`  | Unique UUID string for the audio content.<br /> You can also pass the previous integer audio ID as a string for users migrating from the legacy API.                                              |
| `sourceId`   | The externally provided source identifier for a content item.<br />This could be the ID from your CMS, the `<guid>` from an RSS `<item>`, or the post ID if generated using the WordPress Plugin. |
| `sourceUrl`  | The URL containing the source content.<br /> This could be the public URL submitted via the API, the `<link>` from an RSS `<item>`, or the post URL from the WordPress Plugin.                    |
| `playlistId` | The unique ID for a playlist created in the dashboard or through the API.                                                                                                                         |


# Custom
Source: https://docs.beyondwords.io/docs-and-guides/monetization/custom

Launch direct ads with BeyondWords

## Overview

Use Custom ads to upload, launch, and track your own ads. You can launch both audio and video ads.

![monetization](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/monetization/monetization.png)

<Info>
  Audio ads will play on audio articles or summaries. Video ads will play on video articles or summaries.
</Info>

## Create a Custom ad

To create a Custom ad:

1. Go to **Project > Monetization**.
2. Click **+ ad**.
3. Select **Custom**.
4. Upload the audio or video ad.
5. Enter a name for the ad. This will be visible to users.
6. Set the ad placement: pre-roll, mid-roll, or post-roll.
7. Set the ad schedule (optional).
8. Add a companion URL (optional). This will be a clickable link shown to users when the ad plays.
9. Add a companion image (optional). This will be a clickable image shown to users when the ad plays.
10. Customize the player appearance (optional). You can customize the player appearance to match the ad.
11. Click **Save changes**.

## Enable or disable a Custom ad

To enable or disable a Custom ad:

1. Go to **Project > Monetization**.
2. Toggle the ad to **Enabled** or **Disabled**.

## Edit a Custom ad

To edit a Custom ad:

1. Go to **Project > Monetization**.
2. Click the ad you want to edit.
3. Click the **⋯** button.
4. Select **Edit**.
5. Make the necessary changes.
6. Click **Save changes**.

## Delete a Custom ad

To delete a Custom ad:

1. Go to **Project > Monetization**.
2. Click the ad you want to edit.
3. Click the **⋯** button.
4. Select **Delete**.

## Ad metrics

BeyondWords tracks the following metrics on a per-ad basis. The metrics are updated every few minutes.

### Plays

The number of times an ad was played. We count one play per user session.

### Completion rate

The percentage of ad plays that reached completion. We calculate this as Completions divided by Plays.

### Completions

The number of ad plays that reached completion. We count this when the ad finishes playing.

### Click-through rate

The percentage of ad plays that resulted in clicks. We calculate this as Click divided by Plays.

### Clicks

The number of times an ad was clicked. We count one click per user session.

## Filter metrics

You can filter the ad metrics by the following:

* **Content type**: Articles or Summaries
* **Device**: Desktop, Mobile (web), Tablet (web), iOS (SDK), Android (SDK)
* **Date range**: All time, Month to date, Today, Yesterday, Last 7 days, Last 14 days, Last 30 days, Last 90 days, Last 180 days, Custom


# VAST
Source: https://docs.beyondwords.io/docs-and-guides/monetization/vast

Connect to an ad server via VAST to serve ads through the BeyondWords player

## Overview

Use VAST to serve ads through the BeyondWords player.

![monetization](https://mintlify.s3.us-west-1.amazonaws.com/beyondwords/assets/images/new-images/monetization/monetization.png)

<Info>
  Audio ads will play on audio articles or summaries. Video ads will play on video articles or summaries.
</Info>

## Create a VAST ad

To create a Custom ad:

1. Go to **Project > Monetization**.
2. Click **+ ad**.
3. Select **VAST**.
4. Enter a name for the ad. This will not be visible to users.
5. Set the ad placement: pre-roll, mid-roll, or post-roll.
6. Set the ad schedule (optional).
7. Click **Save changes**.

<Note>
  Having issues setting up a VAST ad? Contact [support](mailto:support@beyondwords.io) for help.
</Note>

## Enable or disable a VAST ad

To enable or disable a VAST ad:

1. Go to **Project > Monetization**.
2. Toggle the ad to **Enabled** or **Disabled**.

## Edit a VAST ad

To edit a VAST ad:

1. Go to **Project > Monetization**.
2. Click the ad you want to edit.
3. Click the **⋯** button.
4. Select **Edit**.
5. Make the necessary changes.
6. Click **Save changes**.

## Delete a VAST ad

To delete a VAST ad:

1. Go to **Project > Monetization**.
2. Click the ad you want to edit.
3. Click the **⋯** button.
4. Select **Delete**.

## Ad metrics

<Note>
  VAST ads are not tracked by BeyondWords.
</Note>


# Languages and accents
Source: https://docs.beyondwords.io/docs-and-guides/voices/languages-and-accents

Learn which languages and accents are supported in BeyondWords

| Language         | Accent                                  | Premade | Instant | Professional |
| :--------------- | :-------------------------------------- | :------ | :------ | :----------- |
| English          | American                                | ✓       | ✓       | ✓            |
| English          | Australian                              | ✓       | ✓       | ✓            |
| English          | British                                 | ✓       | ✓       | ✓            |
| English          | Canadian                                | ✓       | ✓       | ✓            |
| English          | Hong Kong                               | ✓       |         |              |
| English          | Irish                                   | ✓       | ✓       | ✓            |
| English          | Indian                                  | ✓       | ✓       | ✓            |
| English          | Kenyan                                  | ✓       |         | ✓            |
| English          | Nigerian                                | ✓       |         | ✓            |
| English          | New Zealand                             | ✓       |         | ✓            |
| English          | Filipino                                | ✓       | ✓       | ✓            |
| English          | Singaporean                             | ✓       |         | ✓            |
| English          | Tanzanian                               | ✓       |         | ✓            |
| English          | South African                           | ✓       |         | ✓            |
| Afrikaans        | South African                           | ✓       |         | ✓            |
| Albanian         | Albanian                                | ✓       |         |              |
| Amharic          | Ethiopian                               | ✓       | ✓       |              |
| Arabic           | Algerian                                | ✓       |         |              |
| Arabic           | Bahraini                                | ✓       |         |              |
| Arabic           | Egyptian                                | ✓       | ✓       | ✓            |
| Arabic           | Iraqi                                   | ✓       |         |              |
| Arabic           | Jordanian                               | ✓       |         |              |
| Arabic           | Kuwaiti                                 | ✓       |         |              |
| Arabic           | Lebanese                                | ✓       |         |              |
| Arabic           | Libyan                                  | ✓       |         |              |
| Arabic           | Moroccan                                | ✓       |         |              |
| Arabic           | Omani                                   | ✓       |         | ✓            |
| Arabic           | Qatari                                  | ✓       |         |              |
| Arabic           | Saudi Arabian                           | ✓       | ✓       | ✓            |
| Arabic           | Syrian                                  | ✓       |         | ✓            |
| Arabic           | Tunisian                                | ✓       |         | ✓            |
| Arabic           | Emirati                                 | ✓       |         |              |
| Arabic           | Yemeni                                  | ✓       |         |              |
| Armenian         | Armenian                                | ✓       |         |              |
| Assamese         | Indian                                  | ✓       |         |              |
| Azerbaijani      | Azerbaijani (Latin)                     | ✓       |         |              |
| Bangla           | Bangladeshi                             | ✓       |         |              |
| Basque           | Basque                                  | ✓       | ✓       |              |
| Bengali          | Indian                                  | ✓       | ✓       |              |
| Bosnian          | Bosnian and Herzegovinian               | ✓       | ✓       |              |
| Bulgarian        | Bulgarian                               | ✓       | ✓       | ✓            |
| Burmese          | Myanmar                                 | ✓       |         |              |
| Catalan          | Catalan                                 | ✓       | ✓       | ✓            |
| Chinese          | Cantonese (Simplified)                  | ✓       | ✓       | ✓            |
| Chinese          | Cantonese (Traditional)                 | ✓       | ✓       | ✓            |
| Chinese          | Mandarin (Simplified)                   | ✓       | ✓       | ✓            |
| Chinese          | Taiwanese Mandarin (Traditional)        | ✓       | ✓       | ✓            |
| Chinese          | Wu (Simplified)                         | ✓       | ✓       | ✓            |
| Chinese          | Guangxi Accent Mandarin (Simplified)    | ✓       | ✓       | ✓            |
| Chinese          | Zhongyuan Mandarin Henan (Simplified)   | ✓       | ✓       | ✓            |
| Chinese          | Northeastern Mandarin (Simplified)      | ✓       | ✓       | ✓            |
| Chinese          | Zhongyuan Mandarin Shaanxi (Simplified) | ✓       | ✓       | ✓            |
| Chinese          | Jilu Mandarin (Simplified)              | ✓       | ✓       | ✓            |
| Chinese          | Southwestern Mandarin (Simplified)      | ✓       | ✓       | ✓            |
| Croatian         | Croatian                                | ✓       | ✓       | ✓            |
| Czech            | Czech                                   | ✓       | ✓       |              |
| Danish           | Danish                                  | ✓       | ✓       | ✓            |
| Dutch            | Belgian                                 | ✓       | ✓       | ✓            |
| Dutch            | Dutch                                   | ✓       | ✓       | ✓            |
| Estonian         | Estonian                                | ✓       | ✓       |              |
| Filipino         | Filipino                                | ✓       |         |              |
| Finnish          | Finnish                                 | ✓       | ✓       | ✓            |
| French           | Belgian                                 | ✓       | ✓       | ✓            |
| French           | Canadian                                | ✓       | ✓       | ✓            |
| French           | French                                  | ✓       | ✓       | ✓            |
| French           | Swiss                                   | ✓       | ✓       | ✓            |
| Galician         | Galician                                | ✓       | ✓       |              |
| Georgian         | Georgian                                | ✓       |         |              |
| German           | Austrian                                | ✓       | ✓       | ✓            |
| German           | German                                  | ✓       | ✓       | ✓            |
| German           | Swiss                                   | ✓       | ✓       | ✓            |
| Greek            | Greek                                   | ✓       | ✓       | ✓            |
| Gujarati         | Indian                                  | ✓       |         |              |
| Hebrew           | Israeli                                 | ✓       | ✓       | ✓            |
| Hindi            | Indian                                  | ✓       | ✓       | ✓            |
| Hungarian        | Hungarian                               | ✓       | ✓       | ✓            |
| Icelandic        | Icelandic                               | ✓       |         |              |
| Indonesian       | Indonesian                              | ✓       | ✓       | ✓            |
| Inuktitut        | Canadian (Latin)                        | ✓       |         |              |
| Inuktitut        | Canadian (Syllabics)                    | ✓       |         |              |
| Irish            | Irish                                   | ✓       |         |              |
| Italian          | Italian                                 | ✓       | ✓       | ✓            |
| Japanese         | Japanese                                | ✓       | ✓       | ✓            |
| Javanese         | Indonesian (Latin)                      | ✓       | ✓       |              |
| Kannada          | Indian                                  | ✓       |         |              |
| Kazakh           | Kazakh                                  | ✓       |         |              |
| Khmer            | Cambodian                               | ✓       |         |              |
| Kiswahili        | Kenyan                                  | ✓       | ✓       |              |
| Kiswahili        | Tanzanian                               | ✓       |         |              |
| Korean           | Korean                                  | ✓       | ✓       | ✓            |
| Lao              | Laotian                                 | ✓       |         |              |
| Latvian          | Latvian                                 | ✓       |         |              |
| Lithuanian       | Lithuanian                              | ✓       |         |              |
| Macedonian       | North Macedonian                        | ✓       | ✓       |              |
| Malay            | Malaysian                               | ✓       | ✓       | ✓            |
| Malayalam        | Indian                                  | ✓       |         |              |
| Maltese          | Maltese                                 | ✓       |         |              |
| Marathi          | Indian                                  | ✓       |         |              |
| Mongolian        | Mongolian                               | ✓       |         |              |
| Nepali           | Nepali                                  | ✓       | ✓       |              |
| Norwegian Bokmål | Norwegian                               | ✓       | ✓       | ✓            |
| Odia             | Indian                                  | ✓       |         |              |
| Pashto           | Afghan                                  | ✓       | ✓       |              |
| Persian          | Iranian                                 | ✓       |         |              |
| Polish           | Polish                                  | ✓       | ✓       | ✓            |
| Portuguese       | Brazilian                               | ✓       | ✓       | ✓            |
| Portuguese       | Portuguese                              | ✓       | ✓       | ✓            |
| Punjabi          | Indian                                  | ✓       |         |              |
| Romanian         | Romanian                                | ✓       | ✓       | ✓            |
| Russian          | Russian                                 | ✓       | ✓       | ✓            |
| Serbian          | Serbian (Cyrillic)                      | ✓       |         |              |
| Serbian          | Serbian (Latin)                         | ✓       |         |              |
| Sinhala          | Sri Lankan                              | ✓       |         |              |
| Slovak           | Slovak                                  | ✓       | ✓       | ✓            |
| Slovenian        | Slovenian                               | ✓       | ✓       | ✓            |
| Somali           | Somali                                  | ✓       |         |              |
| Spanish          | Argentinian                             | ✓       |         | ✓            |
| Spanish          | Bolivian                                | ✓       |         |              |
| Spanish          | Chilean                                 | ✓       |         | ✓            |
| Spanish          | Colombian                               | ✓       |         |              |
| Spanish          | Costa Rican                             | ✓       |         |              |
| Spanish          | Cuban                                   | ✓       |         |              |
| Spanish          | Dominican                               | ✓       |         |              |
| Spanish          | Ecuadorian                              | ✓       |         |              |
| Spanish          | Equatorial Guinean                      | ✓       |         |              |
| Spanish          | Guatemalan                              | ✓       |         |              |
| Spanish          | Honduran                                | ✓       |         |              |
| Spanish          | Mexican                                 | ✓       | ✓       | ✓            |
| Spanish          | Nicaraguan                              | ✓       |         |              |
| Spanish          | Panamanian                              | ✓       |         |              |
| Spanish          | Paraguayan                              | ✓       |         |              |
| Spanish          | Peruvian                                | ✓       |         |              |
| Spanish          | Puerto Rican                            | ✓       |         |              |
| Spanish          | Salvadoran                              | ✓       |         |              |
| Spanish          | Spanish                                 | ✓       | ✓       | ✓            |
| Spanish          | American                                | ✓       |         | ✓            |
| Spanish          | Uruguayan                               | ✓       |         |              |
| Spanish          | Venezuelan                              | ✓       |         |              |
| Sundanese        | Indonesian                              | ✓       |         |              |
| Swedish          | Swedish                                 | ✓       | ✓       | ✓            |
| Tamil            | Indian                                  | ✓       | ✓       | ✓            |
| Tamil            | Malaysian                               | ✓       |         | ✓            |
| Tamil            | Singaporean                             | ✓       |         |              |
| Tamil            | Sri Lankan                              | ✓       |         |              |
| Telugu           | Indian                                  | ✓       | ✓       | ✓            |
| Thai             | Thai                                    | ✓       | ✓       | ✓            |
| Turkish          | Turkish                                 | ✓       | ✓       | ✓            |
| Ukrainian        | Ukrainian                               | ✓       | ✓       |              |
| Urdu             | Indian                                  | ✓       |         |              |
| Urdu             | Pakistani                               | ✓       |         |              |
| Uzbek            | Uzbek (Latin)                           | ✓       |         |              |
| Vietnamese       | Vietnamese                              | ✓       | ✓       | ✓            |
| Welsh            | British                                 | ✓       |         |              |
| isiZulu          | South African                           | ✓       | ✓       |              |


# Overview
Source: https://docs.beyondwords.io/docs-and-guides/voices/overview

Learn how to create and use voices with BeyondWords.

Speak to your audience in voices that resonate and delight. Turn writers
into narrators, or choose a signature voice to represent your brand.

BeyondWords provides you with multiple voice options to turn your articles into captivating audio.

## Voice options

<Card title="Premade Voices" href="/docs-and-guides/voices/premade-voices">
  Explore our collection of ready-to-use high-quality voices in various languages and accents.
</Card>

<Card title="Instant Voice Cloning" href="/docs-and-guides/voices/voice-cloning/instant-voice-cloning">
  Create a natural sounding voice in minutes with as little as 10 seconds of audio.
</Card>

<Card title="Professional Voice Cloning" href="/docs-and-guides/voices/voice-cloning/professional-voice-cloning">
  Create a highly natural sounding voice in 24 hours with as little as 30 minutes of audio.
</Card>

## Setting your project voice

In BeyondWords, you can set a default voice for your project. This voice will be used for all the audio generated in this project unless you specify otherwise.

<Steps>
  <Step title="Go to the Voices tab">
    In your project, go to the Content section, select Preferences, and then select the Voices tab.
  </Step>

  <Step title="Select Language and Accent">
    In the Voices tab, select the language and accent you want to use.
  </Step>

  <Step title="Choose a voice">
    You will be able to see a list of voices that match your language and accent. You can preview each voice by clicking on the play button. Click "Use voice" to set the voice as your default.

    **Pro tip:** Set a different default voice for titles, body text or summaries by clicking the down arrow and selecting whether to use as title, body, or summary voice.

    Once confirmed, this voice will be the default voice whenever you generate audio in this project unless you specify otherwise.
  </Step>
</Steps>


# Premade voices
Source: https://docs.beyondwords.io/docs-and-guides/voices/premade-voices

Our curated collection of high-quality voices.

Explore our collection of ready-to-use high-quality voices in various [languages and accents](/docs-and-guides/voices/languages-and-accents).

## Use a Premade voice

<Steps>
  <Step title="Go to the Voices tab">
    In your project, go to the Content section, select Preferences, and then select the Voices tab.
  </Step>

  <Step title="Select Language and Accent">
    In the Voices tab, select the language and accent you want to use.
  </Step>

  <Step title="Browse voices">
    You will be able to see a list of premade voices that match your language and accent. You can preview each voice by clicking on the play button. Click "Use voice" to set the voice as your default.

    **Pro tip:** Set a different default voice for titles, body text or summaries by clicking the down arrow and selecting whether to use as title, body, or summary voice.

    Once confirmed, this voice will be the default voice whenever you generate audio in this project unless you specify otherwise.
    />
    Once confirmed, this voice will be the default voice whenever you generate audio in this project unless you specify otherwise.
  </Step>
</Steps>

<Tip>
  Click the (⋯) button to the right of the voice to adjust the default speaking rate or copy the voice ID.
</Tip>


# Instant voice cloning
Source: https://docs.beyondwords.io/docs-and-guides/voices/voice-cloning/instant-voice-cloning

Learn how to create an instant voice clone with BeyondWords.

Instant voice cloning fine-tunes an existing model to sound just like you, delivering a voice so natural it's like having your own personal narrator on standby.

See [supported languages and accents](/docs-and-guides/voices/languages-and-accents).

<CardGroup cols="2">
  <Card title="10 seconds" icon="microphone">
    Record or upload a short clip of your voice.
  </Card>

  <Card title="Ready in seconds" icon="bolt">
    Turn your sample into a production-ready voice in seconds.
  </Card>

  <Card title="Multilingual" icon="globe">
    Your voice speaks multiple languages without additional recordings.
  </Card>

  <Card title="Custom pronunciations" icon="wand-magic-sparkles">
    Our Instant Voice Clones support full pronunciation customization—including IPA—across all languages.
  </Card>
</CardGroup>

## Create an instant voice clone

<Steps>
  <Step title="Go to the Voice cloning section">
    Click on the top left menu and select Voice cloning.
  </Step>

  <Step title="Create a Speaker">
    To create a voice, you need to create a speaker. Click on the "+ Speaker" button and enter your Speaker's first and last name.

    <Note>
      In the final step, the speaker will need to record a consent statement and their first and last name will be included in it.
    </Note>
  </Step>

  <Step title="Select Instant Voice Cloning">
    Click on the Speaker, click "+ Custom voice" and then select Instant voice cloning.
  </Step>

  <Step title="Add voice details">
    Give your voice a name that will help you identify it in the future. Select the language and accent of the voice you want to clone.
  </Step>

  <Step title="Upload audio">
    Record or upload a voice clip of the speaker recording the sample text.
  </Step>

  <Step title="Consent">
    Record or upload a voice clip of the speaker recording the consent statement and confirm that you have consent to clone the voice.

    <Note>
      The voice clone will only be available to your organization. No one else will be able to see or use it.
    </Note>
  </Step>
</Steps>


# Professional voice cloning
Source: https://docs.beyondwords.io/docs-and-guides/voices/voice-cloning/professional-voice-cloning

Learn how to create a professional voice clone with BeyondWords.

Professional voice cloning trains a highly natural-sounding voice model to sound just like you, delivering a voice so authentic your listeners will feel like they've got their favourite author in their pocket.

A professional voice clone will mirror the speaker data it is trained on. For an optimal clone, we require speakers to record a tailored script, such as articles, to ensure the model captures your desired speaking style.

See [supported languages and accents](/docs-and-guides/voices/languages-and-accents).

<CardGroup cols="2">
  <Card title="Record 5 articles" icon="microphone">
    Clone a voice with just 5 article recordings or 30 minutes of audio.
  </Card>

  <Card title="Ready in 24 hours" icon="clock">
    Get a highly natural voice clone within one day.
  </Card>

  <Card title="Hyper-realistic" icon="wand-magic-sparkles">
    Generate audio so authentic listeners will feel like they have their favorite author in their pocket.
  </Card>

  <Card title="Custom pronunciations" icon="wand-magic-sparkles">
    Our Professional Voice Clones support full pronunciation customization—including IPA—across all languages.
  </Card>
</CardGroup>

## Create a professional voice clone

<Steps>
  <Step title="Go to the Voice cloning section">
    Click on the top left menu and select Voice cloning.
  </Step>

  <Step title="Create a Speaker">
    To create a voice, you need to create a speaker. Click on the "+ Speaker" button and enter your Speaker's first and last name.

    <Note>
      In the final step, the speaker will need to record a consent statement and their first and last name will be included in it.
    </Note>
  </Step>

  <Step title="Select Instant Voice Cloning">
    Click on the Speaker, click "+ Custom voice" and then select Professional voice cloning.
  </Step>

  <Step title="Add voice details">
    Give your voice a name that will help you identify it in the future. Select the language and accent of the voice you want to clone.
  </Step>

  <Step title="Create a script">
    Import at least 5 articles to create a recording script. We recommend article-based scripts to ensure the model captures your desired speaking style.
  </Step>

  <Step title="Upload audio">
    Record or upload a recording of each article in the script.
  </Step>

  <Step title="Consent">
    Record or upload a voice clip of the speaker recording the consent statement and confirm that you have consent to clone the voice.

    <Note>
      The voice clone will only be available to your organization. No one else will be able to see or use it.
    </Note>
  </Step>

  <Step title="Training">
    Submit the training data to start the training process. You will receive an email when the voice clone is ready to use.
  </Step>
</Steps>

## Recording tips

The voice clone will accurately replicate the style and performance of the speaker. For this reason, it is important that each article is recorded with the same energy, pace, and style that you would like the voice clone to have.

<AccordionGroup>
  <Accordion title="Read as separate articles">
    Please record and upload one audio file per article. This will allow the speaker to give correct meaning and structure to their performance.
  </Accordion>

  <Accordion title="Take breaks">
    We recommend adequate breaks during the recording process to reduce the risk of error and voice fatigue.
  </Accordion>

  <Accordion title="Correcting mistakes">
    If you make a mistake, please re-record from an appropriate place in the article to maintain the naturalness and fluency of the recording. It is permissible to "punch in". Please let us know if you would like guidelines on achieving this.
  </Accordion>

  <Accordion title="Indicating mistakes/issues with the script">
    Click the flag icon on the right-hand side of the script recording page to report any errors, provide comments, or let us know about any edits made to the script.
  </Accordion>

  <Accordion title="Recording location">
    It is important to record in a quiet location and to use the same recording equipment throughout. We recommend recording in a professional studio and sitting at a consistent distance from the microphone. You can create a temporary setup with thick fabrics like duvets or quilts to dampen unwanted sounds and echoes.
  </Accordion>

  <Accordion title="Distance">
    The speaker should ensure they are comfortable before recording to eliminate the need for movement. Two fists away is a good starting point.
  </Accordion>

  <Accordion title="Plosives">
    Employ a pop filter to minimise "p" and "b" sounds, ensuring crisp audio.
  </Accordion>

  <Accordion title="Pronunciations">
    To ensure that words are mapped to their correct sounds, words must be pronounced accurately and distinctly, precisely as they are in the script. The script may be normalised for text-to-speech, so you may notice some unusual punctuation and formatting (for example, "2020" might be written as "twenty-twenty"). Where letters should be pronounced individually, spaces or hyphens may be used to indicate breaks (for example, "I S S", "CAR-T"). The speaker should take the time to review the script beforehand and clarify the pronunciation of any unfamiliar or ambiguous words.
  </Accordion>

  <Accordion title="Speaking style">
    Use a natural speaking style that you can maintain consistently throughout the recordings. While some variance is natural and desirable, keeping volume, pitch, intonation, and tempo as consistent as possible is important.
  </Accordion>

  <Accordion title="Voice quality">
    To ensure consistency, the speaker should take regular water breaks and rest their voice. Rather than recording the script all at once, we recommend recording in multiple short sessions to reduce the risk of the voice becoming tired or strained.
  </Accordion>

  <Accordion title="Breathing and pausing">
    Pause naturally at punctuation and try to breathe away from the microphone. Keep your breathing at a low and consistent volume, or the voice clone's breaths can become unnatural and distracting.
  </Accordion>

  <Accordion title="Hydration and mouth noise">
    Mouth noise can be copied by the voice clone and cause unpredictable results. Mouth noise can be caused by not being sufficiently hydrated. To help reduce mouth noise, it is important to become well-hydrated on the days leading up to the recording sessions and throughout. Do not wait until the day of recordings to become hydrated — your body will get rid of it. Reducing caffeine and alcohol can help. If you're sufficiently hydrated and still have audible mouth noise, chewing gum with xylitol or a bite of green apple reduces mouth noise on the day of recording.
  </Accordion>
</AccordionGroup>

## Recording requirements

We recommend saving each article as an individual .wav audio file.

* **File format**: \*.wav, Mono
* **Sampling rate**: Minimum of 22 kHz for clear audio capture.
* **Sample format**: Minimum of 16-bit PCM (uncompressed) for lossless audio quality.
* **Volume levels**: Between -23dB and -18dB RMS across the recording, with a maximum peak of -3dB to avoid clipping and distortion.
* **Signal-to-noise ratio (SNR)**: Greater than 35dB (higher is better) for minimal background noise.
* **Environment noise, echo**: Background noise level before speaking should be less than -70dB for optimal clarity.
* **Send us the files as "unprocessed" as possible**: e.g. do not apply filters, compression, limiters and the like. We'll standardise your files in-house to ensure optimal settings perfect for voice cloning


