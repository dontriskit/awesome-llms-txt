# Json Web Token(JWT)
Source: https://docs.chainbase.com/api-reference/jtw



## What is a JWT?

JSON Web Tokens (JWTs), also known as JOTs, were created to establish a standard and secure method for two parties to communicate. They offer the advantage of stateless session management, eliminating the need for communication between a backend server and an authorization server.

JWTs can be transmitted via an HTTP header, URL, or POST parameter, and their compact size contributes to their efficiency. A JWT comprises three parts: a **Header**, **Payload**, and **Signature**, each separated by a period and derived from a JSON object that is encoded into a text string using BASE64. Further information on this standard is available in [RFC-7519](https://tools.ietf.org/html/rfc7519).

## How to use JWT in Chainbase?

Chainbase now provides users with the option to safeguard their blockchain nodes using the JWT authentication method. This feature can be utilized either as a stand-alone security measure or in conjunction with other protective methods offered by Chainbase, including IP whitelisting and domain whitelisting. It should be noted that if multiple authentication services are activated on a project, each method must successfully pass its security check, or the user request will result in an error.

### Generate your RSA-256 keys

Chainbase supports JWTs created from key pairs using the **RS256** algorithm.

Generate your own **RSA-256** public and private key with 2048 length. Below is the example using OpenSSL.

```bash
# generate rsa key
openssl genrsa -out jwtRSA256-private.pem 2048
openssl rsa -in jwtRSA256-private.pem -pubout -outform PEM -out jwtRSA256-public.pem
```

### Add public key to a Chainbase Project

Step 1: Login -> Dashboard -> Choose a project -> Security (tab)

Step 2: Click "Add" button and Input the public key generated in the previous step.

Step 3: You will obtain the public key ID after clicking "Create" button.

<Frame caption="Input the public key">
  <img src="https://files.readme.io/7831acc-image.png" />
</Frame>

### Enable JWT feature

After enabling the JWT feature, it is mandatory to include the JWT in the header of all subsequent requests.

<Frame caption="Require JWT for all requests">
  <img src="https://files.readme.io/d0ac1f2-image.png" />
</Frame>

### Generate the JWT

To generate a JWT, the following components are required: **Header**, **Payload**, and **Signature**.

An example of how to generate a JWT using [https://jwt.io/](https://jwt.io/) is provided below.

<Frame caption="Encode and verify JWT using the debugger">
  <img src="https://files.readme.io/bad111d-image.png" />
</Frame>

Step 1: Choose **RS256** algorithm

Step 2: Paste the following JSON to the JWT tool to encode the **Header** component.

```json
{
  "alg": "RS256",
  "typ": "JWT",
  "kid": "e7af4467-00f1-480e-97d7-6490d7f749b9"
}
```

Here are the meanings of the fields:

| Field | Description                      | Example |
| :---- | :------------------------------- | :------ |
| alg   | The signing algorithm being used | RS256   |
| typ   | The type of the token            | JWT     |
| kid   | The key id copied from Chainbase | XXX     |

Step 3: Paste the following JSON to the JWT tool to encode the **Payload** component.

```json
{
  "aud": "chainbase.com",
  "exp": 1690523501
}
```

Here are the meanings of the fields:

| Field | Description                             | Example       |
| :---- | :-------------------------------------- | :------------ |
| aud   | The audience of this JWT                | chainbase.com |
| exp   | The expiry time. Unix timestamp format. | 1690523501    |

Step 4: Input your private key to generate the **Signature** component.

Congrats! Now you get the encoded JWT. You can verify your token by providing your public key to the JWT debugger.

### Send requests with JWT

After generating the JWT, you would need to add the JWT as a part of your request header `-H "Authorization: Bearer` entry.

```bash
curl -X POST \
-H "Content-Type: application/json" \
-H "Authorization: Bearer <YOUR-JWT>" \
--data '{"jsonrpc": "2.0", "id": 1, "method": "eth_blockNumber", "params": []}' \
"https://ethereum-mainnet.s.chainbase.online/v1/<YOUR-API-KEY>"
```

In the event that the JWT feature has been activated but requests are sent without a JWT or with an invalid JWT, an HTTP **401** error status code will be returned along with the following response.

## FAQ

> Q: Which APIs are JWT supported on?
>
> A: JWT is supported on all Chainbase API services.

> Q: How do I discard a JWT before it expires?
>
> A: If your JWT might have been exposed and you want to prevent it from being used, you can remove the public key from the security tab.

> Q: Can I add multiple JWTs to a project?
>
> A: Yes. If multiple JWTs are active, the request should only match one of the available keys to succeed. Chainbase now supports up to 3 keys.

> Q: Which cipher does Chanbase support?
>
> A: RSA 256 (RS256) is supported at this time.

> Q: What expiration date should I choose?
>
> A: You can set any expiration date in the future you'd like. Generally, the shorter the expiration time, the more secure your JWT is.


# Overview
Source: https://docs.chainbase.com/api-reference/overview



<Note>
  📘 Don’t have an API key?

  Go to [console.chainbase.com](https://console.chainbase.com/) to create an account and a new API key.

  For demo purposes, you can use the key "demo" to test out the API.
</Note>

## Web3 API

Web3 API is a suite of **REST** and **Stream** APIs that simplify your web3 development process with seamless access to on-chain and off-chain data. No matter what you're building, our Web3 API will provide the necessary data support, including balance, transaction history, ownership, and price information.

<CardGroup cols={2}>
  <Card title="Basic API" href="/api-reference/web3-api/basic" />

  <Card title="NFT API" href="/api-reference/web3-api/nft" />

  <Card title="Token API" href="/api-reference/web3-api/token" />

  <Card title="Balance API" href="/api-reference/web3-api/balance" />

  <Card title="Domain API" href="/api-reference/web3-api/domain" />

  <Card title="Inscription API" href="/api-reference/web3-api/inscription" />
</CardGroup>

## Advanced API Suite

<CardGroup cols={2}>
  <Card title="Webhook API" href="/api-reference/webhook-api" />

  <Card title="SQL API" href="/api-reference/sql-api" />
</CardGroup>

## Chain RPC

The Chain API easily connects your dApp to a node that is part of the blockchain network. Developers can interact with on-chain data and send different types of transactions to the network by utilizing the endpoints provided by Chainbase

### EVM Compatible

<CardGroup cols={2}>
  <Card title="Ethereum RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Polygon RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Zksync RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="BNB Chain RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Fantom RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Avalanche RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Arbitrum RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Optimism RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Base RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Merlin RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />
</CardGroup>

### Non-EVM Compatible

<CardGroup cols={2}>
  <Card title="Aptos RPC API" href="/api-reference/node-rpc/aptos" />

  <Card title="Ton RPC API" href="/api-reference/node-rpc/ton" />

  <Card title="Sui RPC API" href="/api-reference/node-rpc/sui" />
</CardGroup>


# Data Cloud SQL Query (Classic)
Source: https://docs.chainbase.com/api-reference/sql-api/data-cloud-sql-query

post /dw/query

## Example

Query the hashes of the last 3,000 blocks in Ethereum and the number of transactions in each block:

```bash
curl -X "POST" "https://api.chainbase.online/v1/dw/query" \
     -H 'X-API-KEY: YOUR-API-KEY ' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "query": "select number, transactions_count from ethereum.blocks order by number desc limit 3000;"
}'
```

If there are more than 1000 rows, you need to paginate through the`task_id` and `page` to get all the results:

```bash
curl -X "POST" "https://api.chainbase.online/v1/dw/query" \
     -H 'X-API-KEY: YOUR-API-KEY ' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
       "task_id": "xxxxxxxxxxxxxxxxxxxxx",
       "page": 2
}'
```

<Note>
  🚧 Note

  1. When `quey_id` is passed in, the content of query will be ignored
  2. The executed request generates a `task_id`, which is valid for 1 hour
  3. A maximum of 100,000 pieces of data are allowed to be obtained from the request, and 1,000 results are paginated per page
</Note>


# Execute Queries (Alpha)
Source: https://docs.chainbase.com/api-reference/sql-api/execute-queries

post /query/execute
Limit of 100,000 results



# Get Query Results (Alpha)
Source: https://docs.chainbase.com/api-reference/sql-api/get-query-results

get /execution/{execution_id}/results



# Get Query Status (Alpha)
Source: https://docs.chainbase.com/api-reference/sql-api/get-query-status

get /execution/{execution_id}/status



# API Status Code
Source: https://docs.chainbase.com/api-reference/status-code



## JSON-RPC API

| Status Code | Description                                                                                                              | Message                                    |
| :---------- | :----------------------------------------------------------------------------------------------------------------------- | :----------------------------------------- |
| -32000      | Error code flag for backward compatibility.                                                                              | Something happened, Please try again Later |
| -32600      | This is an invalid request, check the request package.                                                                   | Invalid Request                            |
| -32601      | The corresponding method is not found. You need to check whether this is the interface supported by the client standard. | Method not found                           |
| -32602      | This method uses the wrong parameter. (Check to see if the parameter is forgotten or too many.)                          | Invalid params                             |
| -32603      | There may be a network voice fault. Try again later.                                                                     | Internal error                             |
| -32700      | The parsing process sounds an error.                                                                                     | Parse error                                |

## HTTP API

| Status Code        | Message           | Description                                                                                             |
| :----------------- | :---------------- | :------------------------------------------------------------------------------------------------------ |
| 200                | OK                | Everything worked as expected.                                                                          |
| 400                | Bad Request       | The request was unacceptable, often due to missing a required parameter.                                |
| 401                | Unauthorized      | The request requires authentication. After logging in, the server may return this response to the page. |
| 402                | Request Failed    | The parameters were valid but the request failed.                                                       |
| 403                | Forbidden         | The server rejects the request.                                                                         |
| 404                | Not Found         | The requested resource doesn't exist.                                                                   |
| 429                | Too Many Requests | Too many requests hit the API request rate limit.                                                       |
| 500, 502, 503, 504 | Server Errors     | Something went wrong on Chainbase's end. (These are rare.)                                              |


# Get NFTs owned by address
Source: https://docs.chainbase.com/api-reference/web3-api/balance/nft-balances/get-nfts-owned-by-address

get /v1/account/nfts
Get the list of NFTs owned by an account.



# Get ERC20 token balances
Source: https://docs.chainbase.com/api-reference/web3-api/balance/token-balances/get-erc20-token-balances

get /v1/account/tokens
Retrieve all token balances for all ERC20 tokens for a specified address.

By default, it will return all token balances for all ERC20 tokens that the address has ever received.
You can specify a contract address to check the balance of a non-standard contract.



# Get native token balances
Source: https://docs.chainbase.com/api-reference/web3-api/balance/token-balances/get-native-token-balances

get /v1/account/balance
Returns the balance for a specified address.



# Get block by number
Source: https://docs.chainbase.com/api-reference/web3-api/basic/block/get-block-by-number

get /v1/block/detail
Get the detail of a block by the given block number.



# Get latest block number
Source: https://docs.chainbase.com/api-reference/web3-api/basic/block/get-latest-block-number

get /v1/block/number/latest
Get the latest block height of blockchain network.



# Contract call
Source: https://docs.chainbase.com/api-reference/web3-api/basic/contract/contract-call

post /v1/contract/call
Calls a specific function for the specified contract.



# Address labels
Source: https://docs.chainbase.com/api-reference/web3-api/basic/labels/get-address-labels

get /v1/address/labels
get labels by address



# Get transaction
Source: https://docs.chainbase.com/api-reference/web3-api/basic/transaction/get-transaction

get /v1/tx/detail
Get the detail of a transaction given the transaction hash.

Provide the param "hash" or ("block_number" and "tx_index"). If both params are provided,
"hash" will be used.



# Get transactions by account
Source: https://docs.chainbase.com/api-reference/web3-api/basic/transaction/get-transactions-by-account

get /v1/account/txs
Returns the transactions from the address.



# Get ENS domains
Source: https://docs.chainbase.com/api-reference/web3-api/domain/ens-domain-endpoints/get-ens-domains

get /v1/account/ens
Gets a list of ENS domains held by a given address.



# Resolve ENS domain
Source: https://docs.chainbase.com/api-reference/web3-api/domain/ens-domain-endpoints/resolve-ens-domain

get /v1/ens/records
Resolves a ETH address given an ENS Domain.



# Reverse resolve ENS domain
Source: https://docs.chainbase.com/api-reference/web3-api/domain/ens-domain-endpoints/reverse-resolve-ens-domain

get /v1/ens/reverse
Reverse resolves a given ETH address to its ENS domain.



# Get NFT collection items
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-collections/get-nft-collection-items

get /v1/nft/collection/items
Query NFT collection items metadata.



# Get NFT collection metadata
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-collections/get-nft-collection-metadata

get /v1/nft/collection
Query NFT collection metadata.



# Get NFT metadata
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-metadata/get-nft-metadata

get /v1/nft/metadata
Get the metadata associated with the specified NFT.



# Get NFT rarity
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-metadata/get-nft-rarity

get /v1/nft/rarity



# Get NFT owner by token
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-ownership/get-nft-owner-by-token

get /v1/nft/owner
Get the current owner for a specified NFT token.



# Get NFT owner history by token
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-ownership/get-nft-owner-history-by-token

get /v1/nft/owner/history
Get the list of historical owner addresses for a specified NFT token.



# Get NFT owners by collection
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection

get /v1/nft/owners
Get all owners for a specified NFT collection.



# Get NFT transfers by collection
Source: https://docs.chainbase.com/api-reference/web3-api/nft/nft-transfers/get-nft-transfers-by-collection

get /v1/nft/transfers
Get the historical transfer transactions for a specified contract address.



# Get token price
Source: https://docs.chainbase.com/api-reference/web3-api/token/market-data/get-token-price

get /v1/token/price
Get the price of the specified token.



# Get token price history
Source: https://docs.chainbase.com/api-reference/web3-api/token/market-data/get-token-price-history

get /v1/token/price/history
Get the historical price of the specified token.



# Get token holders
Source: https://docs.chainbase.com/api-reference/web3-api/token/token-holders/get-token-holders

get /v1/token/holders
Get the list of holders of the specified contract.



# Get top token holders
Source: https://docs.chainbase.com/api-reference/web3-api/token/token-holders/get-top-token-holders

get /v1/token/top-holders
Get the list of top holders of the specified contract.



# Get token metadata
Source: https://docs.chainbase.com/api-reference/web3-api/token/token-metadata/get-token-metadata

get /v1/token/metadata
Get the metadata of a specified token.



# Get token transfers by contract
Source: https://docs.chainbase.com/api-reference/web3-api/token/token-transfers/get-token-transfers-by-contract

get /v1/token/transfers
Retrieves historical token transfer transactions for any ERC20 contract.



# Abstracted
Source: https://docs.chainbase.com/catalog/Arbitrum/Abstracted



## 1.arbitrum.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Arbitrum/Overview



Arbitrum is a Layer 2 scaling solution for Ethereum, designed to improve the performance and reduce the costs associated with decentralized applications (DApps) on the Ethereum network. Launched by Offchain Labs, Arbitrum enhances Ethereum’s scalability while maintaining its security and decentralization. By using rollup technology, Arbitrum enables faster and cheaper transactions, making it an attractive platform for developers and users alike.

### The Major Features of the Arbitrum Blockchain

1. **Scalability**: Arbitrum significantly increases the scalability of Ethereum by aggregating multiple transactions into a single batch, which is then processed off-chain before being committed to the Ethereum main chain. This rollup technique reduces the load on the Ethereum network, allowing for thousands of transactions per second while maintaining low latency.

2. **Low Fees**: By processing transactions off-chain and only recording the final state on the Ethereum main chain, Arbitrum drastically reduces transaction fees. This cost efficiency makes it more affordable for users and developers to interact with decentralized applications, fostering greater adoption and usage.

3. **EVM Compatibility**: Arbitrum is fully compatible with the Ethereum Virtual Machine (EVM), enabling developers to deploy their existing Ethereum-based smart contracts and DApps on Arbitrum with minimal modifications. This compatibility ensures a seamless transition for developers and allows them to leverage Ethereum’s extensive ecosystem of tools and libraries.


# Raw
Source: https://docs.chainbase.com/catalog/Arbitrum/Raw



## 1.arbitrum.blocks

### Table Description

The arbitrum.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The arbitrum.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1.arbitrum.contracts

### Table Description

The arbitrum.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The arbitrum.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1.arbitrum.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1.arbitrum.trace\_calls

### Table Description

The arbitrum.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The arbitrum.trace\_calls table is a powerful tool for developers, auditors, and researchers working with arbitrum. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1.arbitrum.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1.arbitrum.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Avalanche/Abstracted



## 1.arbitrum.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/arbitrum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/arbitrum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Avalanche/Overview



Avalanche is a decentralized platform designed to support the creation and deployment of highly scalable and customizable blockchain networks and decentralized applications (DApps). Launched in 2020 by Ava Labs, Avalanche aims to provide high throughput, low latency, and low transaction fees, addressing some of the key limitations faced by earlier blockchain networks.

### The Major Features of the Avalanche Blockchain

1. **High Throughput and Low Latency**: Avalanche is designed to handle thousands of transactions per second with sub-second finality. This high throughput and low latency make it suitable for a wide range of applications, from financial services to gaming and beyond. Avalanche's consensus protocol, Avalanche Consensus, is a novel approach that ensures quick and secure agreement among nodes.

2. **Customizable Blockchains**: Avalanche allows developers to create custom blockchain networks, known as subnets, tailored to specific applications and use cases. These subnets can have their own rulesets, virtual machines, and economic models, providing flexibility and customization that cater to the needs of different projects. This modularity enables the creation of highly specialized blockchain networks.

3. **Interoperability**: Avalanche is designed to be highly interoperable, allowing assets and data to move seamlessly between different subnets and external blockchain networks. The Avalanche-X framework provides tools and protocols to facilitate cross-chain communication, ensuring that assets can be transferred securely and efficiently across various blockchain ecosystems.


# Raw
Source: https://docs.chainbase.com/catalog/Avalanche/Raw



## 1. avalanche.blocks

### Table Description

The avalanche.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The avalanche.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. avalanche.contracts

### Table Description

The avalanche.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The avalanche.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. avalanche.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. avalanche.trace\_calls

### Table Description

The avalanche.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The avalanche.trace\_calls table is a powerful tool for developers, auditors, and researchers working with avalanche. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. avalanche.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. avalanche.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/avalanche.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/avalanche.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/BSC/Abstracted



## 14. bsc.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/BSC/Overview



Polygon, formerly known as Matic Network, is a decentralized platform designed to improve the scalability and usability of Ethereum while retaining its core values of decentralization and security. Launched in 2017, Polygon offers a framework for building and connecting Ethereum-compatible blockchain networks, providing solutions for scalability issues through sidechains and Layer 2 solutions.

### The Major Features of the Ethereum Blockchain

1. **Smart Contracts**: Smart contracts on BSC are self-executing contracts with predefined rules and conditions, running on the blockchain. Once the conditions are met, the contract's execution is irreversible, ensuring transparency and trust. Smart contracts facilitate complex decentralized applications, such as decentralized finance (DeFi) platforms and non-fungible token (NFT) marketplaces. The automation and immutability of these contracts provide significant advantages in terms of security and efficiency.

2. **Decentralized Applications (DApps)**: BSC supports the development and deployment of decentralized applications, which operate on the blockchain without being controlled by a single entity. This decentralized nature enhances transparency and security, reducing the risk of single points of failure. Developers can utilize BSC's robust infrastructure and tools to create innovative decentralized solutions. The applications of DApps on BSC are diverse, spanning financial services, gaming, supply chain management, and identity verification, demonstrating the platform's versatility and potential for innovation.

3. **Cross-Chain Compatibility**: BSC offers cross-chain compatibility with Binance Chain, enabling seamless transfer of assets between the two chains. This interoperability allows users to benefit from the fast trading capabilities of Binance Chain while leveraging the powerful smart contract functionality of BSC. The dual-chain architecture provides flexibility and enhances the overall user experience.

4. **High Performance and Low Fees**: BSC is known for its high performance, with a block time of around 3 seconds, and significantly lower transaction fees compared to Ethereum. These features make BSC an attractive option for developers and users seeking cost-effective and efficient blockchain solutions.


# Raw
Source: https://docs.chainbase.com/catalog/BSC/Raw



## 1. bsc.blocks

### Table Description

The bsc.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The bsc.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. bsc.contracts

### Table Description

The bsc.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The bsc.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. bsc.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. bsc.trace\_calls

### Table Description

The bsc.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The bsc.trace\_calls table is a powerful tool for developers, auditors, and researchers working with bsc. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. bsc.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. bsc.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/bsc.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/bsc.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Base/Abstracted



## 1.base.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Base/Overview



Base is a Layer 2 scaling solution built on top of the Ethereum blockchain, designed to enhance scalability, reduce transaction costs, and provide a robust environment for decentralized applications (DApps). Developed to address the limitations of Ethereum's main chain, Base utilizes advanced rollup technology to offer fast, secure, and cost-effective transactions while maintaining the security and decentralization of the Ethereum network.

### The Major Features of the Arbitrum Blockchain

1. **Scalability**: Base significantly increases Ethereum's scalability by aggregating multiple transactions into a single batch processed off-chain, which is then committed to the Ethereum main chain. This rollup technique allows Base to handle thousands of transactions per second, reducing congestion and improving network performance.

2. **Low Fees**: By processing transactions off-chain and recording only the final state on the Ethereum main chain, Base substantially reduces transaction fees. This cost efficiency makes blockchain interactions more affordable for users and developers, encouraging broader adoption and usage of decentralized applications.

3. **EVM Compatibility**: Base is fully compatible with the Ethereum Virtual Machine (EVM), enabling developers to deploy their existing Ethereum-based smart contracts and DApps on Base with minimal modifications. This compatibility ensures a seamless transition for developers and allows them to leverage Ethereum’s extensive ecosystem of tools and libraries.


# Raw
Source: https://docs.chainbase.com/catalog/Base/Raw



## 1. base.blocks

### Table Description

The base.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The base.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. base.contracts

### Table Description

The base.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The base.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. base.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. base.trace\_calls

### Table Description

The base.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The base.trace\_calls table is a powerful tool for developers, auditors, and researchers working with base. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. base.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. base.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/base.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/base.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Bitcoin/Abstracted



## 1. brc20\_token\_activities

### Table Description

The brc20.token\_activities table logs activities and transactions involving bitcoin tokens. This data is vital for tracking the movement and usage of various Ethereum-based tokens within the blockchain ecosystem, enabling comprehensive analysis and reporting.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/brc20.token_activities" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/brc20.token_activities" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. brc20\_token\_balances

### Table Description

The brc20.token\_balances inscription is a metadata field that holds information regarding bitcoin token balances. This data is crucial for applications that need to track and verify the holdings of various Ethereum-based tokens within a Bitcoin transaction context. It enables cross-chain interoperability by embedding Ethereum token information directly into the Bitcoin blockchain.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/brc20.token_balances" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/brc20.token_balances" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. brc20\_token\_info

### Table Description

The pipe.token\_info table stores detailed information about bitcoin tokens. This data is essential for tracking and managing various Ethereum-based tokens within the blockchain ecosystem. The table provides comprehensive metadata about each token, facilitating transparency and interoperability in blockchain applications.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/pipe.token_info" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/pipe.token_info" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. pipe\_token\_activities

### Table Description

The pipe.token\_activities table logs activities and transactions involving bitcoin tokens. This data is vital for tracking the movement and usage of various Ethereum-based tokens within the blockchain ecosystem, enabling comprehensive analysis and reporting.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/pipe.token_activities" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/pipe.token_activities" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. pipe\_token\_balances

### Table Description

The pipe.token\_balances inscription is a metadata field that holds information regarding bitcoin token balances. This data is crucial for applications that need to track and verify the holdings of various Ethereum-based tokens within a Bitcoin transaction context. It enables cross-chain interoperability by embedding Ethereum token information directly into the Bitcoin blockchain.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/pipe.token_balances" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/pipe.token_balances" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. pipe\_token\_info

### Table Description

The brc20.token\_info table stores detailed information about bitcoin tokens. This data is essential for tracking and managing various Ethereum-based tokens within the blockchain ecosystem. The table provides comprehensive metadata about each token, facilitating transparency and interoperability in blockchain applications.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/brc20.token_info" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/brc20.token_info" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Blast/Overview



Blast is a decentralized blockchain platform designed to offer high scalability, security, and low transaction costs, making it an ideal environment for developing and deploying decentralized applications (DApps). Leveraging advanced consensus mechanisms and innovative architecture, Blast aims to overcome the limitations of traditional blockchain networks while providing a seamless and efficient user experience.

### The Major Features of the Blast Blockchain

1. **High Scalability**: Blast is built to handle a large volume of transactions with high throughput, enabling it to process thousands of transactions per second. This scalability ensures that the network can support a growing number of users and applications without experiencing congestion or delays.

2. **Low Fees**: One of Blast's key advantages is its low transaction fees. By optimizing its consensus protocol and network architecture, Blast minimizes the cost of transactions, making it more accessible for users and developers. This cost efficiency encourages broader adoption and usage of decentralized applications on the Blast network.

3. **Interoperability**: Blast supports interoperability with other blockchain networks, allowing for seamless asset transfers and data sharing across different chains. This cross-chain compatibility enhances the functionality of the Blast ecosystem, providing users with a more integrated and versatile blockchain experience.


# Raw
Source: https://docs.chainbase.com/catalog/Blast/Raw



## 1. blast.blocks

### Table Description

The blast.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The blast.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/blast.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/blast.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. blast.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/blast.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/blast.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. blast.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/blast.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/blast.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Ethereum/Abstracted



## 1.ethereum.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2.ethereum.onchain\_trades

### Table Description

The onchain\_trades table records all transfer events on Ethereum, including both ERC-20 token transfers and native ETH transfers. This dataset enables users to track on-chain transactions in real time and is particularly useful for monitoring large transactions and analyzing token movements.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.onchain_trades" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.onchain_trades" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Ethereum/Overview



Ethereum blockchain is a decentralized platform capable of executing smart contracts and decentralized applications (DApps). It was introduced by Vitalik Buterin in 2015 and is more general and flexible compared to Bitcoin's blockchain. The core of Ethereum is its virtual machine, the Ethereum Virtual Machine (EVM), which can execute Turing-complete scripts, allowing developers to create and deploy smart contracts.

### The Major Features of the Ethereum Blockchain

1. **Smart Contracts**: Smart contracts are self-executing contracts with predefined rules and conditions, running on the Ethereum blockchain. Once the conditions are met, the contract's execution is irreversible, ensuring transparency and trust. Smart contracts enable complex decentralized applications, such as decentralized finance (DeFi) platforms and non-fungible token (NFT) marketplaces. The automation and immutability of these contracts are core advantages of blockchain applications.

2. **Decentralized Applications (DApps)**: Ethereum supports the development and deployment of decentralized applications, which run on the blockchain without being controlled by a single entity. This makes applications more transparent and secure, while also reducing the risk of single points of failure due to centralized control. Developers can leverage Ethereum's tools and frameworks to create innovative decentralized solutions. The widespread application of DApps spans various sectors, including financial services, supply chain management, and identity verification, showcasing the versatility and innovative potential of the Ethereum platform.


# Raw
Source: https://docs.chainbase.com/catalog/Ethereum/Raw



## 1. ethereum.blobs

### Table Description

The most important features of EIP-4844, a new type of transaction, solves the scalability problem that we're all familiar with when it comes to ethereum.
![docs-blobs](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/catalog/docs-blobs.png)
Blobs are binary large objects that store unstructured data in databases. In the context of blockchain data, blobs can be used to store various types of information, such as images, documents, or other binary data related to blockchain transactions, smart contracts, or other blockchain-related entities. Blobs are typically stored in databases as binary data and can be retrieved and processed as needed. For example, blobs can be used to store images of NFTs, documents related to smart contracts, or other large data files that are associated with blockchain entities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. ethereum.blocks

### Table Description

The Ethereum.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

<div>
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/catalog/blocks.png" width="300" height="100" />
</div>

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The Ethereum.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. ethereum.contracts

### Table Description

The Ethereum.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The Ethereum.contracts table includes several key components:

<div>
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/catalog/contracts.png" width="500" height="100" />
</div>

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. ethereum.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. ethereum.trace\_calls

### Table Description

The Ethereum.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The Ethereum.trace\_calls table is a powerful tool for developers, auditors, and researchers working with Ethereum. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. ethereum.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 7. ethereum.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 8. ethereum.withdrawals

### Table Description

This table specifically documents withdrawal transactions from the network, focusing on the amount withdrawn, the source address, and the destination address. It's crucial for analyzing the flow of value out of Ethereum, such as Ether or token withdrawals to external wallets or exchanges. For example, when a user withdraws Ether from a DeFi platform to their personal wallet, the transaction would be recorded here, including details like the withdrawal amount and the receiving wallet address, offering insights into user behavior and liquidity movements.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.withdrawals" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.withdrawals" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Fantom/Overview



Fantom is a decentralized, high-performance blockchain platform designed to overcome the limitations of previous generations of blockchain networks. Launched in 2019 by the Fantom Foundation, Fantom aims to provide a scalable, secure, and efficient environment for decentralized applications (DApps) and enterprise use cases.

### The Major Features of the Fantom Blockchain

1. **High Performance**: Fantom boasts high throughput and fast transaction finality, processing thousands of transactions per second with confirmation times of around 1 second. This performance is enabled by its unique consensus mechanism, Lachesis, a leaderless, asynchronous Byzantine Fault Tolerant (aBFT) protocol that ensures fast and secure consensus without compromising decentralization.

2. **Scalability**: Fantom is designed to be highly scalable, capable of supporting a large number of transactions and users without network congestion. Its architecture allows for the creation of multiple blockchains, each with its own specific use case and ruleset, which can interact with each other seamlessly. This modularity provides a scalable environment for diverse applications.

3. **Interoperability**: Fantom supports interoperability with other blockchain networks, enabling seamless asset and data transfer between Fantom and external blockchains. This is facilitated by Fantom’s cross-chain bridges and standardized communication protocols, ensuring efficient and secure interactions between different blockchain ecosystems.

### Data catalog

<CardGroup cols={3}>
  <Card title="Raw" icon="binary" href="./Raw">
    Fantom Raw, unprocessed data on the Fantom chain, including blocks, transactions, and logs.
  </Card>
</CardGroup>


# Raw
Source: https://docs.chainbase.com/catalog/Fantom/Raw



## 1. fantom.blocks

### Table Description

The fantom.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The fantom.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. fantom.contracts

### Table Description

The fantom.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The fantom.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. fantom.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. fantom.trace\_calls

### Table Description

The fantom.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The fantom.trace\_calls table is a powerful tool for developers, auditors, and researchers working with fantom. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. fantom.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. fantom.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/fantom.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/fantom.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Labels/Abstracted



## 1.labels.addresses

### Table Description

Labels datasets attaches rich address and entity metadata to every address you query. No more blind spots—just clean, structured, and instantly usable identity data for your dApps, dashboards, and analytics tools.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/labels.addresses" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/labels.addresses" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Labels/Overview



Labels datasets attaches rich address and entity metadata to every address you query. No more blind spots—just clean, structured, and instantly usable identity data for your dApps, dashboards, and analytics tools.

### The Major Features of the Labels

1. **Decode counterparties on the fly**: Enrich every transaction with who’s behind the address.

2. **Avoid costly mistakes**: Labels help users avoid sending funds to shady or incorrect addresses.

3. **Faster builds**:  Whether you're creating explorers, dashboards, or DeFi monitors, this saves hours of manual mapping.

4. **Plug-and-play**:  Query once, get labeled data instantly—no need to build your own tagging system.

## Supported Chains

<table>
  <thead>
    <tr>
      <th style={{ width: "150px" }}>Chain</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>Blast</td>
    </tr>

    <tr>
      <td>Fantom</td>
    </tr>

    <tr>
      <td>Avalanche</td>
    </tr>

    <tr>
      <td>Flare</td>
    </tr>

    <tr>
      <td>Bnb</td>
    </tr>

    <tr>
      <td>Base</td>
    </tr>

    <tr>
      <td>Bsc</td>
    </tr>

    <tr>
      <td>Mantle</td>
    </tr>

    <tr>
      <td>Linea</td>
    </tr>

    <tr>
      <td>Solana</td>
    </tr>

    <tr>
      <td>Arbitrum</td>
    </tr>

    <tr>
      <td>Optimism</td>
    </tr>

    <tr>
      <td>Tron</td>
    </tr>

    <tr>
      <td>Bitcoin</td>
    </tr>

    <tr>
      <td>Polygon</td>
    </tr>

    <tr>
      <td>Gnosis</td>
    </tr>
  </tbody>
</table>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Merlin/Overview



Merlin is a cutting-edge blockchain platform designed to provide high scalability, security, and efficiency, making it an ideal environment for developing and deploying decentralized applications (DApps). Leveraging advanced consensus mechanisms and innovative architecture, Merlin aims to overcome the limitations of traditional blockchain networks while providing a seamless and efficient user experience.

### The Major Features of the Blast Blockchain

1. **High Scalability**: Merlin is built to handle a large volume of transactions with high throughput, enabling it to process thousands of transactions per second. This scalability ensures that the network can support a growing number of users and applications without experiencing congestion or delays.

2. **Low Fees**: One of Merlin’s key advantages is its low transaction fees. By optimizing its consensus protocol and network architecture, Merlin minimizes the cost of transactions, making it more accessible for users and developers. This cost efficiency encourages broader adoption and usage of decentralized applications on the Merlin network.

3. **Security**: Merlin employs robust security measures to ensure the integrity and safety of the network. Utilizing advanced cryptographic techniques and a secure consensus mechanism, Merlin provides strong protection against attacks and operational faults, maintaining a reliable and secure environment for DApps and transactions.

Interoperability: Merlin supports interoperability with other blockchain networks, allowing for seamless asset transfers and data sharing across different chains. This cross-chain compatibility enhances the functionality of the Merlin ecosystem, providing users with a more integrated and versatile blockchain experience.

### Data catalog

<CardGroup cols={3}>
  <Card title="Raw" icon="binary" href="./Raw">
    Merlin Raw, unprocessed data on the Merlin chain, including blocks, transactions, and logs.
  </Card>
</CardGroup>


# Raw
Source: https://docs.chainbase.com/catalog/Merlin/Raw



## 1. merlin.blocks

### Table Description

The merlin.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The merlin.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/merlin.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/merlin.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. merlin.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/merlin.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/merlin.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. merlin.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/merlin.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/merlin.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Optimism/Abstracted



## 1.optimism.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Optimism/Overview



Optimism is a Layer 2 scaling solution for Ethereum, designed to enhance the scalability and reduce the transaction costs of decentralized applications (DApps) on the Ethereum network. Developed by the Optimism Foundation, Optimism leverages optimistic rollup technology to achieve faster and cheaper transactions while maintaining the security and decentralization of the Ethereum main chain.

### The Major Features of the Optimism Blockchain

1. **Scalability**: Optimism significantly improves the scalability of Ethereum by using optimistic rollups, which aggregate multiple transactions into a single batch processed off-chain. This technique allows Optimism to handle thousands of transactions per second, reducing congestion and enhancing the overall performance of the network.

2. **Low Fees**: By processing transactions off-chain and only recording the final state on the Ethereum main chain, Optimism dramatically reduces transaction fees. This cost efficiency makes it more accessible for users and developers to interact with decentralized applications, promoting greater adoption and usage.

3. **EVM Compatibility**: Optimism is fully compatible with the Ethereum Virtual Machine (EVM), enabling developers to deploy their existing Ethereum-based smart contracts and DApps on Optimism with minimal modifications. This compatibility ensures a seamless transition for developers and allows them to leverage Ethereum’s extensive ecosystem of tools and libraries.


# Raw
Source: https://docs.chainbase.com/catalog/Optimism/Raw



## 1. optimism.blocks

### Table Description

The optimism.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The optimism.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. optimism.contracts

### Table Description

The optimism.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The optimism.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. optimism.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. optimism.trace\_calls

### Table Description

The optimism.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The optimism.trace\_calls table is a powerful tool for developers, auditors, and researchers working with optimism. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. optimism.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 1. optimism.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/optimism.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/optimism.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# APEX Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/APEX_Testnet



\-- Decentralized derivatives protocol

ApeX is a cutting-edge decentralized derivatives protocol designed to empower users with the ability to trade perpetual swaps for various token pairs. By leveraging elastic automated market makers (eAMMs), ApeX provides a unique and flexible trading environment that dynamically adjusts liquidity and pricing based on market conditions. This innovative approach allows for the creation of perpetual swap markets that can efficiently respond to fluctuations in trading volumes and liquidity demands, ensuring a more balanced and robust trading experience for users.

ApeX’s protocol architecture supports a wide range of token pairs, allowing users to access diverse market opportunities without the typical constraints of centralized exchanges. The protocol’s focus on decentralization and automation ensures a seamless and permissionless trading experience, where anyone can participate and benefit from the evolving crypto derivatives market.

### The MetaData of the APEX Testnet Blockchain

**Twitter Link**: [https://x.com/OfficialApeXdex](https://x.com/OfficialApeXdex)

**Tags**: DeFi, Derivatives, Perp

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# AgentLayer Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/AgentLayer_Testnet



\-- Decentralized AI Agent Public Chain

AgentLayer is a decentralized AI Agent public chain, bringing together AI and human collaboration. AgentLayer utilizes the OP Stack and EigenDA to create AgentChain, a public blockchain that enhances coordination and collaboration among Agents powered by the AgentLink protocol.

### The MetaData of the AgentLayer Testnet Blockchain

**Twitter Link**: [https://x.com/Agent\_Layer](https://x.com/Agent_Layer)

**Tags**: Infra, Layer2, AI Agents, AI

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Ancient8
Source: https://docs.chainbase.com/catalog/OtherEvm/Ancient8



\-- Infrastructure for GameFi

Ancient8 is the infrastructure for GameFi, with a focus on software and community. It is building GameFi Identity and Launchpad products to serve as the marketing distribution channel for GameFi and Metaverse projects, in order to onboard millions of users. Moreover, Ancient8 manages Vietnam's largest blockchain gaming guild, and enables everyone to construct the Metaverse through blockchain software products, guild scholarships, blockchain education, institutional-grade research, and community engagement. Its vision is to democratize social and financial access in the Metaverse.

### The MetaData of the Ancient8 Blockchain

**Twitter Link**: [https://x.com/Ancient8\_gg](https://x.com/Ancient8_gg)

**Blog URL**: [https://blog.ancient8.gg/](https://blog.ancient8.gg/)

**Tags**: Gaming, Games Guild

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Atleta Olympia
Source: https://docs.chainbase.com/catalog/OtherEvm/Atleta_Olympia



\-- EVM-native modular execution layer

Atleta Network is an EVM-native modular execution layer for wide sports applications adoption, with Atleta universal circuit and friendly interface.

### The MetaData of the Atleta Olympia Blockchain

**Twitter Link**: [https://x.com/Atleta\_Network](https://x.com/Atleta_Network)

**Tags**: Infra, Layer1, Modular

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Automata Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Automata_Testnet



\-- DAO research and -deployment company

Automata Labs is a DAO research and deployment company. Their goal is to realize on-chain DAOs for cryptocurrencies and Web3.

### The MetaData of the Automata Testnet Blockchain

**Twitter Link**: [https://x.com/AutomataFinance](https://x.com/AutomataFinance)

**Tags**: Software Development

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# B2 Hub Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/B2_Hub_Mainnet



\-- Defi solution for Bitcoin

BackToBitcoin (B2B) is a Defi solution for Bitcoin, built on the BTCB token with Binance proof of reserve. It enables enthusiasts of decentralized finance (DeFi) to participate in Bitcoin (BTC) exposure while also benefiting from direct on-chain yields. It is developing a specialized middleware for Bitcoin within the Ethereum Virtual Machine (EVM) mesh system.

### The MetaData of the B2 Hub Mainnet Blockchain

**Twitter Link**: [https://x.com/BTCB2B](https://x.com/BTCB2B)

**Tags**: DeFi

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# B2 Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/B2_Testnet



\-- Defi solution for Bitcoin

BackToBitcoin (B2B) is a Defi solution for Bitcoin, built on the BTCB token with Binance proof of reserve. It enables enthusiasts of decentralized finance (DeFi) to participate in Bitcoin (BTC) exposure while also benefiting from direct on-chain yields. It is developing a specialized middleware for Bitcoin within the Ethereum Virtual Machine (EVM) mesh system.

### The MetaData of the B2 Testnet Blockchain

**Twitter Link**: [https://x.com/BTCB2B](https://x.com/BTCB2B)

**Tags**: DeFi

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# BEVM Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/BEVM_Mainnet



\-- EVM-compatible Bitcoin L2

BEVM is a decentralized EVM-compatible Bitcoin L2 that uses BTC as Gas.  It allows all DApps which can run in the Ethereum ecosystem to operate on Bitcoin L2.

### The MetaData of the BEVM Mainnet Blockchain

**Twitter Link**: [https://x.com/BTClayer2](https://x.com/BTClayer2)

**Tags**: Infra, Layer2, Bitcoin Ecosystem

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# BEVM Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/BEVM_Testnet



\-- EVM-compatible Bitcoin L2

BEVM is a decentralized EVM-compatible Bitcoin L2 that uses BTC as Gas.  It allows all DApps which can run in the Ethereum ecosystem to operate on Bitcoin L2.

### The MetaData of the BEVM Testnet Blockchain

**Twitter Link**: [https://x.com/BTClayer2](https://x.com/BTClayer2)

**Tags**: Infra, Layer2, Bitcoin Ecosystem

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# BNB Smart Chain Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/BNB_Smart_Chain_Testnet



\-- Layer1 blockchain

In early 2019, Binance launched Binance Chain. By 2020, the community utilized source code from the Ethereum network and launched a modified EVM-compatible blockchain called Binance Smart Chain. In February 2022, both the Binance Chain (rebranded as BNB Beacon Chain) and the Binance Smart Chain (rebranded as BNB Smart Chain) evolved into a unified, modular system referred to as BNB Chain. This dedicated layer1 blockchain is dedicated to building the infrastructure powering the world’s parallel virtual ecosystem. When the two blockchains merged, the Beacon Chain became the dedicated layer used for Governance (staking & voting), and the BNB Smart Chain became the dedicated layer for EVM consensus and execution.

### The MetaData of the BNB Smart Chain Testnet Blockchain

**Twitter Link**: [https://x.com/BNBChain](https://x.com/BNBChain)

**Blog URL**: [https://www.bnbchain.org/en/blog/](https://www.bnbchain.org/en/blog/)

**Documentation**: [https://docs.bnbchain.org/](https://docs.bnbchain.org/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Bahamut
Source: https://docs.chainbase.com/catalog/OtherEvm/Bahamut



\-- EVM-based blockchain

Bahamut is an EVM-based blockchain that uses PoSA as its consensus mechanism. Bahamut aims to provide a fast, scalable, and secure blockchain network that can support a range of decentralized applications and use cases.

### The MetaData of the Bahamut Blockchain

**Twitter Link**: [https://x.com/bahamut\_chain](https://x.com/bahamut_chain)

**LinkedIn**: [https://www.linkedin.com/company/bahamut-blockchain/](https://www.linkedin.com/company/bahamut-blockchain/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Beam
Source: https://docs.chainbase.com/catalog/OtherEvm/Beam



\-- Decentralized Exchange

Beamswap is a decentralized exchange (DEX) with an automated market maker (AMM), providing liquidity and peer-to-peer transactions. It supports an array of services and features, enabling users to swap crypto assets, both fungible and non-fungible, earn passive income from staking and yield farming, and even launch their own crypto projects on Moonbeam.

### The MetaData of the Beam Blockchain

**Twitter Link**: [https://x.com/Beamswapio](https://x.com/Beamswapio)

**Tags**: DeFi, DEX

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Berachain Artio
Source: https://docs.chainbase.com/catalog/OtherEvm/Berachain_Artio



\-- EVM-equivalent L1

Berachain is a high-performance EVM-compatible blockchain built on Proof-of-Liquidity consensus. Proof-of-Liquidity is a novel consensus mechanism that aims to align network incentives, creating strong synergy between Berachain validators and the ecosystem of projects. Berachain's technology is built on Polaris, a high-performance blockchain framework for building EVM-compatible chains on-top of the CometBFT consensus engine.

### The MetaData of the Berachain Artio Blockchain

**Twitter Link**: [https://x.com/berachain](https://x.com/berachain)

**Documentation**: [https://docs.berachain.com/](https://docs.berachain.com/)

**LinkedIn**: [https://www.linkedin.com/company/berachain/](https://www.linkedin.com/company/berachain/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Berachain bArtio
Source: https://docs.chainbase.com/catalog/OtherEvm/Berachain_bArtio



\-- EVM-equivalent L1

Berachain is a high-performance EVM-compatible blockchain built on Proof-of-Liquidity consensus. Proof-of-Liquidity is a novel consensus mechanism that aims to align network incentives, creating strong synergy between Berachain validators and the ecosystem of projects. Berachain's technology is built on Polaris, a high-performance blockchain framework for building EVM-compatible chains on-top of the CometBFT consensus engine.

### The MetaData of the Berachain bArtio Blockchain

**Twitter Link**: [https://x.com/berachain](https://x.com/berachain)

**Documentation**: [https://docs.berachain.com/](https://docs.berachain.com/)

**LinkedIn**: [https://www.linkedin.com/company/berachain/](https://www.linkedin.com/company/berachain/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Bifrost Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Bifrost_Mainnet



\-- Decentralized derivatives protocol

Bifrost is a decentralized derivatives protocol that provides cross-chain liquidity for staked assets. It leverages Cross-Consensus Messaging (XCM) to offer cross-chain liquid staking services for multiple chains. The mission of Bifrost is to provide standardized cross-chain interest-bearing derivatives for Polkadot relay chains, parachains, and heterogeneous chains connected to Polkadot.

### The MetaData of the Bifrost Mainnet Blockchain

**Twitter Link**: [https://x.com/Bifrost](https://x.com/Bifrost)

**Tags**: DeFi, LSD, Polkadot Parachain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Bifrost Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Bifrost_Testnet



\-- Decentralized derivatives protocol

Bifrost is a decentralized derivatives protocol that provides cross-chain liquidity for staked assets. It leverages Cross-Consensus Messaging (XCM) to offer cross-chain liquid staking services for multiple chains. The mission of Bifrost is to provide standardized cross-chain interest-bearing derivatives for Polkadot relay chains, parachains, and heterogeneous chains connected to Polkadot.

### The MetaData of the Bifrost Testnet Blockchain

**Twitter Link**: [https://x.com/Bifrost](https://x.com/Bifrost)

**Tags**: DeFi, LSD, Polkadot Parachain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Bitlayer Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Bitlayer_Mainnet



\-- A Bitcoin security-equivalent Layer 2 based on the BitVM paradigm

Bitlayer is a Layer 2 solution offering Bitcoin-equivalent security and Turing completeness. It's also the first built on BitVM. Bitlayer aims to bring secure scalability to the Bitcoin ecosystem, promoting asset diversity and spurring innovation for a faster, safer, and more flexible user experience.

### The MetaData of the Bitlayer Mainnet Blockchain

**Twitter Link**: [https://x.com/BitLayerLabs](https://x.com/BitLayerLabs)

**LinkedIn**: [https://www.linkedin.com/company/bitlayerlabs/](https://www.linkedin.com/company/bitlayerlabs/)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Bitlayer Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Bitlayer_Testnet



\-- A Bitcoin security-equivalent Layer 2 based on the BitVM paradigm

Bitlayer is a Layer 2 solution offering Bitcoin-equivalent security and Turing completeness. It's also the first built on BitVM. Bitlayer aims to bring secure scalability to the Bitcoin ecosystem, promoting asset diversity and spurring innovation for a faster, safer, and more flexible user experience.

### The MetaData of the Bitlayer Testnet Blockchain

**Twitter Link**: [https://x.com/BitLayerLabs](https://x.com/BitLayerLabs)

**LinkedIn**: [https://www.linkedin.com/company/bitlayerlabs/](https://www.linkedin.com/company/bitlayerlabs/)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# BlackFort Exchange Network
Source: https://docs.chainbase.com/catalog/OtherEvm/BlackFort_Exchange_Network



\-- Layer1 blockchain

BlackFort is a Layer1 blockchain that is EVM compliant, scalable, secure and efficient, with easy access to POSA and delegation. BXN is the native coin of the Blackfort Exchange,  It is used as the utility token for transactions on the Blackfort network, which includes the exchange itself as well as other services and products offered by the platform.

### The MetaData of the BlackFort Exchange Network Blockchain

**Twitter Link**: [https://x.com/BlackFortBXN](https://x.com/BlackFortBXN)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# BlackFort Exchange Network Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/BlackFort_Exchange_Network_Testnet



\-- Layer1 blockchain

BlackFort is a Layer1 blockchain that is EVM compliant, scalable, secure and efficient, with easy access to POSA and delegation. BXN is the native coin of the Blackfort Exchange,  It is used as the utility token for transactions on the Blackfort network, which includes the exchange itself as well as other services and products offered by the platform.

### The MetaData of the BlackFort Exchange Network Testnet Blockchain

**Twitter Link**: [https://x.com/BlackFortBXN](https://x.com/BlackFortBXN)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Blast Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Blast_Sepolia_Testnet



\-- Ethereum L2 with native yield

Blast is an EVM-compatible, optimistic rollup that raises the baseline yield for users and developers without changing the experience cryptonatives expect. Blast is an Ethereum L2 with native yield for ETH and stablecoins. On Blast, users balance compounds automatically, and earns Blast rewards on top.

### The MetaData of the Blast Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/blast](https://x.com/blast)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Celo Alfajores Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Celo_Alfajores_Testnet



\-- Mobile-first public chain

Celo is a mobile-first blockchain that makes decentralized financial (DeFi) tools and services accessible to anyone with a mobile phone. Its mission is to build a financial system that creates the conditions for prosperity for everyone. Celo enables native and non-native digital assets—both cryptographic and Central Bank Digital Currencies (CBDCs)—to circulate freely across devices, carriers, and countries, making money mobile, global, and more accessible than ever before.

### The MetaData of the Celo Alfajores Testnet Blockchain

**Twitter Link**: [https://x.com/Celo](https://x.com/Celo)

**Documentation**: [http://docs.celo.org/](http://docs.celo.org/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Chiliz Chain Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Chiliz_Chain_Mainnet



\-- Blockchain Fintech Provider for Sports and Entertainment

Chiliz is a blockchain fintech provider for sports and entertainment. They have developed the blockchain-based fan engagement and rewards platform Socios.com, which is built on the Chiliz blockchain infrastructure and uses CHZ as its exclusive on-platform currency.
Fans can purchase and trade branded Fan Tokens, as well as having the ability to participate, influence, and vote in club-focused surveys and polls. Chiliz aims to create a blockchain ecosystem built for sports and entertainment.

### The MetaData of the Chiliz Chain Mainnet Blockchain

**Twitter Link**: [https://x.com/Chiliz](https://x.com/Chiliz)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Crab Network
Source: https://docs.chainbase.com/catalog/OtherEvm/Crab_Network



\-- P2E idle game

Crabada is a Player-to-Environment idle game set in a world occupied by fierce hermit crabs called Crabada. Players can earn in-game currencies, CRA, CRAM, and TUS, through mining, looting, breeding their crabs, or staking tokens.

### The MetaData of the Crab Network Blockchain

**Twitter Link**: [https://x.com/playcrabada](https://x.com/playcrabada)

**Documentation**: [https://docs.crabada.com/](https://docs.crabada.com/)

**Tags**: Gaming

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Creditcoin Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Creditcoin_Testnet



\-- Web3 Credit Protocol

Creditcoin is a foundational L1 blockchain designed to match and record credit transactions, creating a public ledger of credit history and loan performance and paving the way for a new generation of interoperable cross-chain credit markets, and connecting capital from Web3 to real-world credit investment opportunities.

### The MetaData of the Creditcoin Testnet Blockchain

**Twitter Link**: [https://x.com/Creditcoin](https://x.com/Creditcoin)

**Tags**: DeFi, Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Crypto Emergency
Source: https://docs.chainbase.com/catalog/OtherEvm/Crypto_Emergency



\-- Cryptocurrency exchange

Founded in 2016, Crypto.com serves more than 50 million customers and is one of the world's fastest-growing global cryptocurrency platforms. Crypto.com is committed to accelerating the adoption of cryptocurrency through innovation and empowering the next generation of builders, creators, and entrepreneurs to create a fairer and more equitable digital ecosystem.

### The MetaData of the Crypto Emergency Blockchain

**Twitter Link**: [https://x.com/cryptocom](https://x.com/cryptocom)

**Blog URL**: [https://blog.crypto.com](https://blog.crypto.com)

**LinkedIn**: [https://hk.linkedin.com/company/cryptocom](https://hk.linkedin.com/company/cryptocom)

**Tags**: CeFi, CEX

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Cyber Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Cyber_Mainnet



\-- The L2 for Social

Cyber is a restaked Ethereum Layer 2 designed for social and optimized for mass adoption. It serves as the social layer for web3 applications and the gateway for the next wave of users to access web3 experiences, tools and financial liquidity across all Layer 2 ecosystems.

### The MetaData of the Cyber Mainnet Blockchain

**Twitter Link**: [https://x.com/BuildOnCyber](https://x.com/BuildOnCyber)

**Documentation**: [https://docs.cyberconnect.me/](https://docs.cyberconnect.me/)

**Tags**: Social, Infra, Social Graph

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Cyber Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Cyber_Testnet



\-- The L2 for Social

Cyber is a restaked Ethereum Layer 2 designed for social and optimized for mass adoption. It serves as the social layer for web3 applications and the gateway for the next wave of users to access web3 experiences, tools and financial liquidity across all Layer 2 ecosystems.

### The MetaData of the Cyber Testnet Blockchain

**Twitter Link**: [https://x.com/BuildOnCyber](https://x.com/BuildOnCyber)

**Documentation**: [https://docs.cyberconnect.me/](https://docs.cyberconnect.me/)

**Tags**: Social, Infra, Social Graph

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# DOS Chain
Source: https://docs.chainbase.com/catalog/OtherEvm/DOS_Chain



\-- All-in-one NFT publishing platform

DOSI is an all-in-one NFT publishing platform, powered by LINE and LINE Blockchain. It is designed for everyone, and welcomes brands from all around the world to create an NFT storefront and interact with their fans globally.

### The MetaData of the DOS Chain Blockchain

**Twitter Link**: [https://x.com/DOSI\_official](https://x.com/DOSI_official)

**Tags**: NFT, NFT marketplace

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Darwinia Koi Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Darwinia_Koi_Testnet



\-- Cross-chain messaging infrastructure

Darwinia is a cross-chain messaging infrastructure that offers a reliable and programmable platform for decentralized applications. It provides developers with an SDK, allowing them to easily integrate cross-chain capabilities into their Dapps.

### The MetaData of the Darwinia Koi Testnet Blockchain

**Twitter Link**: [https://x.com/DarwiniaNetwork](https://x.com/DarwiniaNetwork)

**Documentation**: [https://docs.darwinia.network/](https://docs.darwinia.network/)

**Tags**: Cross-Chain Communication, Polkadot Parachain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Darwinia Network
Source: https://docs.chainbase.com/catalog/OtherEvm/Darwinia_Network



\-- Cross-chain messaging infrastructure

Darwinia is a cross-chain messaging infrastructure that offers a reliable and programmable platform for decentralized applications. It provides developers with an SDK, allowing them to easily integrate cross-chain capabilities into their Dapps.

### The MetaData of the Darwinia Network Blockchain

**Twitter Link**: [https://x.com/DarwiniaNetwork](https://x.com/DarwiniaNetwork)

**Documentation**: [https://docs.darwinia.network/](https://docs.darwinia.network/)

**Tags**: Cross-Chain Communication, Polkadot Parachain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Dodao
Source: https://docs.chainbase.com/catalog/OtherEvm/Dodao



\-- Web3 developers studio

DoDao is a studio consists of developers who all have experience working on academy websites and creating free DeFi content. Past partners include: Aave, Project Serum, ENS, Balancer, and Compound.

### The MetaData of the Dodao Blockchain

**Twitter Link**: [https://x.com/dodao\_io](https://x.com/dodao_io)

**Tags**: Software Development

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Ethereum Classic
Source: https://docs.chainbase.com/catalog/OtherEvm/Ethereum_Classic



\-- The first blockchain with smart contract functionality

Ethereum is the first decentralized, open-source blockchain with smart contract functionality. It was initially described in a white paper by Vitalik Buterin in late 2013 and launched in 2015. This network serves as the foundation for an ecosystem of interoperable, decentralized applications (dApps) powered by token economies and automated smart contracts. Assets and applications designed on Ethereum are built with self-executing smart contracts that eliminate the need for a central authority or intermediary.  The network is powered by its native cryptocurrency ether (ETH), which is used to pay transaction fees. Ethereum has the characteristics of being open-source, programmable, private, and censorship-resistant, forming the backbone of a decentralized internet.

### The MetaData of the Ethereum Classic Blockchain

**Twitter Link**: [https://x.com/ethereum](https://x.com/ethereum)

**Blog URL**: [https://blog.ethereum.org/](https://blog.ethereum.org/)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Fhenix Helium
Source: https://docs.chainbase.com/catalog/OtherEvm/Fhenix_Helium



\-- Blockchain powered by homomorphic encryption

Fhenix is the first confidential blockchain powered by fully homomorphic encryption. Through the usage of fhEVM, Fhenix enables Ethereum developers to seamlessly build encrypted smart contracts and perform encrypted computation of data, all while using Solidity and other familiar, easy-to-use tools.

### The MetaData of the Fhenix Helium Blockchain

**Twitter Link**: [https://x.com/FhenixIO](https://x.com/FhenixIO)

**Tags**: Infra, Layer2, Privacy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Form Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Form_Testnet



\-- The sovereign network for onchain creations

Forma is a purpose-built blockchain for fully onchain
creations built on Astria with Celestia underneat.

### The MetaData of the Form Testnet Blockchain

**Twitter Link**: [https://x.com/Formachain](https://x.com/Formachain)

**Tags**: Infra, Creator Economy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Forma
Source: https://docs.chainbase.com/catalog/OtherEvm/Forma



\-- The sovereign network for onchain creations

Forma is a purpose-built blockchain for fully onchain
creations built on Astria with Celestia underneat.

### The MetaData of the Forma Blockchain

**Twitter Link**: [https://x.com/Formachain](https://x.com/Formachain)

**Tags**: Infra, Creator Economy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Forma Sketchpad
Source: https://docs.chainbase.com/catalog/OtherEvm/Forma_Sketchpad



\-- The sovereign network for onchain creations

Forma is a purpose-built blockchain for fully onchain
creations built on Astria with Celestia underneat.

### The MetaData of the Forma Sketchpad Blockchain

**Twitter Link**: [https://x.com/Formachain](https://x.com/Formachain)

**Tags**: Infra, Creator Economy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Fuse Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Fuse_Mainnet



\-- Blockchain as a service platform

Fuse Charge is a Blockchain-as-a-Service platform that enables businesses and professional developers to easily integrate payments powered by the Fuse Network blockchain into their products via simple APIs.

### The MetaData of the Fuse Mainnet Blockchain

**Tags**: Technology Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Fuse Sparknet
Source: https://docs.chainbase.com/catalog/OtherEvm/Fuse_Sparknet



\-- Blockchain as a service platform

Fuse Charge is a Blockchain-as-a-Service platform that enables businesses and professional developers to easily integrate payments powered by the Fuse Network blockchain into their products via simple APIs.

### The MetaData of the Fuse Sparknet Blockchain

**Tags**: Technology Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# GEEK Verse Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/GEEK_Verse_Mainnet



\-- Venture & Incubation DAO

Founded in Q4 2021, Geekcartel is a DAO formed by geeks with shared values and visions. We focus on investing and incubating innovative Web3 projects that foster industry growth. Our DAO builders are whitehat hackers, tech experts, tech geeks, infosec academics, marketing specialists, lawyers, builders of various projects/crypto companies, and investors.

### The MetaData of the GEEK Verse Mainnet Blockchain

**Twitter Link**: [https://x.com/geek\_cartel](https://x.com/geek_cartel)

**Tags**: DAO, Investment DAO, Incubation DAO

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# GEEK Verse Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/GEEK_Verse_Testnet



\-- Venture & Incubation DAO

Founded in Q4 2021, Geekcartel is a DAO formed by geeks with shared values and visions. We focus on investing and incubating innovative Web3 projects that foster industry growth. Our DAO builders are whitehat hackers, tech experts, tech geeks, infosec academics, marketing specialists, lawyers, builders of various projects/crypto companies, and investors.

### The MetaData of the GEEK Verse Testnet Blockchain

**Twitter Link**: [https://x.com/geek\_cartel](https://x.com/geek_cartel)

**Tags**: DAO, Investment DAO, Incubation DAO

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# GUNZ Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/GUNZ_Testnet



\-- AAA game studio

Gunzilla Games is a game developer currently working on Off The Grid (OTG), a cyberpunk Battle Royale 2.0.

### The MetaData of the GUNZ Testnet Blockchain

**Twitter Link**: [https://x.com/GunzillaGames](https://x.com/GunzillaGames)

**Tags**: Gaming, Studio

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Gnosis
Source: https://docs.chainbase.com/catalog/OtherEvm/Gnosis



\-- Building decentralized infrastructure for the Ethereum ecosystem

Gnosis builds decentralized infrastructure for the Ethereum ecosystem. They have developed a range of products, including Gnosis Safe (multisig and programmable accounts), Gnosis Chain, Gnosis Protocol (CowSwap), Conditional Tokens (prediction markets), Gnosis Auction, and Zodiac (standard and tooling for composable DAOs).

### The MetaData of the Gnosis Blockchain

**Twitter Link**: [https://x.com/gnosisdao](https://x.com/gnosisdao)

**Blog URL**: [https://blog.gnosis.pm/](https://blog.gnosis.pm/)

**Tags**: Infra

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Gnosis Chiado Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Gnosis_Chiado_Testnet



\-- Building decentralized infrastructure for the Ethereum ecosystem

Gnosis builds decentralized infrastructure for the Ethereum ecosystem. They have developed a range of products, including Gnosis Safe (multisig and programmable accounts), Gnosis Chain, Gnosis Protocol (CowSwap), Conditional Tokens (prediction markets), Gnosis Auction, and Zodiac (standard and tooling for composable DAOs).

### The MetaData of the Gnosis Chiado Testnet Blockchain

**Twitter Link**: [https://x.com/gnosisdao](https://x.com/gnosisdao)

**Blog URL**: [https://blog.gnosis.pm/](https://blog.gnosis.pm/)

**Tags**: Infra

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Gobbl Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Gobbl_Testnet



\-- Decentralized food ecosystem

Gobbl is a modular framework for developers to rapidly build food focused applications. Gobbl is building a decentralized ecosystem of food dapps across delivery, social, gaming and loyaltytech.

### The MetaData of the Gobbl Testnet Blockchain

**Twitter Link**: [https://x.com/gmgobbl](https://x.com/gmgobbl)

**Documentation**: [https://onerare.gitbook.io/docs/](https://onerare.gitbook.io/docs/)

**Tags**: Infra, Layer2, Loyalty Platform

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Hemi Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/Hemi_Sepolia



\-- Modular Layer 2 network

Hemi Network is a modular Layer 2 network facilitating Ethereum smart contract functionality secured by the Bitcoin network. The chain introduces the Hemi Virtual Machine (hVM), which integrates a full Bitcoin node within the Ethereum Virtual Machine (EVM) — Ethereum’s core smart contract engine. HVM allows developers to create smart contracts that interact with Bitcoin’s state, unlocking Bitcoin-based DeFi applications including staking, lending markets, and democratized MEV marketplaces.

### The MetaData of the Hemi Sepolia Blockchain

**Twitter Link**: [https://x.com/hemi\_xyz](https://x.com/hemi_xyz)

**Tags**: Infra, Layer2, Modular

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Hybrid Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Hybrid_Testnet



\-- The on-chain intelligence Layer 1

Hybrid is an EVM-compatible Layer 1 blockchain designed to incorporate artificial intelligence (AI) directly into its infrastructure, facilitating the development of AI-enhanced decentralized applications (DApps). It combines the familiar environment of Ethereum's ecosystem with advanced AI capabilities through its unique features, aiming to improve the efficiency and functionality of blockchain applications.

### The MetaData of the Hybrid Testnet Blockchain

**Twitter Link**: [https://x.com/BuildOnHybrid](https://x.com/BuildOnHybrid)

**Tags**: Infra, Layer1, AI

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Immutable zkEVM
Source: https://docs.chainbase.com/catalog/OtherEvm/Immutable_zkEVM



\-- Building products that increase awareness and adoption of digital assets

Immutable Holdings is a collection of digital asset-oriented businesses operating in the emerging Web3 space. It is developing products and services to increase awareness and adoption of digital assets in an industry with potential for growth, such as NFT.com, CBDC.com, Immutable Advisory, and Immutable Asset Management.

### The MetaData of the Immutable zkEVM Blockchain

**Twitter Link**: [https://x.com/immutablehold?lang=en](https://x.com/immutablehold?lang=en)

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Immutable zkEVM Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Immutable_zkEVM_Testnet



\-- Building products that increase awareness and adoption of digital assets

Immutable Holdings is a collection of digital asset-oriented businesses operating in the emerging Web3 space. It is developing products and services to increase awareness and adoption of digital assets in an industry with potential for growth, such as NFT.com, CBDC.com, Immutable Advisory, and Immutable Asset Management.

### The MetaData of the Immutable zkEVM Testnet Blockchain

**Twitter Link**: [https://x.com/immutablehold?lang=en](https://x.com/immutablehold?lang=en)

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kakarot Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/Kakarot_Sepolia



\-- EVM-compatible ZK-Rollup

Kakarot is a zkEVM written in Cairo. It aims to allow users to leverage the scaling benefits of validity rollups while maintaining compatibility with the Ethereum ecosystem. Therefore, Kakarot can be used to run Ethereum smart contracts on Starknet.

### The MetaData of the Kakarot Sepolia Blockchain

**Twitter Link**: [https://x.com/KakarotZkEvm](https://x.com/KakarotZkEvm)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Karak Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/Karak_Sepolia



\-- Ethereum L2

Karak is the risk management infrastructure for digital assets that is a secure, low-cost, risk-aware Ethereum L2 built to secure the next billion users.

### The MetaData of the Karak Sepolia Blockchain

**Twitter Link**: [https://x.com/Karak\_Network](https://x.com/Karak_Network)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kingdom Chain
Source: https://docs.chainbase.com/catalog/OtherEvm/Kingdom_Chain



\-- NFT Card Combat Game

Kingdom Karnage is an animated combat NFT trading card game, playable on browser, Google Play, and Steam. Characters and equipment are not only virtual assets, but also NFTs, powered by Enjin. Players can trade the NFTs on the Enjin Jumpnet blockchain and, in the future, Enjin's Efinity.

### The MetaData of the Kingdom Chain Blockchain

**Twitter Link**: [https://x.com/Kingdom\_Karnage](https://x.com/Kingdom_Karnage)

**Tags**: Gaming, Card Games

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Klaytn Testnet Baobab
Source: https://docs.chainbase.com/catalog/OtherEvm/Klaytn_Testnet_Baobab



\-- Expanding the Klaytn gaming ecosystem

Klaytn Games is a project to support the growing P2E industry and expand the Klaytn gaming ecosystem. The most essential service to expand the ecosystem is the Launchpad, which releases new game projects through Initial Game Offering (IGO). Klaytn Games aims to create an ecosystem that creates close synergy between users and game developers by adding Airdrop, Game Aggregator, and NFT Pre-Sales functions in addition to the Launchpad.

### The MetaData of the Klaytn Testnet Baobab Blockchain

**Twitter Link**: [https://x.com/Klaytngames](https://x.com/Klaytngames)

**Documentation**: [https://docs.playone.games/](https://docs.playone.games/)

**Tags**: Launchpad

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kroma
Source: https://docs.chainbase.com/catalog/OtherEvm/Kroma



\-- Universal ZK Rollup based on the Optimism Bedrock

Kroma aims to develop an universal ZK Rollup based on the Optimism Bedrock architecture. Currently, Kroma operates as an Optimistic Rollup with ZK fault proofs, utilizing a zkEVM based on Scroll. The goal of Kroma is to eventually transition to a ZK Rollup once the generation of ZK proofs becomes more cost-efficient and faster. Kroma is deployed on the Sepolia testnet for further testing and optimization.

### The MetaData of the Kroma Blockchain

**Twitter Link**: [https://x.com/kroma\_network](https://x.com/kroma_network)

**Documentation**: [https://docs.kroma.network/introduction/overview](https://docs.kroma.network/introduction/overview)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kroma Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/Kroma_Sepolia



\-- Universal ZK Rollup based on the Optimism Bedrock

Kroma aims to develop an universal ZK Rollup based on the Optimism Bedrock architecture. Currently, Kroma operates as an Optimistic Rollup with ZK fault proofs, utilizing a zkEVM based on Scroll. The goal of Kroma is to eventually transition to a ZK Rollup once the generation of ZK proofs becomes more cost-efficient and faster. Kroma is deployed on the Sepolia testnet for further testing and optimization.

### The MetaData of the Kroma Sepolia Blockchain

**Twitter Link**: [https://x.com/kroma\_network](https://x.com/kroma_network)

**Documentation**: [https://docs.kroma.network/introduction/overview](https://docs.kroma.network/introduction/overview)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kyoto
Source: https://docs.chainbase.com/catalog/OtherEvm/Kyoto



\-- Blockchain voluntary carbon market

Kyoto aims to optimize and develop voluntary carbon markets through blockchain technology. The company's solutions are focused on digitizing the carbon supply chain, providing carbon letters of credit with high integrity more quickly and cost-effectively.

### The MetaData of the Kyoto Blockchain

**Twitter Link**: [https://x.com/KyotoFDN](https://x.com/KyotoFDN)

**Documentation**: [https://kyotofoundation.gitbook.io/kyoto-developer-documentation](https://kyotofoundation.gitbook.io/kyoto-developer-documentation)

**LinkedIn**: [https://www.linkedin.com/company/kyotoprotocol-io/](https://www.linkedin.com/company/kyotoprotocol-io/)

**Tags**: Environmental Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Kyoto Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Kyoto_Testnet



\-- Blockchain voluntary carbon market

Kyoto aims to optimize and develop voluntary carbon markets through blockchain technology. The company's solutions are focused on digitizing the carbon supply chain, providing carbon letters of credit with high integrity more quickly and cost-effectively.

### The MetaData of the Kyoto Testnet Blockchain

**Twitter Link**: [https://x.com/KyotoFDN](https://x.com/KyotoFDN)

**Documentation**: [https://kyotofoundation.gitbook.io/kyoto-developer-documentation](https://kyotofoundation.gitbook.io/kyoto-developer-documentation)

**LinkedIn**: [https://www.linkedin.com/company/kyotoprotocol-io/](https://www.linkedin.com/company/kyotoprotocol-io/)

**Tags**: Environmental Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# LUKSO Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/LUKSO_Mainnet



\-- Blockchain infrastructure

LUKSO is a blockchain infrastructure that provides standards and solutions for physical and digital consumer goods to promote transparency, circularity, and new forms of responsible production and consumption. It will introduce standards and tools to enable a new economy based on cultural currencies, digital certificates, and universal public profiles.

### The MetaData of the LUKSO Mainnet Blockchain

**Twitter Link**: [https://x.com/lukso\_io](https://x.com/lukso_io)

**Documentation**: [https://bit.ly/LUKSOWhitepaper](https://bit.ly/LUKSOWhitepaper)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# LUKSO Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/LUKSO_Testnet



\-- Blockchain infrastructure

LUKSO is a blockchain infrastructure that provides standards and solutions for physical and digital consumer goods to promote transparency, circularity, and new forms of responsible production and consumption. It will introduce standards and tools to enable a new economy based on cultural currencies, digital certificates, and universal public profiles.

### The MetaData of the LUKSO Testnet Blockchain

**Twitter Link**: [https://x.com/lukso\_io](https://x.com/lukso_io)

**Documentation**: [https://bit.ly/LUKSOWhitepaper](https://bit.ly/LUKSOWhitepaper)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Lambda Chain Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Lambda_Chain_Mainnet



\-- Decentralized storage network

Lambda is a public blockchain with decentralized data storage technology.

### The MetaData of the Lambda Chain Mainnet Blockchain

**Twitter Link**: [https://twitter.com/Lambdaim](https://twitter.com/Lambdaim)

**Documentation**: [https://www.lambda.im/doc/Lambda-Economic-White-Paper.pdf](https://www.lambda.im/doc/Lambda-Economic-White-Paper.pdf)

**Tags**: Infra, Layer1, Storage Network

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Lambda Chain Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Lambda_Chain_Testnet



\-- Decentralized storage network

Lambda is a public blockchain with decentralized data storage technology.

### The MetaData of the Lambda Chain Testnet Blockchain

**Twitter Link**: [https://twitter.com/Lambdaim](https://twitter.com/Lambdaim)

**Documentation**: [https://www.lambda.im/doc/Lambda-Economic-White-Paper.pdf](https://www.lambda.im/doc/Lambda-Economic-White-Paper.pdf)

**Tags**: Infra, Layer1, Storage Network

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# LayerEdge testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/LayerEdge_testnet



\-- Verification Layer on Bitcoin

LayerEdge is an innovative verification layer designed to bring enhanced data settlement and verification capabilities to PoS-based chains and rollups. At its core, LayerEdge serves as a platform for aggregating and verifying zk proofs, providing a seamless and efficient method for settling these proofs on the Bitcoin network. This unique architecture ensures that data from various sources, including data availability layers (DAs) and PoS-based chains, can be securely anchored to Bitcoin, leveraging its established security and immutability.

### The MetaData of the LayerEdge testnet Blockchain

**Twitter Link**: [https://x.com/layeredge](https://x.com/layeredge)

**Documentation**: [https://docs.layeredge.io/](https://docs.layeredge.io/)

**Tags**: Infra, DA

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Linea Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/Linea_Sepolia



\-- Layer 2 zk-rollup

Linea is a layer2 Zero Knowledge Ethereum Virtual Machine (zkEVM). It replicates the Ethereum environment as a rollup, allowing developers to build on it as they would on Ethereum mainnet. This provides users with the same experience and security guarantees of Ethereum, but with reduced transaction costs.

### The MetaData of the Linea Sepolia Blockchain

**Twitter Link**: [https://x.com/LineaBuild](https://x.com/LineaBuild)

**Documentation**: [https://docs.linea.build/](https://docs.linea.build/)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# MAXI Chain Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/MAXI_Chain_Testnet



\-- Web3.0 social impact protocol

Maxity is an AI integrated Web3.0 social impact protocol that solves charity transparency, NGO fundraising issues and existential risk from AGI through blockchain and AI technology, with a unique concept of Symbiotic Metaverse that brings together public welfare to contribute towards the United Nations' 17 Sustainable Development Goals with NFTs, MAX Forest, V\&R, SocialFi and Super Computating models.

### The MetaData of the MAXI Chain Testnet Blockchain

**Twitter Link**: [https://x.com/maxiprotocol](https://x.com/maxiprotocol)

**Tags**: Charity

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Mantle
Source: https://docs.chainbase.com/catalog/OtherEvm/Mantle



\-- A high performance Ethereum layer-2 network with modular design

Mantle is a high-performance Ethereum layer-2 network built with a modular architecture that delivers low fees and high security. Builders can use Mantle's unique design to create dApps with an exceptional user experience, while also relying on Ethereum's unparalleled security. Mantle is a product of BitDAO and is governed by the \$BIT community.

### The MetaData of the Mantle Blockchain

**Twitter Link**: [https://x.com/0xMantle](https://x.com/0xMantle)

**LinkedIn**: [https://www.linkedin.com/company/0xmantle](https://www.linkedin.com/company/0xmantle)

**Tags**: Infra, Layer2, Modular

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Memo Smart Chain Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Memo_Smart_Chain_Mainnet



\-- Create & Collect to Earn  in Real World

Memoworld is a Web3 application, focusing on connecting users to the offline world. Everyone can record their footprints and life experiences using NFTs.

### The MetaData of the Memo Smart Chain Mainnet Blockchain

**Twitter Link**: [https://x.com/memoworld\_xyz](https://x.com/memoworld_xyz)

**Tags**: NFT

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Meter Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Meter_Mainnet



\-- High-performance blockchain infrastructure

Meter.io is a decentralized Ethereum network expansion solution that integrates the advantages of PoW and PoS. It uses PoW to mint stable coins connected to electricity prices, and uses PoS based on HotStuff consensus to process transactions while resisting MEV and transaction front-running. , Meter.io aims to be a highly decentralized and extremely performant Ethereum sidechain.

### The MetaData of the Meter Mainnet Blockchain

**Twitter Link**: [https://x.com/Meter\_IO](https://x.com/Meter_IO)

**Documentation**: [https://docsend.com/view/6gebiph](https://docsend.com/view/6gebiph)

**Tags**: Infra, SideChain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Meter Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Meter_Testnet



\-- High-performance blockchain infrastructure

Meter.io is a decentralized Ethereum network expansion solution that integrates the advantages of PoW and PoS. It uses PoW to mint stable coins connected to electricity prices, and uses PoS based on HotStuff consensus to process transactions while resisting MEV and transaction front-running. , Meter.io aims to be a highly decentralized and extremely performant Ethereum sidechain.

### The MetaData of the Meter Testnet Blockchain

**Twitter Link**: [https://x.com/Meter\_IO](https://x.com/Meter_IO)

**Documentation**: [https://docsend.com/view/6gebiph](https://docsend.com/view/6gebiph)

**Tags**: Infra, SideChain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Mint Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Mint_Mainnet



\-- NFT mint aggregator

mint.fun is an NFT mint aggregator that shows users every project that is currently minting, ranked by popularity, so they don't have to search across various websites, Twitter, Discord, and group chats to figure out what to mint. It is built by the team at Context.

### The MetaData of the Mint Mainnet Blockchain

**Twitter Link**: [https://x.com/mintdotfun](https://x.com/mintdotfun)

**Tags**: NFT, NFT Tools

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Mint Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Mint_Sepolia_Testnet



\-- NFT mint aggregator

mint.fun is an NFT mint aggregator that shows users every project that is currently minting, ranked by popularity, so they don't have to search across various websites, Twitter, Discord, and group chats to figure out what to mint. It is built by the team at Context.

### The MetaData of the Mint Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/mintdotfun](https://x.com/mintdotfun)

**Tags**: NFT, NFT Tools

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Mint Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Mint_Testnet



\-- NFT mint aggregator

mint.fun is an NFT mint aggregator that shows users every project that is currently minting, ranked by popularity, so they don't have to search across various websites, Twitter, Discord, and group chats to figure out what to mint. It is built by the team at Context.

### The MetaData of the Mint Testnet Blockchain

**Twitter Link**: [https://x.com/mintdotfun](https://x.com/mintdotfun)

**Tags**: NFT, NFT Tools

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Mode Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Mode_Testnet



\-- Layer2 base on OP Stack

Mode is an OP Stack L2 designed for growth that incentivises anddirectly rewards developers, users and protocols to grow Mode andthe Superchain ecosystem. Mode is designed with contract revenue-sharing incentives at the protocol layer. Applications and users that scale the Mode blockchain will directly receive a proportion of network sequencer profits.

### The MetaData of the Mode Testnet Blockchain

**Twitter Link**: [https://x.com/modenetwork](https://x.com/modenetwork)

**Documentation**: [https://docs.mode.network/](https://docs.mode.network/)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Moonbeam
Source: https://docs.chainbase.com/catalog/OtherEvm/Moonbeam



\-- Etheruem-compatible smart contract platform

Moonbeam is an Ethereum-compatible smart contract platform, providing an EVM implementation and Web3-compatible API. This Ethereum compatibility allows developers to deploy existing Solidity smart contracts and DApp frontends to Moonbeam with minimal changes. As a parachain on the Polkadot network, Moonbeam benefits from the shared security of the Polkadot relay chain and integrations with other chains connected to Polkadot.

### The MetaData of the Moonbeam Blockchain

**Twitter Link**: [https://x.com/moonbeamnetwork](https://x.com/moonbeamnetwork)

**Documentation**: [https://docs.moonbeam.network/](https://docs.moonbeam.network/)

**LinkedIn**: [https://www.linkedin.com/company/moonbeam-network/](https://www.linkedin.com/company/moonbeam-network/)

**Tags**: Infra, Layer1, Polkadot Parachain, Altchain EVM

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Numbers Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Numbers_Mainnet



\-- Decentralized Photo Network for Web 3.0

Numbers is building a decentralized photo network to create community, value, and trust in digital media. Its Numbers Protocol redefines digital visual media as assets and is the backbone of a suite of tools for registering and retrieving images and videos in the Numbers network. Numbers Blockchain strives to support the entire lifecycle of the modern digital asset, with additional smart contract support including NFT minting, royalty distribution, and more.

### The MetaData of the Numbers Mainnet Blockchain

**Twitter Link**: [https://x.com/numbersprotocol](https://x.com/numbersprotocol)

**LinkedIn**: [https://www.linkedin.com/company/numbersprotocol/](https://www.linkedin.com/company/numbersprotocol/)

**Tags**: Infra, Avalanche Subnet

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Opal testnet by Unique
Source: https://docs.chainbase.com/catalog/OtherEvm/Opal_testnet_by_Unique



\-- DEX Liquidity protocol

Opal is the DEX liquidity protocol on Ethereum that enhances Dexs liquidity through the introduction of Omnipools, and its \$GEM token plays a central role in the governance of the protocol.

### The MetaData of the Opal testnet by Unique Blockchain

**Twitter Link**: [https://x.com/OpalDeFi](https://x.com/OpalDeFi)

**Tags**: DeFi, DEX

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Open Campus Codex
Source: https://docs.chainbase.com/catalog/OtherEvm/Open_Campus_Codex



\-- NFT marketplace

OpenSea is an NFT marketplace for discovering, collecting, and selling NFTs.

### The MetaData of the Open Campus Codex Blockchain

**Twitter Link**: [https://x.com/opensea](https://x.com/opensea)

**Blog URL**: [https://opensea.io/blog](https://opensea.io/blog)

**Documentation**: [https://docs.opensea.io/](https://docs.opensea.io/)

**Tags**: NFT, NFT marketplace

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Orderly Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Orderly_Sepolia_Testnet



\-- Liquidity platform

Orderly Network is a liquidity platform built on the Near protocol, which relies on smart contracts for peer-to-peer transactions and provides users with risk management and shared asset pools. Founded in April 2022, Orderly Network is incubated by NEAR and WOO Network.

### The MetaData of the Orderly Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/OrderlyNetwork](https://x.com/OrderlyNetwork)

**Tags**: DeFi, DEX

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Ozone Chain Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Ozone_Chain_Mainnet



\-- Quantum Resistant L1 Chain

Ozone Chain is a Quantum Resistant L1 Chain, that prioritizes security while enabling the development of scalable and user-friendly decentralized applications (dApps). With its integration of bleeding-edge quantum security technologies, Ozone Chain ensures a robust and quantum-resistant ecosystem.

### The MetaData of the Ozone Chain Mainnet Blockchain

**Twitter Link**: [https://x.com/Ozone\_chain](https://x.com/Ozone_chain)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Ozone Chain Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Ozone_Chain_Testnet



\-- Quantum Resistant L1 Chain

Ozone Chain is a Quantum Resistant L1 Chain, that prioritizes security while enabling the development of scalable and user-friendly decentralized applications (dApps). With its integration of bleeding-edge quantum security technologies, Ozone Chain ensures a robust and quantum-resistant ecosystem.

### The MetaData of the Ozone Chain Testnet Blockchain

**Twitter Link**: [https://x.com/Ozone\_chain](https://x.com/Ozone_chain)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# PLAYA3ULL GAMES
Source: https://docs.chainbase.com/catalog/OtherEvm/PLAYA3ULL_GAMES



\-- PLAYA3ULL GAMES

PLAYA3ULL GAMES combines professional game development with blockchain, allowing players to own NFT assets and influence game direction through DAOs.

### The MetaData of the PLAYA3ULL GAMES Blockchain

**Twitter Link**: [https://x.com/PLAYA3ULL\_GAMES](https://x.com/PLAYA3ULL_GAMES)

**Blog URL**: [https://playa3ull.games/blog](https://playa3ull.games/blog)

**Documentation**: [https://docs.playa3ull.games/](https://docs.playa3ull.games/)

**LinkedIn**: [https://www.linkedin.com/company/playa3ull-games/](https://www.linkedin.com/company/playa3ull-games/)

**Tags**: Gaming

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Plume Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Plume_Testnet



\-- RAW Layer2 Platform

Plume is a modular L2 blockchain dedicated for all real-world assets (RWAs) that integrates asset tokenization and compliance providers directly into the chain. Its mission is to simplify the convoluted processes of RWA project deployment and offer investors a blockchain ecosystem to cross-pollinate and invest in various RWAs. In addition, Plume enables RWA composability through its thriving DeFi applications and provides access to high-quality buyers to increase liquidity for all tokenized RWAs.

### The MetaData of the Plume Testnet Blockchain

**Twitter Link**: [https://x.com/plumenetwork](https://x.com/plumenetwork)

**Tags**: Infra, Layer2, RWA

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Pools Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Pools_Mainnet



\-- DeFi's AMM for Yield-bearing tokens

Poolside is a decentralized AMM protocol optimized for liquid staking and yield-bearing tokens. In other AMMs, token rebases will affect the price of tokens in a pool. This results in mispriced assets and unfair losses for liquidity providers (LPs). Poolside implements reservoirs, a novel mechanism, that solves this problem.

### The MetaData of the Pools Mainnet Blockchain

**Twitter Link**: [https://x.com/Poolside\_Party](https://x.com/Poolside_Party)

**Documentation**: [https://docs.poolside.party/overview/poolside](https://docs.poolside.party/overview/poolside)

**Tags**: DeFi, DEX

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# PulseChain
Source: https://docs.chainbase.com/catalog/OtherEvm/PulseChain



\-- Open-source, public blockchain

Pulsechain is a fast, open-source, public blockchain and a cost-effective hard fork of the Ethereum. It is the first hard fork to contain the complete state of the Ethereum blockchain, meaning that it holds records of every transaction, user account, and smart contract interaction on Ethereum.

### The MetaData of the PulseChain Blockchain

**Twitter Link**: [https://x.com/pulsechaincom](https://x.com/pulsechaincom)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# PulseChain Testnet v4
Source: https://docs.chainbase.com/catalog/OtherEvm/PulseChain_Testnet_v4



\-- Open-source, public blockchain

Pulsechain is a fast, open-source, public blockchain and a cost-effective hard fork of the Ethereum. It is the first hard fork to contain the complete state of the Ethereum blockchain, meaning that it holds records of every transaction, user account, and smart contract interaction on Ethereum.

### The MetaData of the PulseChain Testnet v4 Blockchain

**Twitter Link**: [https://x.com/pulsechaincom](https://x.com/pulsechaincom)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# RSS3 VSL Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/RSS3_VSL_Sepolia_Testnet



\-- Open Information Layer

RSS3 is the Open Information Layer, structuring open information for social, search, and AI. RSS3's mission is to construct the Open Web by enhancing the free flow of Open Information.

### The MetaData of the RSS3 VSL Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/rss3](https://x.com/rss3)\_

**Blog URL**: [https://blog.rss3.io/](https://blog.rss3.io/)

**Tags**: Social, AI

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Reya Network
Source: https://docs.chainbase.com/catalog/OtherEvm/Reya_Network



\-- Trading-optimized modular L2

Reya Network is a trading-optimized modular L2. Capital staked into Reya Network is used productively to support trading via a novel passive liquidity pool mechanism. This design creates instant shared liquidity for all exchanges operating within the Reya ecosystem. Margin engine logic is embedded into Reya Network itself, meaning users have a single margin account that can be used across multiple exchanges. Moreover, transactions are executed on a ‘first-in-first-out’ (FIFO) basis with zero gas fees, removing front-running and harmful MEV. The predecessor of this project, Voltz Protocol, was an automated market maker for interest rate trading.

### The MetaData of the Reya Network Blockchain

**Twitter Link**: [https://x.com/reya\_xyz](https://x.com/reya_xyz)

**LinkedIn**: [https://www.linkedin.com/company/reyalabs/](https://www.linkedin.com/company/reyalabs/)

**Tags**: Infra, Layer2, Modular

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Rollux Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Rollux_Testnet



\-- The EVM rollup platform base on Bitcoin

Rollux is the EVM rollup platform base on Bitcoin’s PoW for security, scalability, and affordability. Rollux is developed by SYS Labs, and  functions as Syscoin’s Layer 2. Rollux will initially be an Optimistic Rollup, and will incorporate ZK-based rollups once Validity-proving technologies mature.

### The MetaData of the Rollux Testnet Blockchain

**Twitter Link**: [https://x.com/RolluxL2](https://x.com/RolluxL2)

**Tags**: Infra, Layer2, Bitcoin Ecosystem

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Saakuru Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Saakuru_Mainnet



\-- Consumer-centric L2 Protocol

Saakuru is a consumer-centric L2 Protocol with Zero Transaction Fees developed using OP Stack and utilizing the delegate model to eliminate gas fees for users to create a frictionless experience for any applications building on top of Saakuru and enhanced with Saakuru Developer Suite that enables embedding complex digital products to Web3 in 1 day. The powerful and developer-friendly product suite centered around the Saakuru blockchain allows cost-efficient and seamless connectivity from Web2 to Web3.

### The MetaData of the Saakuru Mainnet Blockchain

**Twitter Link**: [https://x.com/saakuru\_labs](https://x.com/saakuru_labs)

**LinkedIn**: [https://www.linkedin.com/company/saakurulabs](https://www.linkedin.com/company/saakurulabs)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Scroll
Source: https://docs.chainbase.com/catalog/OtherEvm/Scroll



\-- A native zkEVM Layer 2 Solution for Ethereum

Scroll is a zkEVM-based zkRollup on Ethereum that enables native compatibility for existing Ethereum applications and tools. It processes transactions off-chain and posts succinct proofs of correctness on-chain, resulting in higher throughput and lower costs compared to the Ethereum base layer.

### The MetaData of the Scroll Blockchain

**Twitter Link**: [https://x.com/Scroll\_ZKP](https://x.com/Scroll_ZKP)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Scroll Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Scroll_Sepolia_Testnet



\-- A native zkEVM Layer 2 Solution for Ethereum

Scroll is a zkEVM-based zkRollup on Ethereum that enables native compatibility for existing Ethereum applications and tools. It processes transactions off-chain and posts succinct proofs of correctness on-chain, resulting in higher throughput and lower costs compared to the Ethereum base layer.

### The MetaData of the Scroll Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/Scroll\_ZKP](https://x.com/Scroll_ZKP)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Shyft Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Shyft_Mainnet



\-- Building trust into data for the future of blockchain compliance

The Shyft Network is a public protocol designed to validate identity and enable compliance directly on the blockchain. It facilitates the transfer of verifiable data between centralized and decentralized ecosystems, providing meaningful user information that institutions can use to secure cryptocurrency while preserving privacy.

### The MetaData of the Shyft Mainnet Blockchain

**Twitter Link**: [https://twitter.com/shyftnetwork](https://twitter.com/shyftnetwork)

**Tags**: Infra, On-Chain Compliance Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Step Network
Source: https://docs.chainbase.com/catalog/OtherEvm/Step_Network



\-- Web3 lifestyle app

STEPN is a Web 3 lifestyle app with social-fi and game-fi elements. Players can earn money by walking, jogging, or running outdoors. With Game-Fi, STEPN aims to encourage millions to lead a healthier lifestyle, combat climate change, and connect the public to Web 3.0. It also relies on its Social-Fi aspect to create a long-lasting platform that promotes user-generated Web 3.0 content.

### The MetaData of the Step Network Blockchain

**Twitter Link**: [https://x.com/STEPNofficial](https://x.com/STEPNofficial)

**Tags**: Gaming, Sports Fitness, Move to Earn, Lifestyle App

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Swan Proxima Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Swan_Proxima_Testnet



\-- Bitcoin financial services firm

Swan is a Bitcoin financial services firm on a mission to help people stack Bitcoin, for the long term, in every investment vehicle possible.

### The MetaData of the Swan Proxima Testnet Blockchain

**Twitter Link**: [https://x.com/Swan](https://x.com/Swan)

**LinkedIn**: [https://www.linkedin.com/company/swanbitcoin/](https://www.linkedin.com/company/swanbitcoin/)

**Tags**: CeFi, Asset Management（CeFi）

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Swan Saturn Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Swan_Saturn_Testnet



\-- Bitcoin financial services firm

Swan is a Bitcoin financial services firm on a mission to help people stack Bitcoin, for the long term, in every investment vehicle possible.

### The MetaData of the Swan Saturn Testnet Blockchain

**Twitter Link**: [https://x.com/Swan](https://x.com/Swan)

**LinkedIn**: [https://www.linkedin.com/company/swanbitcoin/](https://www.linkedin.com/company/swanbitcoin/)

**Tags**: CeFi, Asset Management（CeFi）

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Syndicate Frame Chain
Source: https://docs.chainbase.com/catalog/OtherEvm/Syndicate_Frame_Chain



\-- Decentralized investment protocol and social network

Syndicate is a decentralized investment protocol and social network that will enable communities to raise, coordinate, and invest capital. It will level the playing field, empower communities of builders, creatives, influencers, and friends to invest in innovative ideas and technologies that can change the world, and introduce revolutionary new investment models to society.

### The MetaData of the Syndicate Frame Chain Blockchain

**Twitter Link**: [https://x.com/syndicateio](https://x.com/syndicateio)

**Documentation**: [https://guide.syndicate.io/](https://guide.syndicate.io/)

**Tags**: DAO Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# TAPROOT Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/TAPROOT_Mainnet



\-- Bitcoin-focused Ordinals project

Taproot Wizards is a Bitcoin-focused Ordinals project that was inspired by the original Bitcoin wizard Reddit meme from a decade ago.

### The MetaData of the TAPROOT Mainnet Blockchain

**Twitter Link**: [https://x.com/TaprootWizards](https://x.com/TaprootWizards)

**LinkedIn**: [https://www.linkedin.com/company/taprootwizards](https://www.linkedin.com/company/taprootwizards)

**Tags**: Ordinals, Bitcoin Ecosystem

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Taiko Hekla L2
Source: https://docs.chainbase.com/catalog/OtherEvm/Taiko_Hekla_L2



\-- Decentralized, Ethereum-equivalent ZK-Rollup

Taiko is a decentralized Ethereum-equivalent ZK-EVM and general-purpose ZK-Rollup. Its purpose is to enable developers and users of dApps developed for Ethereum L1 to use them on Taiko without any modifications. Therefore, dApps can be quickly deployed to L2, preserving Ethereum's security while incurring lower transaction fees than on L1.

### The MetaData of the Taiko Hekla L2 Blockchain

**Twitter Link**: [https://x.com/taikoxyz](https://x.com/taikoxyz)

**Documentation**: [https://taiko.xyz/docs/intro/](https://taiko.xyz/docs/intro/)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Tanssi Demo
Source: https://docs.chainbase.com/catalog/OtherEvm/Tanssi_Demo



\-- Appchain Infrastructure Protocol

Tanssi Network is an appchain infrastructure protocol backed by Polkadot's shared security framework. With Tanssi's ContainerChain technology, devs can deploy chains more efficiently and securely and have more time to grow their user base and enhance their application. When a project becomes a Tanssi ContainerChain, it gains access to a suite of tools and resources as services, including block production, data availability, cross-chain messaging, and bridges to external networks. Also included are management tools, templates, and key integrations such as wallets, indexers, RPC endpoints, block explorers and oracles.

### The MetaData of the Tanssi Demo Blockchain

**Twitter Link**: [https://x.com/TanssiNetwork](https://x.com/TanssiNetwork)

**Tags**: Infra, Appchain

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# UPB CRESCDI Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/UPB_CRESCDI_Testnet



\-- Crypto trading platform with grade automated trading bots

UpBots is a crypto trading platform that brings institutional-grade automated trading bots, social copy trading, and other advanced trading tools built on the blockchain to retail investors.

### The MetaData of the UPB CRESCDI Testnet Blockchain

**Twitter Link**: [https://x.com/UpBots](https://x.com/UpBots)

**Tags**: Tools, Trading robot

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Unique
Source: https://docs.chainbase.com/catalog/OtherEvm/Unique



\-- Democratizing investing and asset management

Unique Venture Clubs (Unique.vc) is a platform that enables people to quickly and securely pool resources, set up customizable on-chain governance systems, and collectively own assets without needing to know any code. Unique Venture Clubs strives to democratize investing and asset management by creating powerful self-governed communities with shared financial objectives.

### The MetaData of the Unique Blockchain

**Twitter Link**: [https://x.com/uniquevcs](https://x.com/uniquevcs)

**Tags**: DAO Solutions

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Vana Satori Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Vana_Satori_Testnet



\-- NFT ecosystem and gaming metaverse platform

Vanar（Virtua） is an NFT ecosystem and gaming metaverse platform that provides a space for artists, games, movies, and brands to create their own fully immersive digital experiences for fans through 3D NFTs with tangible utility. Users can showcase and interact with animated collectibles in Vanar's VR showrooms, all designed to function within the larger and interoperable Virtua Metaverse.

### The MetaData of the Vana Satori Testnet Blockchain

**Twitter Link**: [https://x.com/Vanarchain](https://x.com/Vanarchain)

**Tags**: Metaverse

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Vanar Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Vanar_Mainnet



\-- NFT ecosystem and gaming metaverse platform

Vanar（Virtua） is an NFT ecosystem and gaming metaverse platform that provides a space for artists, games, movies, and brands to create their own fully immersive digital experiences for fans through 3D NFTs with tangible utility. Users can showcase and interact with animated collectibles in Vanar's VR showrooms, all designed to function within the larger and interoperable Virtua Metaverse.

### The MetaData of the Vanar Mainnet Blockchain

**Twitter Link**: [https://x.com/Vanarchain](https://x.com/Vanarchain)

**Tags**: Metaverse

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# VeChain
Source: https://docs.chainbase.com/catalog/OtherEvm/VeChain



\-- Smart contract platform

VeChain is a smart contract platform focused on providing supply chain management solutions for enterprises and integrating with Internet of Things (IoT) devices to facilitate the process. Its goal is to use distributed ledger technology to streamline these operations and information flow for complex supply chains. VeChain Token (VET) and VeChainThor Energy (VTHO) are the two tokens on the VeChain network. The former is used to transfer value across VeChain's network, while the latter is used to power smart contract transactions as energy or "gas." The VeChain platform aims to give authorized stakeholders a comprehensive view of critical information related to a product and its business processes (e.g. storage, transit, supply and authenticity) as well as increase market transparency.

### The MetaData of the VeChain Blockchain

**Twitter Link**: [https://x.com/vechainofficial?lang=en](https://x.com/vechainofficial?lang=en)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# VeChain Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/VeChain_Testnet



\-- Smart contract platform

VeChain is a smart contract platform focused on providing supply chain management solutions for enterprises and integrating with Internet of Things (IoT) devices to facilitate the process. Its goal is to use distributed ledger technology to streamline these operations and information flow for complex supply chains. VeChain Token (VET) and VeChainThor Energy (VTHO) are the two tokens on the VeChain network. The former is used to transfer value across VeChain's network, while the latter is used to power smart contract transactions as energy or "gas." The VeChain platform aims to give authorized stakeholders a comprehensive view of critical information related to a product and its business processes (e.g. storage, transit, supply and authenticity) as well as increase market transparency.

### The MetaData of the VeChain Testnet Blockchain

**Twitter Link**: [https://x.com/vechainofficial?lang=en](https://x.com/vechainofficial?lang=en)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Vitruveo Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Vitruveo_Mainnet



\-- Decentralized ecosystem for creators

Vitruveo is a decentralized ecosystem for creators. Launching Blockchain Protocol, Early Adopter Rewards, Innovative dApps, On-chain Licensing & more.

### The MetaData of the Vitruveo Mainnet Blockchain

**Twitter Link**: [https://x.com/vitruveochain](https://x.com/vitruveochain)

**Tags**: Creator Economy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Vitruveo Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Vitruveo_Testnet



\-- Decentralized ecosystem for creators

Vitruveo is a decentralized ecosystem for creators. Launching Blockchain Protocol, Early Adopter Rewards, Innovative dApps, On-chain Licensing & more.

### The MetaData of the Vitruveo Testnet Blockchain

**Twitter Link**: [https://x.com/vitruveochain](https://x.com/vitruveochain)

**Tags**: Creator Economy

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# WeaveVM Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/WeaveVM_Testnet



\-- The hyperscalable EVM protocol on Arweave

WeaveVM (WVM) is a EVM-compatible protocol engineered to manage complex, large-scale data computation without the high gas fees typically associated with on-chain state storage on EVM chains. WVM is also the first EVM-compatible protocol that fully relies on Arweave for decentralized data storage, enabling atomicity of source code and data storage on the same ledger. WVM incorporates the principles of VACP, bolstering its ability to handle complex data structures efficiently and gaslessly.

### The MetaData of the WeaveVM Testnet Blockchain

**Twitter Link**: [https://x.com/weavevm](https://x.com/weavevm)

**Blog URL**: [https://blog.wvm.dev/](https://blog.wvm.dev/)

**Documentation**: [https://docs.wvm.dev/](https://docs.wvm.dev/)

**Tags**: Infra, Altchain EVM

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# XDC Apothem Network
Source: https://docs.chainbase.com/catalog/OtherEvm/XDC_Apothem_Network



\-- Blockchain technology solution built by XinFin

The XDC Network is a blockchain technology solution built by XinFin. It is a global, open-source, delegated proof of stake consensus network (XDPoS) that enables hybrid relay bridges, instant block finality, and interoperability with ISO 20022 financial messaging standards. The network's hybrid (private/public) architecture is designed to support institutional use in trade finance and asset tokenization.

### The MetaData of the XDC Apothem Network Blockchain

**Twitter Link**: [https://twitter.com/XinFin\_Official](https://twitter.com/XinFin_Official)

**Documentation**: [https://xinfin.org/docs/whitepaper-tech.pdf](https://xinfin.org/docs/whitepaper-tech.pdf)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# XR Sepolia
Source: https://docs.chainbase.com/catalog/OtherEvm/XR_Sepolia



\-- AI Powered trading expert insights platform

XRADERS is a AI crypto insights platform that empower investors to make informed decision making by curated expert's insights.

### The MetaData of the XR Sepolia Blockchain

**Twitter Link**: [https://x.com/xraders\_xyz](https://x.com/xraders_xyz)

**Tags**: Tools

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Xai Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Xai_Mainnet



\-- Gaming-focused Layer 3 blockchain

Xai is a permissionless Orbit chain leveraging the Arbitrum Nitro technology stack to bring an innovative, gaming-focused Layer 3 to the games industry. Xai plans to introduce additional features for gaming developers, including increased smart contract size support, account abstraction allowing wallets to handle complex tasks automatically, and other functionalities that appeal to the gaming community.

### The MetaData of the Xai Mainnet Blockchain

**Twitter Link**: [https://x.com/xai\_games](https://x.com/xai_games)

**Tags**: Infra, Gaming Solutions, Layer3

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Xterio Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Xterio_Testnet



\-- Cross-platform play-and-earn developer and publisher

Xterio is a global, cross-platform play-and-earn developer and publisher working to create deeply engaging gaming worlds enhanced by digital ownership, connecting millions of people across the globe. Xterio focuses on developing Web3 native universes that can be expanded across all media and platforms. Xterio's teams and studios are located around the world, in cities such as San Francisco, Los Angeles, Tokyo, and Singapore.

### The MetaData of the Xterio Testnet Blockchain

**Twitter Link**: [https://x.com/XterioGames](https://x.com/XterioGames)

**LinkedIn**: [https://www.linkedin.com/company/xterio/](https://www.linkedin.com/company/xterio/)

**Tags**: Gaming, Game Platforms

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Zilliqa EVM
Source: https://docs.chainbase.com/catalog/OtherEvm/Zilliqa_EVM



\-- Public chain with sharding architecture

Zilliqa is a public blockchain network featuring a sharded architecture that aims to address scalability limitations seen in other blockchains. Its sharded design allows concurrent chains to execute transactions in parallel, thereby increasing the overall capacity of the network. In addition to scalability, Zilliqa provides a smart contract layer to support the creation of smart contracts using its native programming language, Scilla. The network reaches a consensus on transactions and contract executions through a hybrid Proof-of-Work-BFT mechanism.

### The MetaData of the Zilliqa EVM Blockchain

**Twitter Link**: [https://x.com/zilliqa](https://x.com/zilliqa)

**Blog URL**: [https://blog.zilliqa.com/](https://blog.zilliqa.com/)

**Documentation**: [https://docs.zilliqa.com/whitepaper.pdf](https://docs.zilliqa.com/whitepaper.pdf)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Zilliqa EVM Devnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Zilliqa_EVM_Devnet



\-- Public chain with sharding architecture

Zilliqa is a public blockchain network featuring a sharded architecture that aims to address scalability limitations seen in other blockchains. Its sharded design allows concurrent chains to execute transactions in parallel, thereby increasing the overall capacity of the network. In addition to scalability, Zilliqa provides a smart contract layer to support the creation of smart contracts using its native programming language, Scilla. The network reaches a consensus on transactions and contract executions through a hybrid Proof-of-Work-BFT mechanism.

### The MetaData of the Zilliqa EVM Devnet Blockchain

**Twitter Link**: [https://x.com/zilliqa](https://x.com/zilliqa)

**Blog URL**: [https://blog.zilliqa.com/](https://blog.zilliqa.com/)

**Documentation**: [https://docs.zilliqa.com/whitepaper.pdf](https://docs.zilliqa.com/whitepaper.pdf)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Zilliqa EVM Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Zilliqa_EVM_Testnet



\-- Public chain with sharding architecture

Zilliqa is a public blockchain network featuring a sharded architecture that aims to address scalability limitations seen in other blockchains. Its sharded design allows concurrent chains to execute transactions in parallel, thereby increasing the overall capacity of the network. In addition to scalability, Zilliqa provides a smart contract layer to support the creation of smart contracts using its native programming language, Scilla. The network reaches a consensus on transactions and contract executions through a hybrid Proof-of-Work-BFT mechanism.

### The MetaData of the Zilliqa EVM Testnet Blockchain

**Twitter Link**: [https://x.com/zilliqa](https://x.com/zilliqa)

**Blog URL**: [https://blog.zilliqa.com/](https://blog.zilliqa.com/)

**Documentation**: [https://docs.zilliqa.com/whitepaper.pdf](https://docs.zilliqa.com/whitepaper.pdf)

**Tags**: Infra, Layer1

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Zircuit Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/Zircuit_Testnet



\-- EVM-compatible zero-knowledge rollup

Zircuit is a fully EVM-compatible zero-knowledge rollup. Backed by pioneering L2 research, the network’s unique hybrid architecture combines optimistic infrastructure with zero-knowledge proofs to give developers the best of both worlds. With cutting-edge performance and security at the sequencer level, users can explore new frontiers with faster transactions, reduced fees, and complete peace of mind. Zircuit will protect users at the sequencer level by monitoring the mempool for malicious transactions and preventing their inclusion into a block.

### The MetaData of the Zircuit Testnet Blockchain

**Twitter Link**: [https://x.com/ZircuitL2](https://x.com/ZircuitL2)

**Blog URL**: [https://www.zircuit.com/blog](https://www.zircuit.com/blog)

**LinkedIn**: [https://www.linkedin.com/company/zircuit/](https://www.linkedin.com/company/zircuit/)

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Zora
Source: https://docs.chainbase.com/catalog/OtherEvm/Zora



\-- The NFT marketplace protocol

ZORA is the NFT marketplace protocol working towards a new paradigm for creators. It enables the creation, curation, and collection of NFTs, and makes it possible for people to build their own markets around their work. In addition, ZORA also launched ZORA NETWORK, a Layer 2 network based on OP Stack. The network provides a faster and more efficient extension of Ethereum for artists, creators and the community, and will directly integrate all existing zora tools.

### The MetaData of the Zora Blockchain

**Twitter Link**: [https://x.com/zora](https://x.com/zora)

**Documentation**: [https://docs.zora.co/](https://docs.zora.co/)

**Tags**: NFT, NFT marketplace

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# opBNB Mainnet
Source: https://docs.chainbase.com/catalog/OtherEvm/opBNB_Mainnet



\-- High-performance layer-2 solution

opBNB is a high-performance layer-2 solution within the BNB ecosystem, built using the OP Stack. Leveraging its block size of 100M, opBNB's gas fees remain stable and low cost, making it a great solution for widespread adoption across multiple digital environments. From gaming and decentralized exchanges to daily use and digital collectibles, opBNB caters to a diverse set of needs while delivering optimal performance.

### The MetaData of the opBNB Mainnet Blockchain

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# opBNB Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/opBNB_Testnet



\-- High-performance layer-2 solution

opBNB is a high-performance layer-2 solution within the BNB ecosystem, built using the OP Stack. Leveraging its block size of 100M, opBNB's gas fees remain stable and low cost, making it a great solution for widespread adoption across multiple digital environments. From gaming and decentralized exchanges to daily use and digital collectibles, opBNB caters to a diverse set of needs while delivering optimal performance.

### The MetaData of the opBNB Testnet Blockchain

**Tags**: Infra, Layer2

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# re.al
Source: https://docs.chainbase.com/catalog/OtherEvm/re.al



\-- Tokenized RWAs L2

re.al is a permissionless L2 for tokenized RWAs. Built on Arbitrum Orbit.

### The MetaData of the re.al Blockchain

**Twitter Link**: [https://x.com/real\_rwa](https://x.com/real_rwa)

**Documentation**: [https://docs.re.al/](https://docs.re.al/)

**Tags**: Infra, Layer2, RWA

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# zkCandy Sepolia Testnet
Source: https://docs.chainbase.com/catalog/OtherEvm/zkCandy_Sepolia_Testnet



\-- The gaming epicentre for the ZK ecosystem

zkCandy is a Layer 2 scaling solution for Ethereum, utilizing zero-knowledge proofs to accelerate transaction speed and decrease fees. By processing transactions off-chain and leveraging Ethereum's security, zkCandy enhances scalability, ensuring faster, cost-effective transactions while remaining compatible with the Ethereum ecosystem.

### The MetaData of the zkCandy Sepolia Testnet Blockchain

**Twitter Link**: [https://x.com/zkCandyHQ](https://x.com/zkCandyHQ)

**Tags**: Infra, Layer2, ZK

### Blobs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Blobs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.blobs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transaction logs Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Transactions Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ethereum.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Polygon/Abstracted



## 1.polygon.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Polygon/Overview



Polygon, formerly known as Matic Network, is a decentralized platform designed to improve the scalability and usability of Ethereum while retaining its core values of decentralization and security. Launched in 2017, Polygon offers a framework for building and connecting Ethereum-compatible blockchain networks, providing solutions for scalability issues through sidechains and Layer 2 solutions.

### The Major Features of the Polygon Blockchain

1. **Scalability**: Polygon enhances the scalability of Ethereum by providing a framework for building and connecting multiple Layer 2 solutions and sidechains. These solutions help offload transactions from the Ethereum main chain, reducing congestion and improving transaction speeds. Polygon's architecture allows for thousands of transactions per second, significantly higher than Ethereum's native capacity.

2. **Interoperability**: Polygon facilitates interoperability between different blockchain networks, allowing assets and data to move seamlessly across chains. This cross-chain compatibility is achieved through a set of standardized protocols that ensure secure and efficient communication between connected networks. The interoperability features enable developers to create more versatile and interconnected decentralized applications.

3. **Security**: Polygon leverages the security of the Ethereum network while adding its own security measures to ensure the integrity and safety of its sidechains and Layer 2 solutions. By using Ethereum's robust consensus mechanism and additional security protocols, Polygon ensures that its network remains secure and resilient against attacks.


# Raw
Source: https://docs.chainbase.com/catalog/Polygon/Raw



## 1.polygon.blocks

### Table Description

The polygon.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The polygon.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2.polygon.contracts

### Table Description

The polygon.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The polygon.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3.polygon.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4.polygon.trace\_calls

### Table Description

The polygon.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The polygon.trace\_calls table is a powerful tool for developers, auditors, and researchers working with polygon. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5.polygon.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6.polygon.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/polygon.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/polygon.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Abstracted
Source: https://docs.chainbase.com/catalog/Price/Abstracted



## 1.token.token\_prices

### Table Description

Token prices in the context of cryptocurrencies and blockchain refer to the market value of a specific digital token or cryptocurrency. These prices are dynamic and can fluctuate significantly based on a variety of factors. Here are key points to understand about token prices:Supply and Demand: Like any market, token prices are largely driven by supply and demand. Limited supply and high demand can increase a token's price, while excess supply and low demand can decrease it.Market Sentiment: Investor sentiment, which can be influenced by news, social media, and market trends, plays a significant role in the pricing of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/token.token_prices" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/token.token_prices" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2.token.token\_prices\_latest

### Table Description

Token prices in the context of cryptocurrencies and blockchain refer to the market value of a specific digital token or cryptocurrency. These prices are dynamic and can fluctuate significantly based on a variety of factors. Here are key points to understand about token prices:Supply and Demand: Like any market, token prices are largely driven by supply and demand. Limited supply and high demand can increase a token's price, while excess supply and low demand can decrease it.Market Sentiment: Investor sentiment, which can be influenced by news, social media, and market trends, plays a significant role in the pricing of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/token.token_prices_latest" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/token.token_prices_latest" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Price/Overview



We provide token price data across 8 blockchains for over 8,000 tokens, offering both real-time and historical price tracking. This dataset allows users to access the latest token prices as well as historical price trends for deeper analysis.

### The Major Features of the Token Price

1. **Freshness**: Updated hourly to reflect market changes.

2. **Querying**: Retrieve the most recent price for any supported token.

3. **Use Case**:  Ideal for applications needing current token prices (e.g., dashboards, price tracking).

## Supported Chains

<table>
  <thead>
    <tr>
      <th style={{ width: "150px" }}>Chain</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>Ethereum</td>
    </tr>

    <tr>
      <td>Polygon</td>
    </tr>

    <tr>
      <td>BSC</td>
    </tr>

    <tr>
      <td>Avalanche</td>
    </tr>

    <tr>
      <td>Arbitrum One</td>
    </tr>

    <tr>
      <td>Optimism</td>
    </tr>

    <tr>
      <td>Base</td>
    </tr>

    <tr>
      <td>zkSync</td>
    </tr>
  </tbody>
</table>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Sui/Overview



Sui is a decentralized blockchain platform designed to deliver high performance, scalability, and security, making it an ideal choice for developing and deploying decentralized applications (DApps). Leveraging innovative consensus mechanisms and advanced architecture, Sui aims to overcome the limitations of traditional blockchain networks while providing a seamless and efficient user experience.

### The Major Features of the Sui Blockchain

1. **High Performance**: Sui is built to handle a high volume of transactions with low latency, enabling it to process thousands of transactions per second. This high throughput ensures that the network can support a growing number of users and applications without experiencing congestion or delays.

2. **Scalability**: Sui's architecture is designed to be highly scalable, capable of supporting a large number of transactions and users simultaneously. This scalability is achieved through advanced consensus protocols and network optimization, ensuring that Sui can meet the demands of various decentralized applications.

3. **Security**: Sui employs robust security measures to ensure the integrity and safety of the network. Utilizing advanced cryptographic techniques and a secure consensus mechanism, Sui provides strong protection against attacks and operational faults, maintaining a reliable and secure environment for DApps and transactions.

4. Interoperability: Sui supports interoperability with other blockchain networks, allowing for seamless asset transfers and data sharing across different chains. This cross-chain compatibility enhances the functionality of the Sui ecosystem, providing users with a more integrated and versatile blockchain experience.


# Raw
Source: https://docs.chainbase.com/catalog/Sui/Raw



## 1. sui\_objects

### Table Description

The sui.sui\_objects table stores detailed information about various objects on the Sui blockchain. This data is essential for tracking and managing objects, ensuring all relevant metadata and state information is available for applications and users interacting with these objects on the Sui network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/sui.sui_objects" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/sui.sui_objects" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. sui\_transactions

### Table Description

The sui.sui\_transactions table logs all transactions occurring on the Sui blockchain. This data is essential for tracking and analyzing the flow of assets and interactions within the network, providing a comprehensive record of all transactional activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/sui.sui_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/sui.sui_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. sui\_checkpoints

### Table Description

The sui.sui\_checkpoints table stores checkpoint-related data for the Sui blockchain, including the checkpoint’s sequence number and the corresponding raw JSON data at that height. This dataset enables users to track the state of the Sui blockchain at different checkpoints.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/sui.sui_checkpoints" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/sui.sui_checkpoints" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Ton/Overview



TON (The Open Network) is a decentralized blockchain platform initially developed by the Telegram team and now maintained by the TON Foundation. Designed to offer high performance, scalability, and security, TON aims to support a wide range of decentralized applications (DApps) and services while providing a seamless user experience.

### The Major Features of the TON Blockchain

1. **High Performance**: TON is designed to handle a high volume of transactions with low latency, capable of processing thousands of transactions per second. This high throughput ensures that the network can support a growing number of users and applications without experiencing congestion or delays.

2. **Scalability**: TON employs a multi-chain architecture, known as sharding, to enhance its scalability. This approach allows the network to process multiple transactions simultaneously across different shards, ensuring that TON can efficiently scale to meet the demands of various decentralized applications.

3. **Security**: TON utilizes robust security measures to ensure the integrity and safety of the network. By employing advanced cryptographic techniques and a secure consensus mechanism, TON provides strong protection against attacks and operational faults, maintaining a reliable and secure environment for DApps and transactions.

### Quick Start

* [Data Cloud](https://docs.chainbase.com/platform/features/datacloud/overview#quickstart)


# Raw
Source: https://docs.chainbase.com/catalog/Ton/Raw



## 1. base\_blocks

### Table Description

The ton.base\_blocks table stores detailed information about each block on the TON (The Open Network) basechain, which workchain = 0. This data is crucial for understanding the structure and content of blocks, providing insights into the transactions they contain and their role in the blockchain.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.base_blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.base_blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. base\_transactions

### Table Description

The ton.base\_transactions table logs all transactions occurring on the TON (The Open Network) basechain, which workchain = 0. This data is essential for tracking and analyzing the flow of assets and interactions within the network, providing a comprehensive record of all transactional activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.base_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.base_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. master\_blocks

### Table Description

The ton.master\_blocks table stores detailed information about each block on the TON (The Open Network) masterchain, which workchain = -1. This data is crucial for understanding the structure and content of blocks, providing insights into the transactions they contain and their role in the blockchain.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.master_blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.master_blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. master\_transactions

### Table Description

The ton.master\_transactions table logs all transactions occurring on the TON (The Open Network) materchain, which workchain = -1. This data is essential for tracking and analyzing the flow of assets and interactions within the network, providing a comprehensive record of all transactional activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.master_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.master_transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. messages

### Table Description

The ton.messages table stores detailed information about messages on the TON (The Open Network) blockchain. Messages in TON are integral parts of the transaction logic, carrying data and instructions between accounts and smart contracts. This data is crucial for understanding the interactions and operations within the TON network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.messages" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.messages" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. sub\_shards

### Table Description

Masterchain block stores only the reference to lastest shard blocks of workchain.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/ton.subshards" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/ton.subshards" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Quick Start

* [Data Cloud](https://docs.chainbase.com/platform/features/datacloud/overview#quickstart)


# ☆ Overview
Source: https://docs.chainbase.com/catalog/Tron/Overview



TRON is a decentralized blockchain platform designed to create a free, global digital content entertainment system with distributed storage technology. Launched in 2017 by Justin Sun, TRON aims to remove intermediaries by allowing content creators to publish, store, and own data freely and to be compensated directly by consumers. TRON's high throughput and scalability make it suitable for developing decentralized applications (DApps) and supporting a wide range of blockchain-based use cases.

### The Major Features of the TRON Blockchain

1. **High Throughput**: TRON's blockchain architecture enables high throughput, with the ability to process up to 2,000 transactions per second. This high capacity supports a broad range of decentralized applications and ensures that the network can handle high demand without congestion.

2. **Scalability**: TRON is designed to be highly scalable, capable of supporting a large user base and numerous transactions simultaneously. Its scalable infrastructure makes it suitable for hosting large-scale DApps and decentralized services.

3. **Decentralized Applications (DApps)**: TRON provides a robust environment for the development and deployment of decentralized applications. Developers can create a wide range of DApps, leveraging TRON's scalable and high-performance blockchain. The TRON ecosystem supports various DApps, including games, social media, and financial services, fostering innovation and growth.


# Raw
Source: https://docs.chainbase.com/catalog/Tron/Raw



## 1. tron.stable\_coin\_transfers

### Table Description

Stablecoin transfers refer to the movement of stablecoins, which are cryptocurrencies designed to maintain a stable value by pegging their price to a reserve asset or a basket of assets. Stablecoins are commonly used in the cryptocurrency space for trading, remittances, and as a store of value due to their price stability. Stablecoin transfers can be tracked on the blockchain, providing transparency and auditability of transactions. These transfers can involve sending stablecoins between users, wallets, exchanges, or smart contracts, and the details of each transfer are recorded on the blockchain for verification and analysis.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/tron.stable_coin_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/tron.stable_coin_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Overview
Source: https://docs.chainbase.com/catalog/overview



Data Catalog is a system for organising and managing data assets. Its main function is to help you discover, understand and manage data resources. Here is a detailed description of the data discovery catalogue from chainbase.

## Supported Blockchains - Raw Data Access

<table>
  <tr>
    <th>**Ecosystem**</th>
    <th>**Blockchains Supported**</th>
    <th>**Raw Data**</th>
    <th>**Freshness**</th>
  </tr>

  <tr>
    <td rowspan="6">**EVM**</td>
    <td>Ethereum</td>
    <td>✔</td>
    <td>\<3s</td>
  </tr>

  <tr>
    <td>Binance Smart Chain (BSC)</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Polygon</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Avalanche (C-Chain)</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Fantom</td>
    <td>✔</td>
    <td>\<8s</td>
  </tr>

  <tr>
    <td>Tron</td>
    <td>✔</td>
    <td>\<10s</td>
  </tr>

  <tr>
    <td rowspan="5">**EVM Layer 2**</td>
    <td>Arbitrum</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Optimism</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Base</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>Blast</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td>ZkSync</td>
    <td>✔</td>
    <td>\<5s</td>
  </tr>

  <tr>
    <td rowspan="5">**Non EVM**</td>
    <td>Bitcoin</td>
    <td>✔</td>
    <td>\<60s</td>
  </tr>

  <tr>
    <td>Sui</td>
    <td>✔</td>
    <td>\<10s</td>
  </tr>

  <tr>
    <td>Ton</td>
    <td>✔</td>
    <td>\<10s</td>
  </tr>

  <tr>
    <td>Merlin</td>
    <td>✔</td>
    <td>\<30s</td>
  </tr>

  <tr>
    <td>*Solana\**</td>
    <td>\*</td>
    <td>\*</td>
  </tr>
</table>

\* *support is in progress..*

> For decoded data, abstracted data, token data, and NFT data, please refer to our [Web3 API documentation](https://docs.chainbase.com/platform/features/api/web3-api).


# Abstracted
Source: https://docs.chainbase.com/catalog/zkSync/Abstracted



## 1.zksync.token\_metas

### Table Description

Token metadata in the context of blockchain and cryptocurrencies typically refers to the set of data that describes the characteristics and details of a particular token. This metadata can include information such as the token's name, symbol, total supply, decimal precision, and other details relevant to its function and identity on the blockchain. It's essentially the descriptive data that gives context and identity to a token, distinguishing it from other tokens within the same blockchain ecosystem. Metadata is crucial for understanding the nature and purpose of a token, especially in applications like wallets, exchanges, and decentralized applications (dApps) where users interact with various types of tokens.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.token_metas" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# ☆ Overview
Source: https://docs.chainbase.com/catalog/zkSync/Overview



zkSync is a Layer 2 scaling solution for Ethereum, designed to provide high throughput and low transaction costs while maintaining the security and decentralization of the Ethereum network. Developed by Matter Labs, zkSync leverages zk-rollup technology to offer fast and cost-effective transactions, making it a powerful platform for decentralized applications (DApps).

### The Major Features of the zkSync Blockchain

1. Scalability: zkSync significantly enhances Ethereum's scalability by bundling multiple transactions into a single batch, which is then processed off-chain before being committed to the Ethereum main chain. This zk-rollup technique allows zkSync to handle thousands of transactions per second, reducing congestion and improving overall network performance.

2. Low Fees: By processing transactions off-chain and only recording the final state on the Ethereum main chain, zkSync dramatically reduces transaction fees. This cost efficiency makes blockchain interactions more affordable for users and developers, promoting greater adoption and usage of decentralized applications.

3. EVM Compatibility: zkSync is fully compatible with the Ethereum Virtual Machine (EVM), enabling developers to deploy their existing Ethereum-based smart contracts and DApps on zkSync with minimal modifications. This compatibility ensures a seamless transition for developers and allows them to leverage Ethereum’s extensive ecosystem of tools and libraries.


# Raw
Source: https://docs.chainbase.com/catalog/zkSync/Raw



## 1. zkSync.blocks

### Table Description

The zksync.blocks table stores crucial data about the Ethereum blockchain's block structure. Each block in the Ethereum blockchain contains a unique set of data that ensures the integrity and chronological order of transactions. Blocks are the building blocks of the Ethereum blockchain, and they contain several key components:

1. Block Header: This includes metadata such as the block number, timestamp, parent block hash, and nonce. The header is essential for maintaining the blockchain's integrity and linking blocks together in a chain.

2. Transactions: Each block includes a list of transactions that have been validated and added to the blockchain. These transactions consist of various operations, such as transfers of Ether, execution of smart contracts, and other state changes.

3. Uncle Blocks (Ommer Blocks): These are blocks that were mined but not included in the main chain. They are referenced in the block to improve the chain's security and reward miners for their efforts.

4. State Root: This is a cryptographic hash representing the state of the entire Ethereum network at the time the block was mined. It includes account balances, storage, and other state data.

5. Receipts Root: This is a hash of the receipts of all transactions included in the block. Receipts contain information about the execution of transactions, such as gas used and logs generated.

The zksync.blocks table provides a detailed and organized view of the blockchain's structure, allowing for efficient retrieval and analysis of blockchain data. This information is crucial for developers, researchers, and analysts working with the Ethereum blockchain, as it enables them to understand the state and evolution of the network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.blocks" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 2. zkSync.contracts

### Table Description

The zksync.contracts table contains essential data about smart contracts deployed on the Ethereum blockchain. Smart contracts are self-executing contracts with the terms of the agreement directly written into code. They are a fundamental aspect of Ethereum, enabling decentralized applications (DApps) and automating complex transactions without intermediaries. The zksync.contracts table includes several key components:

1. Contract Address: This is a unique identifier for each smart contract deployed on the Ethereum network. It is derived from the creator's address and the transaction nonce.

2. Creator Address: This is the Ethereum address of the account that deployed the smart contract. It provides traceability and accountability for the origin of the contract.

3. Creation Transaction: This includes the transaction hash of the deployment transaction, linking the contract to the specific transaction that created it.

4. Bytecode: This is the compiled code of the smart contract that gets executed on the Ethereum Virtual Machine (EVM). It includes the contract's logic and functions.

5. ABI (Application Binary Interface): The ABI defines the contract's interface, including its functions, inputs, and outputs. It is crucial for interacting with the contract programmatically.

6. Source Code (optional): Some contracts include the original source code, providing transparency and enabling verification of the compiled bytecode.

7. Block Number: This indicates the block in which the smart contract was deployed, providing a chronological context for the contract's creation.

8. Timestamp: The exact time when the smart contract was deployed, allowing for time-based analysis and tracking.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.contracts" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 3. zkSync.token\_transfers

### Table Description

Token transfers in the context of blockchain data refer to the movement of digital tokens from one address to another. These transfers can be tracked on the blockchain, providing a transparent record of token movements. Here are some key points to understand about token transfers:Token transfers can be initiated by users or smart contracts. For example, a user can send tokens to another user, or a smart contract can transfer tokens to a user as part of a transaction.Token transfers can be tracked on the blockchain, providing a transparent record of token movements. This is particularly useful for auditing and compliance purposes.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.token_transfers" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 4. zkSync.trace\_calls

### Table Description

The zksync.trace\_calls table contains detailed data about the execution of transactions on the Ethereum blockchain. Trace calls provide a granular view of what happens during the execution of a transaction, including internal transactions and function calls within smart contracts. This information is essential for debugging, auditing, and understanding the complex interactions within the Ethereum network.
The zksync.trace\_calls table is a powerful tool for developers, auditors, and researchers working with zksync. It provides an in-depth view of transaction execution, enabling detailed analysis of smart contract interactions and internal transactions. This information is vital for ensuring the security, efficiency, and transparency of operations on the Ethereum network.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.trace_calls" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 5. zkSync.transaction\_logs

### Table Description

This dataset holds detailed logs emitted during transactions by smart contract events. These logs are pivotal for tracking activities such as token transfers, contract updates, and custom event notifications set by contract developers. For instance, when a user transfers ERC-20 tokens, the transaction log would capture the 'Transfer' event with details like the sender's address, recipient's address, and the amount transferred. This information is crucial for applications that need to monitor and respond to specific contract activities.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.transaction_logs" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

## 6. zkSync.transactions

### Table Description

The dataset encompasses comprehensive details of all transactions on the network. It includes the initiating account, destination address, value transferred, gas used, and the data payload. For example, when a user sends Ether to another user, the transaction record would include the sender's and receiver's addresses, the amount of Ether sent, and the gas price paid for the transaction. Additionally, it also captures the nonce, which is the transaction count of the sender, helping in preventing double-spending and replay attacks.

### Column Descriptions

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/columns/zksync.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>

### Table Sample

<div>
  <iframe src="https://doc-embed-app.chainbasehq.com/data/zksync.transactions" width="100%" height="300px" frameBorder="0" scrolling="no" />
</div>


# Chainbase Improvement Proposals (CIPs)
Source: https://docs.chainbase.com/contributing/cips



Chainbase Improvement Proposals (CIPs) outline standards for the Chainbase network. These include core protocol specifications, client APIs, and contract standards. Network upgrades are discussed separately in the Chainbase CIPs repository.

## Contributing

* Review CIPs: Familiarize yourself with the process by reading CIPs.
* Clone the Repository: Start by cloning our CIPs repository.
* Submit Your CIP: Use the provided template to draft your proposal and submit a Pull Request to the CIPs repository.

## CIP Status Terms

* Idea: Preliminary concept, not yet formally tracked.
* Draft: First tracked stage, properly formatted and submitted.
* Review: Ready for peer review.
* Last: Final review stage, typically lasting 30 days.
* Final: Established as a standard, only updated for corrections.
* Stagnant: Inactive for 6+ months, can be reactivated.
* Withdrawn: Proposal has been withdrawn and cannot be reused.
* Living: Continuously updated, never final (e.g., CIP-1).

## Meta

Processes or changes affecting Chainbase development, requiring community consensus.

## Informational

Guidelines or information for the Chainbase community, not proposing new features.

For more details, visit our CIP documentation and guidelines.


# null
Source: https://docs.chainbase.com/contributing/governance



Chainbase embraces a governance model based on rough consensus and running code. Changes are driven by proposals, community buy-in, and the implementation of running code. The consensus process involves different stakeholders:

1. **Workers** - Provides blockchain data
2. **Developers** - Build and create manuscripts
3. **Consumers** - Pay \$C query data network
4. **Delegators** - Delegate \$C to worker & secure the network

This model avoids rigid structures, voting, or official roles, promoting action, diversity of viewpoints, and decentralization. Most changes follow the CIP (Chainbase Improvement Proposal) process.


# null
Source: https://docs.chainbase.com/contributing/overview



At Chainbase, we welcome and appreciate contributions of all sizes from the community. Thanks to the efforts of over 50 core contributors and tens of thousands of developers, our network and protocols have grown and improved significantly.

Your contributions, no matter how big or small, make a difference. Let's build something great together!

## Documentation

Welcome to the central hub for all documents. If you have any feedback, we encourage you to contribute by opening an issue or creating a pull request at [docs.chainbase.com](https://docs.chainbase.com) .

## Community

[Website](https://chainbase.com) - Official website ([https://chainbase.com](https://chainbase.com)) .

[X (Twitter)](https://x.com/ChainbaseHQ) - Any updates and announcements about Chainbase.

[Discord](https://discord.gg/chainbase) - Public chat for developer support.

[Github](https://github.com/chainbase-labs) - Code and Proposal Discussion.


# Chainbase Roadmap
Source: https://docs.chainbase.com/contributing/roadmap



Open blockchains promises a new era of democratized internet. We are building the next-generation data network for the AI era. Our mission is to make data accessible and useful. As the development team behind Chainbase, we are dedicated to creating and supporting networks, protocols, and dApps that unlock the intelligence and value of open data and drive human progress.

The following details Chainbase's path to interoperability, security, and sustainability.

***

## Aquamarine

![aquamarine-roadmap](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/aquamarine-roadmap.png)

📅 Mar 20, 2025, 14:30:00 PM +UTC

**Summary**

In ancient lore, aquamarine was the sailor’s stone, offering protection, clarity, and guidance across uncharted waters. It symbolized transformation and renewal, much like the evolution of Chainbase as it advances into its next phase. While Zircon (Genesis) laid the bedrock for a secure and decentralized data network, Aquamarine represents the fluid expansion of this foundation—deepening Web3’s data ecosystem, refining public data standards, and pioneering on-chain AI collaboration.

This phase is crucial as AI and Web3 begin to converge, demanding more scalable, intelligent, and interconnected data solutions. Aquamarine will establish Chainbase as a fundamental public data platform in the AGI era, equipping AI Agents with the infrastructure they need to collaborate and evolve. As the tides of decentralized intelligence rise, Aquamarine is the vessel that will navigate this new frontier.

### **Key Focus Areas for Aquamarine**

* **Chainbase Network Explorer**

  Launch a dynamic interface that allows users to navigate and interact with the expanding data ecosystem, ensuring transparency and usability.

* **Manuscript Early Adoption**

  Enhance Manuscript into a core AI-compatible tech stack, providing structured, verifiable, and scalable data for AI-powered Web3 applications.

* **Delegating Tokens on Testnet**

  Initiate community engagement by enabling token delegation in a secure, incentivized test environment, laying the groundwork for decentralized governance.

* **Initializing Data Zone Development**

  Integrate all Manuscripts within their respective Data Zones that serve as the data source for various application scenarios, much like subnets.

* **Decentralizing Data Accessibility Layer**

  Transform data access by establishing a decentralized network architecture, ensuring open, secure, and universal connectivity across blockchain networks.

* **Developing AI Tooling Kit**

  Create a comprehensive suite of tools designed specifically for AI Agents, facilitating seamless interaction with on-chain data and empowering automated decision-making.

* **Creating AI Agents for Vertical Scenes**

  Deploy specialized AI agents tailored for industry-specific applications, enhancing the integration of AI within vertical markets and driving sector-focused innovation.

* **Chainbase Network Mainnet Launch**

  Transition from testnet to a fully operational main network, solidifying Chainbase’s position as a foundational data network in the age of decentralized intelligence.

***

## ZIRCON(Genesis)

![zircon-roadmap](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/zircon-roadmap.png)

📅 May 27, 2024, 12:25:00 PM +UTC

🌄 [chainbase.network on waybackmachine](https://web.archive.org/)

**Summary**

The “ZIRCON (Genesis)” project marks the beginning of a groundbreaking chapter for Chainbase, aiming to build a unified, secure, and decentralized data network. This ambitious initiative seeks to set new standards in data protocols, decentralized computing and storage, and developer incentives. It also focuses on training sophisticated crypto-world models and empowering users with cutting-edge AI tools. As Chainbase evolves, it will support a thriving data ecosystem, enhance protocol efficiency, and serve the ever-expanding needs of Web3.

**Omnichain Data Standards**

Result: Build a standard protocol that can combine and utilize all data on the network.

**Decentralized Network**

Result: Decentralized computing, storage and validation, and providing services.

**Developer Community Economy**

Result: Rewards for developers who create data(manuscripts) value in the network.

**Crypto World Model**

Result: Training crypto-world models to go beyond knowledge and become intelligent.

**Users Empowerment**

Result: Supporting non-expert crypto users with enhanced AI models and tools.

Through efforts in these five key areas, Chainbase will lay a solid foundation for the data ecosystem in the AI era, driving innovation and development in onchain data.


# Co-processor Layer
Source: https://docs.chainbase.com/core-concepts/architecture/co_processor_layer



# **Introduction**

🌐 Chainbase realized early on that with the widespread application of blockchain technology, different application scenarios would generate a large amount of diverse data. Extracting value from these isolated and varied data sets is a challenging problem.

✨ Pre-set data sets cannot meet the customized needs of developers. We need to open up modular and composable stack capabilities to fully unleash developers' creativity. This creativity will transform into knowledge, which is why we need a Co-processor Layer. This will allow a large number of developers to collaborate around the Chainbase Network, accumulating knowledge and generating collective intelligence.

# **What is the Co-Processor Layer?**

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/co-processor-layer.png)

The Co-Processor Layer of the Chainbase Network is a component designed to facilitate user collaboration in contributing data processing and AI expert knowledge. Its main functions include:

1. **Knowledge Contribution**: Users can contribute their expertise in data processing and specialized task models to the Co-Processor Layer. This collaborative environment harnesses collective intelligence to enhance the network's capabilities.
2. **Assetization of Knowledge**: Contributions in the Co-Processor Layer are transformed into assets. This layer manages the distribution, circulation, and trading of these assets, ensuring contributors are rewarded for their knowledge and efforts.
3. **\$C Token Ecosystem**: The Co-Processor Layer revolves around the \$C token, which is integral to the network's incentive structure. It facilitates payments, settlements, staking, and governance, creating a vibrant and dynamic ecosystem.


# Consensus Layer
Source: https://docs.chainbase.com/core-concepts/architecture/consensus_layer



The consensus layer ensures that all execution layer nodes in the network reach a consensus on data and state consistency, based on CometBFT's instant final determinacy, achieving second-level data freshness.

## **What is CometBFT**

CometBFT is a software used for securely and consistently replicating applications across multiple machines. It ensures that the system can still operate normally when less than one-third of the machines fail. The core functions of CometBFT include:

* **Security**: Tolerates any type of failure, including malicious attacks.
* **Consistency**: All normally operating machines can see the same transaction logs and calculate the same state.

## **Features of CometBFT**

* **Byzantine fault tolerance**: CometBFT can tolerate less than one-third of machine failures, which can be in any form, including malicious attacks.
* **Universal Application Interface**: Through the Application Block Chain Interface (ABCI), developers can use any programming language and development environment to build their own application logic.
* **High performance and ease of use**: CometBFT is simple in design, high in performance, and suitable for various distributed applications.
* **Modular design**: Separates the consensus engine from application state management, providing a flexible development environment.

## **Why Choose CometBFT as the Consensus Engine**

In the distributed network of Chainbase Data Network, all execution layer nodes need to reach a consensus on the status of large-scale data processing. The efficiency and resilience of consensus are key factors, so CometBFT is an ideal choice. It ensures that the system can efficiently and robustly reach consensus when processing large amounts of data, providing strong support.

## **How to Integrate CVM Consensus**

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/consensus-layer-1.png)

### CVM Consensus

1. **Block Proposal:** Validators take turns proposing new blocks. The proposing validator requests the latest block from CVM through the Engine API.
2. **Block Construction:** The execution layer CVM obtains the source data to be processed from the Data Accessibility Layer, runs the logic of the Manuscript data processing submitted to the network, generates the result of the Dataset record and index proof, and builds a new CVM block.
3. **Block Inclusion:** The proposed CVM block is packaged as a CometBFT transaction and added to the consensus layer block, ready for network validation.
4. **Finalizing Blocks:** If the proposed consensus layer block obtains the approval of two-thirds of the validator set, the block will be finally determined and added to the Chainbase Data Network chain. These final blocks include the index proof and state after CVM processes the data, and the final consensus block represents that this processed data can be used externally.


# Data Accessibility Layer
Source: https://docs.chainbase.com/core-concepts/architecture/data_accessibility_layer



# Overview

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/da-1.png)

## Glossary

* Data Providers: Provide On-Chain or Off-Chain data
* Data Consumers: Consumers like LLM / Developers / Data Engineer and so on.
* SCP: Storage-Based Consensus Paradigm. This is how the dataset is being proved.
* CDC(Changelog): Change Data Capture. Data stored permanently in Arweave, like changelog which generated by CDC.
* Dataset: Data set which is stored in any database or file system. It can be accessed directly by the data consumer through API / SQL / Sync.
* Data Manifest: Data manifest is a metadata file that contains the information about the dataset.

## Data Flow

1. Data Providers collect On-Chain & Off-Chain data, then push the data with Zero-Knownledge Proof to CVM.
2. The CVM verifies the raw data provided by the Data Provider and writes the data permanently and immutably into Arweave in the form of a Changelog(CDC), while updating the data index in the Manifest.
3. The Manuscript consumes the raw data in a streaming manner using the CDC approach to extract and process high-value data.
4. The processed data can be directly stored in a database or local files, and the CVM provides direct data access services via SQL/API/Sync

# Solved Problems

## Distributed Data Lake

The raw data is stored immutably and in a decentralized manner on Arweave. The data is shared according to specific rules and uploaded to Arweave after sharding. The data shards are maintained through a Manifest and the query index is provided by the Scheduler.

The structure of the Manifest is as follows:

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/da-2.png)

The data within the shards is stored in the form of a Changelog. The contents of the Changelog are as follows:

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/da-3.png)

Storing data in the Changelog format has the following advantages:

1. Elegantly solves the Reorg issue in blockchain data.
2. Data is written in an Append Only manner, eliminating the need to handle conflicts, allowing for optimal data freshness.
3. The downstream CVM can continuously read upstream data in a streaming manner then process it. While benefiting from the compounding effect of upstream data, the downstream data also maintains good data freshness.

## Proof of Raw Data

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/da-4.png)

Chainbase Network uses Zero-Knowledge Proof(ZKP) technology to prove the source and integrity of the data. Any network user can verify the source and validity of the data based on the ZKP.

The network’s raw data comes from decentralized Data Providers. These Data Providers obtain data from different Web3 RPC service nodes and use consensus algorithms to determine the final data results, thereby preventing any single data provider from supplying incorrect or malicious data.

Chainbase Network also establishes an SLA(Service Level Agreement) that Data Providers must adhere to regarding data quality and service standards. If Data Providers violate the corresponding SLA, they may face penalties.

## Proof of Indexed Data

Indexed Data is verified using SCP(Storaged-Based Consensus Paradigm).

The basic principles are as follows:

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/da-5.png)

All verified Raw Data is immutably and persistently stored on Arweave. Manuscript is a data processing script written in programming languages such as Python, Javascript, Rust, and SQL, which are consensus already taken in the physical world. These data processing scripts will remain open-source, allowing any Validator to verify the generated Indexed Data based on Raw Data and Manuscript, thus achieving consensus on Indexed Data in a simple and effective manner

# Summary

In summary, Chainbase Network stands out by leveraging advanced technologies like Zero-Knowledge Proof(ZKP) and a Storage-Based Consensus Paradigm(SCP) to ensure data integrity and reliability. With decentralized and immutable storage on Arweave, and Manuscript for data processing, Chainbase Network offers robust data verification, seamless data services, and unparalleled data freshness.

This decentralized data lakehouse establishes Chainbase Network as a leader in secure and efficient data management.


# Execution Layer
Source: https://docs.chainbase.com/core-concepts/architecture/execution_layer



# **Introduction**

### **Background Information**

With the rapid development of blockchain technology, the demand for scaled applications is increasing. To enhance performance and throughput, blockchain projects need to handle large amounts of data. This need is not only driven by technological development, but also to create user-friendly, value-driven applications, as proven by data-driven internet applications. Furthermore, the core belief of blockchain technology—decentralization—requires us to maintain system decentralization and security while improving performance. Therefore, designing an efficient parallel computation execution layer is especially important.

# **Features of the Execution Layer**

### **Parallelization**

Parallelization is one of the core features of the execution layer, including data parallelism and task parallelism:

* **Data Parallelism**: Data parallelism involves dividing a large dataset into smaller data chunks and processing them in parallel on multiple threads, significantly speeding up data processing.
* **Task Parallelism**: Task parallelism involves breaking down computational tasks into independent subtasks that are executed in parallel. This approach is suitable for complex computational tasks that can be processed in parallel, improving the system's computational capabilities and efficiency.

Through data parallelism and task parallelism, the execution layer can handle large-scale data, enhancing overall performance and throughput.

### **On-chain Database**

The next-generation on-chain database, Chainbase DB (CDB), optimizes data management and storage efficiency through state storage separation:

* **State Storage Separation**: State storage separation is a method of separating the latest state and historical data storage. This design significantly improves data access performance and reduces state bloat problems.
* **Efficient State Management**: Through state storage separation, the system can manage and access state data more efficiently, reducing bottlenecks in data access during computation and enhancing overall performance.

The optimization of the on-chain database enables the execution layer to efficiently process and store large amounts of data, providing a solid foundation for parallel computing.

### **Decentralized Environment Based on Eigenlayer AVS**

The introduction of Eigenlayer is aimed at enhancing the system's decentralization and security:

* **Decentralized Verification**: Eigenlayer provides a decentralized verification mechanism, introducing Ethereum economic incentives through Restake to ensure system security and reliability.
* **Economic Security**: By utilizing Ethereum economic security, Eigenlayer ensures high security in a decentralized environment, preventing malicious attacks and tampering.

The introduction of Eigenlayer not only enhances the system's decentralization feature but also provides additional economic security, balancing high performance and high security in the execution layer.

### **Programmable Runtime Environment**

The Manuscripts runtime environment is designed specifically for the execution of data processing computational logic, providing efficient, flexible execution support:

* **Virtual Machine Environment**: The execution layer provides an efficient virtual machine environment through the Chainbase Virtual Machine (CVM) specifically designed for executing Manuscripts. CVM supports multithreaded parallel processing, enhancing computational performance and throughput.
* **Computational Logic Execution**: The CVM environment allows developers to write and execute complex data processing logic, supporting various data transformation and processing tasks, and enhancing data processing efficiency.
* **Flexibility and Scalability**: CVM provides a flexible development environment and good scalability, supporting various programming languages and frameworks, enabling developers to easily create and deploy data processing logic.

By providing a powerful computational logic execution environment, the execution layer provides developers with an efficient, flexible platform that supports complex data processing tasks and application scenarios.


# Overview
Source: https://docs.chainbase.com/core-concepts/architecture/overview



# **Architecture**

<img className="block" src="https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/overview.png" alt="overview" />

# Module Introduction

### **Data Accessibility Layer**

[Data Accessibility Layer](/core-concepts/architecture/data_accessibility_layer) manages data access and storage in the network, is compatible with data access interfaces for both streaming and batch scenarios, and provides data validity verification. It includes:

* **Data Access Interface:** Provides access to both batch and streaming data.
* **Data Storage:** Supports various storage solutions, including Lakehouse, Arweave, S3, and IPFS.
* **Data Proof:** Implements zk-proofs and storage-based consensus paradigms to ensure data integrity and availability.

### **Consensus Layer**

[Consensus Layer](/core-concepts/architecture/consensus_layer) ensures that all nodes in the network reach a consensus on data and status consistency, based on CometBFT's instant finality, achieving second-level data freshness. Including:

* **Consensus Algorithm:** Based on CometBFT and DPoS (Delegated Proof of Stake) to achieve efficient and secure consensus.
* **ABCI++:** An extension of Cosmos network's ABI, responsible for converting the state of the Chainbase Virtual Machine (CVM) to a format compatible with the CometBFT consensus engine.
* **Stake Aggregator:** Aggregates staked tokens from various Cosmos ecosystem sources to ensure network security.

### **Execution Layer**

[Execution Layer](/core-concepts/architecture/execution_layer) is responsible for large-scale data processing and execution of Manuscripts' data transformation logic. Including:

* **Chainbase Virtual Machine (CVM):** A virtual machine that provides parallel computing capabilities to execute Manuscripts
  * **Parallel Execution Engine:** Utilizes multithreading for parallel data processing, enhancing performance and throughput.
  * **ChainbaseDB (CDB):** A database system that supports multiple data storage engines, including VectorDB, GraphDB, and KV storage.
* **Eigenlayer AVS (Proof Verification System):** Introducing the Ethereum economic security brought by Restake, making the CVM running environment fully decentralized

### **Co-processor Layer**

Chainbase has introduced the [Co-processor Layer](/core-concepts/architecture/co_processor_layer) to facilitate user collaboration in data processing and AI expertise. This layer allows users to transform their specialized knowledge into tradeable assets, managed and incentivized through the \$C token system, creating a dynamic ecosystem. This design enhances data accessibility and encourages developer collaboration, accumulating knowledge and generating collective intelligence, thereby unlocking greater potential for blockchain technology.

### **Dual Staked Security**

This module enhances the network security of the consensus layer and execution layer in the dual-chain architecture through a double staked mechanism. Including:

* Shared Staked Pool:
  * Native Token Stake: \$C native token captures network value
  * Eigenlayer Restake: Introduces Ethereum tokens with low volatility and deep liquidity
* Double Staked Model: By aggregating all validators' stake and their power mapping for various assets, the total cryptographic economic security is calculated.

### Manuscript

[Manuscript](/core-concepts/manuscript/overview) defines the standard schema that different data sources need to follow when converting into datasets.

### CVM Interface

The CVM Interface provides a set of standardized interface protocols for interacting and communicating with CVM, allowing developers to write and manage Manuscripts on the network, as well as access Dataset in the data network.


# Chainbase Network AVS Design
Source: https://docs.chainbase.com/core-concepts/avs-design



## **Overview**

EigenLayer's AVS is a cornerstone of its high-performance execution layer. Details to be specified [here](/core-concepts/data-processing-based-on-avs).

## **Integration with EigenLayer Core (AVS Directory)**

To integrate with EigenLayer Core, Chainbase Network implements an instance of ECDSAServiceManagerBase or ServiceManagerBase (BLS). This integration allows operators to register by sending transactions to the AvsServiceManager, completing the registration process
![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/avs-design-01.png)

## **On-Chain Verification Challenges**

Chainbase Network requires a stable and efficient group of operators to form a decentralized and trusted data processing network. The Coordinator component needs a mechanism to measure the operational quality of these operators, ensuring they meet the network's standards. This is achieved through an on-chain consensus game involving slashing for non-compliance.

The Coordinator periodically generates a challenge task, which involves calculating the block hash of a specific block within the blockchain data integrated into Chainbase Network. This task has a clear answer and expected outcome. The challenge is sent to operators' manuscript-node nodes, where they execute the task and return the signed result along with the recorded task execution time. This information is used to evaluate the operators' efficiency, and the results are verified on the AVS chain.
![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/avs-design-02.png)

## **Implementation Details**

**Coordinator:**

1. Listens to the on-chain contract `ChainbaseServiceManager` events.
2. Sends tasks to `Manuscript Node` via an RPC interface.
3. Receives task responses from `Manuscript Node` via the RPC interface.
4. Aggregates responses from multiple `Manuscript Nodes` and submits the results to the on-chain contract `ChainbaseServiceManager`.

**Manuscript Node:**

1. Registers the operator by calling `RegisteryCoordinator`.
2. Receives tasks from the Coordinator via the RPC interface.
3. Executes tasks, signs the task response.
4. Sends the signed task response back to the Coordinator.

**Contracts:**

1. The `ChainbaseServiceManager` contract includes functions for `createNewTask` and `respondToTask`, facilitating the creation of tasks and the submission of task responses for verification.


# Data Processing Based on AVS
Source: https://docs.chainbase.com/core-concepts/data-processing-based-on-avs



## **Overview**

Chainbase Network is an omnichain data network powered by a [dual-chain](/core-concepts/dual-chain) architecture using Cosmos and EigenLayer, enabling trustworthy and transparent on-chain data processing. Through the [Manuscript protocol](/core-concepts/manuscript) on the Chainbase Virtual Machine (CVM), the network ensures seamless data interoperability. By integrating [EigenLayer’s](https://www.eigenlayer.xyz/) staking mechanism, Chainbase leverages Ethereum's economic security to build a high-performance AVS for its [Execution Layer](/core-concepts/architecture/execution_layer). This ensures large-scale data processing while maintaining security, decentralization, and scalability, supporting the growing demands of blockchain applications.

## Execution layer node based on AVS

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/data-processing-based-on-avs.png)

The execution layer nodes of Chainbase Network are built on EigenLayer, providing users with a node network for on-chain data processing. Developers can submit Manuscript data processing programs and request the final result dataset. EigenLayer operators with computational resources can restake and register as execution layer nodes of Chainbase Network, providing the required computing resources. As Chainbase Network integrates data query fees, restakers will generate income from it.

As more and more Manuscripts run on Chainbase Network, more high-quality computing resources are needed. To achieve elastic scaling of resources while maintaining high throughput, on-chain computing tasks need to be routed to the best provider according to the running preferences of Manuscript. Key factors include node geographic location (latency), computing hardware, and network environment. EigenLayer will support Chainbase Network through diversified operators and routing strategies to meet these needs.

### **Summary**

Chainbase Network is a full-chain data network supported by the dual-chain architecture of Cosmos and EigenLayer, aiming to provide a trustworthy and transparent data processing environment. To achieve interoperability, the Manuscript protocol was developed and runs on the Chainbase Virtual Machine (CVM), designed for large-scale data processing.

By combining EigenLayer's staking mechanism, Chainbase Network enhances economic and safety guarantees and builds a high-performance execution layer. EigenLayer operators can register as nodes of Chainbase Network, provide computing resources, and profit through integrated data query fees.

With the increase of Manuscript operations, the system needs more high-quality computing resources, and EigenLayer provides diversified operators and routing strategies to support this demand.


# Dual-Chain
Source: https://docs.chainbase.com/core-concepts/dual-chain



### Consensus Layer + Execution Layer

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/dual-chain-1.png)

Chainbase introduces an innovative dual-chain architecture that enhances the programmability and composability of cross-chain data, supporting high throughput, low latency, and finality. This architecture achieves higher network security through a dual staking model.

#### What Does the Dual-Chain Architecture Bring?

1. **Performance Optimization**: As the largest distributed data engine of the future, it needs to support high-throughput data processing. The CVM in the Execution Layer supports parallel computing capabilities, while the Consensus Layer utilizes CometBFT optimized for performance.
2. **Programmability**: Manuscripts define the standard schema that different data sources need to follow when converting into datasets. The redesigned Execution Layer provides a runtime environment for these Manuscripts.
3. **Composability**: The redesigned Execution Layer can handle data streams from multiple sources for joint processing. For example, aggregating data sources from various chain lending protocols can create a universal lending rate.
4. **Enhanced Crypto-Economic Security**: Traditional public chain projects often compromise security to optimize performance and compatibility. By introducing the dual-chain architecture of Eigenlayer and Cosmos, Chainbase incorporates a dual staking model, ensuring game-theoretic security for the omnichain data network.

#### Consensus Layer

The Consensus Layer ensures data and state consistency among all nodes in the network. Its main advantages include:

* **Instant Finality**: Using CometBFT, once data is processed and included in a block, it is considered final visible data without the need for additional confirmations or data reorganization.
* **Proven Robustness**: CometBFT is battle-tested and has successfully protected billions of dollars across various blockchain networks, proving its robustness and reliability.

#### Execution Layer

The Execution Layer excels in large-scale data processing and complex data transformation tasks. Its main advantages include:

* **Parallelization**: Through data parallelism and task parallelism, the Execution Layer can handle large-scale data, enhancing overall performance and throughput.
* **Decentralized Environment Based on Eigenlayer AVS**: The introduction of Eigenlayer not only enhances the system's decentralization but also provides additional economic security, balancing high performance and high security in the Execution Layer.
* **Programmable Runtime Environment**: By providing a powerful computational logic execution environment, the Execution Layer offers developers an efficient and flexible platform that supports complex data processing tasks and application scenarios.

### Conclusion

Through its innovative dual-chain architecture, Chainbase successfully combines the advantages of the Consensus Layer and the Execution Layer to achieve high performance, low latency, and finality. This architecture not only enhances the network's programmability and composability but also provides higher economic security through a dual staking model. With instant transaction finality and proven robustness, Chainbase sets new standards in blockchain performance and interoperability, providing a solid foundation for data processing and applications in the AI era.


# Dual-Staking
Source: https://docs.chainbase.com/core-concepts/dual-staking



# Why dual staking?

* Early PoS (Proof of Stake) networks can face a "death spiral" problem. If the token's value decreases, it weakens the network's security, leading to a decline in Total Value Locked (TVL), which further depresses the token price, thus creating a death spiral.

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/dual-staking-1.png)
capture:[https://www.blog.eigenlayer.xyz](https://www.blog.eigenlayer.xyz)

# How it works

Protect the same PoS network using two tokens, one of which can be a low-volatility, deep-liquidity, more accessible external network token such as Ethereum (ETH). Also use network native tokens to capture network value

# Different method

**Modular Dual Staking**: Local operators and ETH-backed operators are required to reach a quorum respectively.

**Native Dual Staking**: Similar to mesh security, two sets of operators are treated as one, each operator's stake is converted into unified units based on an external oracle, and the user then validates the response based on the combined quorum.

**Veto Dual Staking**: The local operator is first individually quorate and the ETH-backed operator acts as a safeguard to check the behavior of the local operator. If the local operator makes a mistake, the ETH-supported operator has the right to veto a valid response sent by them.

### Impl architecture

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/dual-staking-2.png)

1. support LST && native token stake

for supported LST please check:[https://app.eigenlayer.xyz/restake](https://app.eigenlayer.xyz/restake)

\$C is our native token, for more detail TBD

2. how to manage stake token

* for LST part, staker first stake to operator then operator register  to our AVS. offline relayer watch && sync avs’s operator stake & delegations(eg.`sync(CainbaseAVS.Operator[] calldata operators`)) info with cosmos part(maybe call xxx chain ?)
* For the \$C part, stakers interact with erc20-stake contract to emit a `Stake(bytes operator_pubkey, uint256 amount)` event. The relayer then watches for this event and syncs the information with the Cosmos part.
* We choose the Native Dual Staking model where an oracle ensures fair price conversion of both `$LST` and `$C` into `$C-Stake` units.

# **Reference**

* [Eigenlayer:Dual Staking: secure a PoS network with two tokens](https://www.blog.eigenlayer.xyz/dual-staking/)
* [osmosis-labs:Mesh Security Architecture](https://github.com/osmosis-labs/mesh-security/blob/main/docs/README.md)
* [dual staking and Espresso](https://youtu.be/o9y_pZUr0Nc?t=1727)
* [You Could've Invented EigenLayer | Kydo 0x - Eigen Labs](https://youtu.be/fCl_PucMytU?si=afSo2MK5oWJPeE69)


# Glossary
Source: https://docs.chainbase.com/core-concepts/glossary



## Common Terms

* ⚗️**Alchemist** - a developer or technical contributor who creates, manipulates, or alters manuscripts.
* 📜**Manuscript** - an executable that runs on the Chainbase Virtual Machine (CVM). Manuscripts define the standard schema that different data sources need to follow when converting into datasets.
* ⚙️**Chainbase Virtual Machine (CVM)** - a virtual execution environment, complete with interface, that allows for the execution of sophisticated data queries.
* 💾**Data Set -** a structured collection of aggregated, validated, and indexed data comprised of data tables and stored in the Chainbase Warehouse.
* 🏭**Chainbase Warehouse** - a storeplace for all pre-built datasets on the Data Platform.
* 💽**Data Network** - the intersection of CVM/Eigenlayer AVS (execution), IBC, ABCI++, and CometBFT (consensus),  with a proprietary Data Availability Layer composed of roll ups/network participants.
* 💿**Data Platform** - the suite of developer tools which allow streamlined access to information available on the Data Network.
* 🤖**TheiaChat** - an AI agent, based on Theia, offering streamlined access point to the data network with built-in knowledge bases.
* 🗺️**Theia** - the proprietary Crypto World Model which uses causal reasoning on crypto patterns to create verifiable reasoning chains on crypto data.


# 4. Advanced Options
Source: https://docs.chainbase.com/core-concepts/manuscript/QuickStart/advanced_options



# Overview

The datasets in the Chainbase Network is like base metals, and the alchemists (developers) can use Manuscripts to process this data, extracting greater value from the existing data.

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts_overview.png)

# Protocol

Chainbase Network is committed to making data (on-chain & off-chain) more accessible, so Manuscripts allow users and developers to query and process data using SQL.

Manuscripts mainly consist of two parts.

* Schema: The definition of dataset.
* Operators: The extract, transform, and load methods which being used to extract greater value from the existing data.

## Schema

Schema can be defined like this.

```sql
CREATE TABLE ethereum.blocks (
    block_number bigint NOT NULL COMMENT 'Block number uniquely identifying the block',
    hash varchar(66) NOT NULL COMMENT 'Hash value representing the unique identity of the block(with bloom filter)',
    parent_hash varchar(66) NOT NULL COMMENT 'Hash value of the parent block(with bloom filter)',
    nonce varchar(78) COMMENT 'Nonce value associated with the block',
    sha3_uncles varchar(66) NOT NULL COMMENT 'SHA3 hash of the blocks uncle data(with bloom filter)',
    logs_bloom varchar COMMENT 'Logs bloom filter for events emitted in transactions',
    transactions_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for transactions(with bloom filter)',
    state_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for the state(with bloom filter)',
    receipts_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for receipts(with bloom filter)',
    miner varchar(42) NOT NULL COMMENT 'Address of the miner who mined the block(with bloom filter)',
    difficulty varchar(78) NOT NULL COMMENT 'Difficulty value representing the mining difficulty',
    total_difficulty varchar(78) COMMENT 'Total accumulated difficulty of the blockchain',
    size bigint COMMENT 'Size of the block in bytes',
    extra_data varchar NOT NULL COMMENT 'Extra data included in the block',
    gas_limit varchar(78) COMMENT 'Maximum gas limit allowed for transactions in the block',
    gas_used varchar(78) COMMENT 'Total gas used by transactions in the block',
    block_timestamp timestamp(3) NOT NULL COMMENT 'Timestamp of when the block was mined',
    transaction_count bigint COMMENT 'Number of transactions included in the block',
    base_fee_per_gas varchar(78) COMMENT 'Base fee per gas unit for transactions in the block',
    withdrawals_root varchar(66) COMMENT 'Root hash of the Merkle Patricia Trie for withdrawals',
    parent_beacon_block_root varchar COMMENT 'The hash tree root of the parent beacon block for the given execution block',
    excess_blob_gas bigint COMMENT 'The blob gas pricing.',
    blob_gas_used bigint COMMENT 'The total amount of blob gas consumed by transactions in the block'
);
```

Developers need to define the schema of the result table, including field names, field types, and field descriptions.

## Data Types

| Data Type       | Remarks for Data Type               |
| --------------- | ----------------------------------- |
| `CHAR`          |                                     |
| `VARCHAR`       |                                     |
| `STRING`        |                                     |
| `BOOLEAN`       |                                     |
| `BINARY`        |                                     |
| `VARBINARY`     |                                     |
| `BYTES`         |                                     |
| `DECIMAL`       | Supports fixed precision and scale. |
| `TINYINT`       |                                     |
| `SMALLINT`      |                                     |
| `INTEGER`       |                                     |
| `BIGINT`        |                                     |
| `FLOAT`         |                                     |
| `DOUBLE`        |                                     |
| `DATE`          |                                     |
| `TIMESTAMP`     |                                     |
| `TIMESTAMP_LTZ` |                                     |

## Operators

### SELECT & WHERE clause

The general syntax of the `SELECT` statement is:

```sql
select select_list from table_expression [where boolean_expression]
```

The `table_expression` refers to any data set in Chainbase Network. It could be an existing table, or VALUES clause, the joined results of multiple existing tables, or a subquery. The following would read all rows from `blocks`.

```sql
select * from blocks;
```

The `select_list` specification `*` means the query will resolve all columns.

Instead, a `select_list` can specify a subset of available columns or make calculations using said columns. For example, if `token_transfers` has columns name `token_id`, `token_value` and `token_decimal` you could write the following query:

```sql
select token_id, token_value / token_decimal from token_transfers;
```

Rows can be filtered based on a `WHERE` clause:

```sql
select * from ethereum.blocks where block_number = 19938860;
```

### ORDER BY clause

The `ORDER BY` clause causes the result rows to be sorted according to the specified expression(s). If two rows are equal according to the leftmost expression, they are compared according to the next expression and so on. If they are equal according to all specified expressions, they are returned in an implementation-dependent order.

```sql
select * from blocks order by block_timestamp, block_number;
```

### LIMIT clause

`LIMIT` clause constrains the number of rows returned by the `SELECT` statement. In general, this clause is used in conjunction with `ORDER BY` to ensure that the results are deterministic.

The following example selects the latest 10 blocks on blocks table.

```sql
select * from blocks order by block_timestamp limit 10;
```

### SELECT DISTINCT

If `SELECT DISTINCT` is specified, all duplicate rows are removed from the result set (one row is kept from each group of duplicates).

```sql
select distinct contract_address from token_transfer;
```

### Group Aggregation

An aggregate function computes a single result from multiple input rows. For example, there are aggregates to compute the `COUNT`, `SUM`, `AVG(average)`, `MAX(maximum)` and `MIN(minimum)` over a set of rows.

```sql
select count(1) from blocks
```

The standard `GROUP BY` clause is also supported for aggregating data.

```sql
select count(*) from token_transfer group by contract_address
```

### Joins

INNER Equi-JOIN:

```sql
select *
	, token_metas.token_decimal
from token_transfer
inner join token_metas
on token_transfer.contract_address = token_metas.contract_address
```

OUTER Equi-JOIN:

```sql
select *
	, token_metas.token_decimal
from token_transfer
left join token_metas
on token_transfer.contract_address = token_metas.contract_address
```

### INSERT Statement

`INSERT` statements are used to add rows to a dataset.

Syntax:

```sql
insert into table_name select_statement
```

Examples:

```sql
create table latest_10_blocks (
	  block_number bigint NOT NULL COMMENT 'Block number uniquely identifying the block',
    hash varchar(66) NOT NULL COMMENT 'Hash value representing the unique identity of the block(with bloom filter)',
    parent_hash varchar(66) NOT NULL COMMENT 'Hash value of the parent block(with bloom filter)',
    nonce varchar(78) COMMENT 'Nonce value associated with the block',
    sha3_uncles varchar(66) NOT NULL COMMENT 'SHA3 hash of the blocks uncle data(with bloom filter)',
    logs_bloom varchar COMMENT 'Logs bloom filter for events emitted in transactions',
    transactions_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for transactions(with bloom filter)',
    state_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for the state(with bloom filter)',
    receipts_root varchar(66) NOT NULL COMMENT 'Root hash of the Merkle Patricia Trie for receipts(with bloom filter)',
    miner varchar(42) NOT NULL COMMENT 'Address of the miner who mined the block(with bloom filter)',
    difficulty varchar(78) NOT NULL COMMENT 'Difficulty value representing the mining difficulty',
    total_difficulty varchar(78) COMMENT 'Total accumulated difficulty of the blockchain',
    size bigint COMMENT 'Size of the block in bytes',
    extra_data varchar NOT NULL COMMENT 'Extra data included in the block',
    gas_limit varchar(78) COMMENT 'Maximum gas limit allowed for transactions in the block',
    gas_used varchar(78) COMMENT 'Total gas used by transactions in the block',
    block_timestamp timestamp(3) NOT NULL COMMENT 'Timestamp of when the block was mined',
    transaction_count bigint COMMENT 'Number of transactions included in the block',
    base_fee_per_gas varchar(78) COMMENT 'Base fee per gas unit for transactions in the block',
    withdrawals_root varchar(66) COMMENT 'Root hash of the Merkle Patricia Trie for withdrawals',
    parent_beacon_block_root varchar COMMENT 'The hash tree root of the parent beacon block for the given execution block',
    excess_blob_gas bigint COMMENT 'The blob gas pricing.',
    blob_gas_used bigint COMMENT 'The total amount of blob gas consumed by transactions in the block'
);

insert into latest_10_blocks
select * from blocks order by block_number desc limit 10;
```

## GPL

For experienced alchemists, a General-perpose Programming Language (GPL), such as Python or JavaScript, can be used to extract and process data. GPL will provides the most flexible and powerful data extraction capabilities

**Coming Soon…**


# 2. Create a manuscript
Source: https://docs.chainbase.com/core-concepts/manuscript/QuickStart/create_manuscript



## 1. 🏄🏼 Getting Started

Great news! You’ve decided to create your first Manuscript. 🎉<br />

To make it easier for developers to get started with Manuscript, we've introduced a [GUI](https://github.com/chainbase-labs/manuscript-core) tool.<br />
Built on top of the existing CLI, this tool provides intuitive graphical interfaces to explore the extensive blockchain data available on the Chainbase network.<br />

After installing the GUI tool, you can run the binary file locally straight away.<br />

```
➜  ~ ./manuscript
```

## 2. 🚴🏼‍♂️ Selecting Data

Once the tool has loaded, you’ll be greeted with the GUI interface shown below.<br />
The left-hand panel allows you to select your desired blockchain.
![manuscript\_gui.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_gui.png)

The Chainbase network’s DA layer data is displayed here, and over time, even more valuable datasets will be added. It’s worth noting that much of this data has been developed using Manuscript.
You’re encouraged to create your own datasets or share your data requirements and suggestions with the community.

## 3. 🤽🏼 Choosing Table

A dataset refers to either a raw data table or an abstract table.<br />
![manuscript\_datasets.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_datasets.png)

## 4. 🏊🏼‍♂️ Creating a Manuscript

You can use the `c` shortcut key to create your Manuscript YAML file.
![manuscript\_yaml.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_yaml.png)

* **Data Sources**<br />
  Here, you’ll define your data source, which can include various options. In this demonstration, we’ve used the DA layer from Chainbase, though custom RPC endpoints and other sources are equally supported.

* **Data Transformation**<br />
  For data transformations, this demonstration uses SQL queries, a familiar and widely-used method. The tool is compatible with standard SQL syntax as well as popular Flink SQL functions.

* **Data Slink**<br />
  In this example, the data is exported to a local PostgreSQL database, complete with support for GraphQL queries.

## 5. 🚣🏼‍♂️ Debugging and Deployment

![manuscript\_debug\_01.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_debug_01.png)
![manuscript\_debug\_02.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_debug_02.png)
Once you’ve finished editing, you can run the debug environment to verify that the Manuscript works as expected and outputs the required format.<br />
After confirming the results, you’ll be able to deploy the Manuscript locally or to the Chainbase network.

Congratulations! You’ve successfully created your first Manuscript. 🚀🚀


# 1. Install GUI
Source: https://docs.chainbase.com/core-concepts/manuscript/QuickStart/prerequisites



# 1. Mansucript GUI Installation

Download GUI binary for latest release, run:

```
curl -fsSL  https://github.com/chainbase-labs/manuscript-core/raw/main/install-gui.sh | bash
```

# 2. Mansucript Requirements

### Docker

Ensure that Docker is properly installed and functional on your system, as it is essential for the Manuscript environment setup. Docker enables deployment and management of isolated containers required by Manuscript's ecosystem. For detailed installation instructions, please refer to the [Docker documentation](https://docs.docker.com/get-started/get-docker/).

### Docker Compose

Alongside Docker, Docker Compose is required and should be correctly installed and configured. Docker Compose enables the orchestration of multi-container applications, making it easier to deploy and manage Manuscript's dependencies. For setup guidance, refer to the [Docker Compose documentation](https://docs.docker.com/compose/install/).

### Linux Environment

Manuscript is designed for compatibility with Linux environments only. Ensure that you have access to a Linux-compatible system, such as macOS, CentOS, or Fedora. either directly or through a Linux-based container setup in Docker, to proceed with the installation and operation of Manuscript.

# 3. Checking for Requirements

On a native Linux system, you can use the `uname -a` command to obtain information about your Linux distribution.

If you are not using a native Linux system and need a Linux environment through Docker, you can check if Docker is installed by following these steps:

1.Open a terminal or command prompt.

2.Run the following command to verify that Docker is installed and operational:

```
docker --version
docker compose version
```


# 3. Run a manuscript
Source: https://docs.chainbase.com/core-concepts/manuscript/QuickStart/run_manuscript



## Deploy Target

### 1. 📗 Local

You can use our GUI tool to quickly deploy Manuscript locally.
![manuscript\_deploy.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_deploy.png)

### 2. 📚 Network

We are about to launch the Chainbase network Manuscript environment, allowing users to deploy Manuscript directly to the Chainbase network.

## Deployment Options

There are three ways to deploy your Manuscript:

### 1. 🚗 Using the GUI Tool

Edit and deploy your Manuscript directly within the GUI. This is the most straightforward and efficient method.

### 2. 🚌 Using Docker Compose

Copy the docker-compose file from the [Manuscript-Core](https://github.com/chainbase-labs/manuscript-core/tree/main/examples) repository to deploy it locally.

### 3. 🚅 Using Manuscript-Lib (Coming Soon)

Deploy your Manuscript with a single click through the Manuscript-Lib browser.


# null
Source: https://docs.chainbase.com/core-concepts/manuscript/overview



# Manuscript

![manuscript\_github.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/manuscript_github.png)
<Check>👉👉 [https://github.com/chainbase-labs/manuscript-core](https://github.com/chainbase-labs/manuscript-core)</Check>

# What is Manuscript?

Manuscript is a revolutionary blockchain data streaming framework. With Manuscript, you can seamlessly integrate on-chain and off-chain data into target data storage for unrestricted querying and analysis.

# Vision of Manuscript

![manuscript\_01.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscript_01.png)

The vision of Manuscript is to realize "data trade" within the Chainbase network, establishing a Chainbase ecosystem component that allows users to access any data through any means, across any service, using any language. This grand vision can be broken down into the following key aspects:

* Any language: We hope users can use scripts in any mainstream programming language to customize data, including but not limited to: Golang, Rust, Python, Node.js, Java, C/C++, Zig, WebAssembly (WASM)
* Any method: Different users are familiar with different forms of data access, we hope users can access data through various means, including but not limited to: SQL, DataFrames, HTTPS, gRPC, FTP, WebDAV, FUSE
* Any data: Users should be able to access data in any format, such as: JSON, CSV, ORC, XML, XLSX, BLOB
* Across any service: Users' expected data storage services also vary, we hope users can access, transfer, and control data in any service, such as: RPC, S3, IPFS, Azblob, HDFS, Google Drive, BigQuery, WebDAV, MySQL, PostgreSQL

In the Chainbase ecosystem, on-chain data can be tagged, categorized, and processed, transforming complex data into easily understandable and usable forms. Artificial intelligence algorithms can automatically analyze massive blockchain data, discovering hidden patterns, trends, and anomalies, helping users gain insights from the data. Manuscript provides rich tools and resources for this process, making data processing more efficient and transparent. Through these technical means, Manuscript not only makes access to on-chain data more free and flexible but also greatly enhances the value of data, allowing more people to easily use and apply this on-chain data.

# Value of Manuscript

1. Programmability:
   Manuscript provides powerful programmable interfaces that allow developers to customize data processing workflows according to their needs. This flexibility means that Manuscript can be used not only for simple data queries but also for building complex data analysis pipelines and applications. Through programmability, Manuscript opens up infinite possibilities for innovative applications of blockchain data.

2. Interoperability:
   With the booming development of blockchain technology, it's becoming increasingly difficult for different blockchains to understand and process each other's data. Manuscript can solve the interoperability problem of multi-chain and off-chain data aggregation in any dimension. By providing unified interfaces and data processing methods, Manuscript enables seamless integration of data from different blockchains, greatly improving the development efficiency and feasibility of cross-chain applications.

3. Monetization:
   Leveraging the data capabilities provided by Manuscript, combined with the dual-chain architecture CometBFT + DPoS high-performance instant transaction finality and proof-of-stake consensus features, Chainbase offers a fair and transparent data value exchange ecosystem. Creators can monetize their processed data through Manuscript, while data users can conveniently consume the data they need. This mechanism not only incentivizes the production of high-quality data but also promotes the positive development of the entire blockchain ecosystem.

# Design of Manuscript

As the data access layer in the Chainbase network, Manuscript needs to interface with a large number of existing data protocols. Its core design philosophy revolves around modularity and scalability, consisting of the following key components:

![manuscript\_02.png](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscript_02.png)

1. Accessor (Data Source):

* As the lowest-level interface, all services need to implement this interface, responsible for translating upper-layer calls into lower-level requests
* For example, translating a read request into corresponding service API calls
* Provides a unified data access abstraction, shielding the differences in underlying storage and services

2. Processor (Data Method):

* High-level methods oriented towards users, allowing them to conveniently create read and write requests
* Provides operations such as SQL syntax, initializing Datasets, etc.
* Encapsulates complex data interoperation underlying logic, providing a concise user interface

3. Handler (Data Target):

* Handles specific read and write requests, manages the lifecycle of data objects, implements data serialization and deserialization
* Deals with data consistency and concurrency issues
* For example, writing user-processed data to local relational databases like MySQL, PostgreSQL, etc.

4. Signer (Proof of Stake):

* Allows users to pre-generate signed URLs, supporting temporary authorized access, enhancing the security of data access
* Implements permission management and stake allocation proof interfaces based on smart contracts

# Manuscript Community

The Chainbase Network provides an open, trustless, and permissionless data ecosystem network, encouraging data democratization and monetization, where both users and data providers can participate without authorization from any governing body. Through Manuscript, participants can produce high-quality data and profit from it.

The success and development of Manuscript rely on active community support. It is not an isolated service, but an open ecosystem. Only with the power of the community can Manuscript fully realize its potential and achieve flourishing development. We encourage community members to:

* Contribute new Accessor implementations to support more data sources and services
* Develop innovative data and applications based on Manuscript
* Participate in documentation writing and tutorial creation to help more people understand and use Manuscript
* Propose improvement suggestions and report issues to drive the continuous improvement of Manuscript
* Organize online and offline exchange activities to share user experiences and best practices

Through the power of the community, we believe Manuscript will become an important data component in the Chainbase data world, bringing more innovation and value to the entire industry.


# Manuscript Zone
Source: https://docs.chainbase.com/core-concepts/manuscript/zone



## Overview

![](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/manuscripts/zone.png)

A Chainbase Zone is a specialized data processing domain within the Manuscript framework that focuses on parsing and analyzing blockchain data for specific sectors or use cases. Zones are collections of Manuscript implementations that work together to provide comprehensive data solutions for particular blockchain domains.

Zones in Chainbase provide several key capabilities:

1. **Data Specialization**: Focus on specific blockchain domains (DeFi, NFTs, Gaming, etc.)
2. **Custom Processing**: Define specialized data processing workflows for your domain
3. **Interoperability**: Connect with multiple data sources and output formats
4. **Monetization**: Earn rewards by providing valuable processed data to the network

## Zone Roles and Workflow

The Chainbase Zone ecosystem consists of multiple key roles that work together to ensure efficient and high-quality data processing.

### Core Roles

1. Zone Owner

* Responsible for creating and managing domain-specific data processing scenarios
* Defines the business scope and technical specifications of the Zone
* Reviews and updates Manuscripts within the Zone
* Manages the Zone's economic model and reward mechanisms

2. Alchemist (Developer)

* Develops Manuscripts based on Zone specifications
* Implements and optimizes data processing logic
* Provides technical support and maintenance
* Participates in Zone technical upgrade discussions

3. Operator

* Selects and runs specific Zones
* Provides computational resources and infrastructure support
* Ensures stable operation of all Manuscripts within the Zone
* Monitors system performance and handles exceptions

## Workflow Process

```mermaid
flowchart LR
    subgraph Zone Creation Flow
        direction LR
        ZoneOwner((Zone Owner)) --> ZoneCreation[Create Scenario]
        ZoneCreation --> Specs[Define Specs]
        Specs --> Alchemist((Alchemist))
        Alchemist --> Manuscript[Deploy]
        Manuscript --> Review[Review]
        Review --> Update[Update]
        Update --> Operator((Operator))
        Operator --> Operation[Run]
        Operation --> Reward[Distribute]
    end

    style ZoneOwner fill:#f96,stroke:#333
    style Alchemist fill:#9cf,stroke:#333
    style Operator fill:#9f9,stroke:#333
```

# Create a Chainbase Zone

## Recommended Flow for Deploying Your Zone

Before deploying your first zone on the mainnet, we strongly recommend following this order:

1. **Local Development**: Create and test your zone locally with sample data processing workflows
2. **Testnet Deployment**: Deploy your zone on Chainbase testnet to validate your data processing pipelines
3. **Mainnet Launch**: After thorough testing, deploy your zone on the Chainbase mainnet

## Prerequisites

To create a zone, ensure you have:

* Installed Chainbase Manuscript framework
* Created a emv wallet

## Creating a Local Zone

### Step 1. Set up Local Development Environment

```bash
# Install Manuscript core dependencies
git clone https://github.com/chainbase-labs/manuscript-core
cd manuscript-core
make install gui # or cli
```

### Step 2. Configure Zone (Coming soon..)

## Zone Lifecycle Management

### Performance Monitoring

Zones are evaluated based on:

* Data processing throughput
* Query response times
* Data accuracy and completeness
* Network utilization

### Deregistration

Poor-performing zones may be deregistered if they:

* Consistently fail to meet performance metrics
* Process invalid or corrupted data
* Violate network policies

## Best Practices

1. **Testing**: Thoroughly test your zone's data processing pipelines before mainnet deployment
2. **Documentation**: Maintain clear documentation for your zone's capabilities and usage
3. **Monitoring**: Implement robust monitoring for your zone's performance
4. **Updates**: Regularly update your zone's components to maintain compatibility and security

## Community Contribution

The success of Chainbase Zones depends on community participation. Contributors can:

* Develop new specialized zones for different blockchain sectors
* Improve existing zone implementations
* Share zone templates and best practices
* Participate in zone governance decisions

For more information about contributing to the Chainbase ecosystem, visit our [community guidelines](https://docs.chainbase.com/contributing/overview).


# Open APIs
Source: https://docs.chainbase.com/developers/open_apis



## Public Available RPC Endpoints

### Testnet

| **Address**                                                                                          | **Maintainer**                          |
| ---------------------------------------------------------------------------------------------------- | --------------------------------------- |
| [https://testnet.s.chainbase.com](https://testnet.s.chainbase.com)                                   | [Altlayer](https://www.altlayer.io/)    |
| [https://chainbase-testnet-public.s.chainbase.com](https://chainbase-testnet-public.s.chainbase.com) | [Chainbase](https://www.chainbase.com/) |
| [Sign up and start for free (Zan)](https://zan.top/home/node-service)                                | [Zan](https://zan.top/)                 |


# Co-processor Layer Testnet
Source: https://docs.chainbase.com/developers/testnet



## Overview

The [Co-processor Layer](/core-concepts/architecture/co_processor_layer) is building a community-driven collaborative layer for data developers, aimed at continuously unlocking and enhancing the value of crypto data. Built on the advanced [OP stack](https://docs.optimism.io/stack/getting-started) architecture and integrated with the innovative [Superchain](https://app.optimism.io/superchain/) ecosystem, it ensures efficient, scalable, and secure data processing and management.

## Info

| **Parameter**         | Value                                                                              |
| --------------------- | ---------------------------------------------------------------------------------- |
| **Network Name**      | Chainbase Network testnet                                                          |
| **Rollup Stack Type** | OP Stack                                                                           |
| **Settlement Layer**  | Sepolia Testnet                                                                    |
| **Chain ID**          | 2233                                                                               |
| **Currency Symbol**   | ETH                                                                                |
| **Explorer**          | [https://testnet.explorer.chainbase.com/](https://testnet.explorer.chainbase.com/) |
| **Bridge**            | [https://testnet.bridge.chainbase.com/](https://testnet.bridge.chainbase.com/)     |

## Guide

1. Add the Chainbase Network testnet to your wallet via the [Rollup Info Page](https://rollup-info.altlayer.io/enough-fog-compact/chainbase_testnet).
2. Bridge your Sepolia Testnet ETH to the Chainbase Network testnet using the [bridge interface](https://testnet.bridge.chainbase.com/).
   <Tip>**Note:** Get Sepolia Testnet ETH from [sepoliafaucet.com](https://sepoliafaucet.com/) or [sepoliafaucet.io](https://www.sepoliafaucet.io/).</Tip>
3. After initiating the deposit, wait about 1 minute for it to complete. Then, you can start deploying your contracts on the Chainbase Network testnet.


# Introducing Chainbase
Source: https://docs.chainbase.com/introduction/about



![introducing\_banner](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/introducing_banner.jpeg)

Chainbase is the world's largest **omnichain data network** designed to integrate all blockchain data into a unified ecosystem, providing an open and transparent data interoperability layer for the AI era.

It has designed a novel **dual-chain** technology architecture that bridges the programmability and composability of crypto data, which supports high throughput, low latency, and eventual determinism, as well as higher cybersecurity through a dual staking model.

Our mission is to **make data accessible and useful**. With Chainbase, people can truly enjoy the benefits of the open internet era.

# Learn

If you want to learn more, get started by diving into these concepts:

* [Network Overview](/introduction/networks/overview) - Get a quick overview of the Chainbase network in one panoramic view.
* [Core Concepts](/core-concepts/dual-chain) - Getting to know Chainbase from its dual-chain architecture.
* [Glossary](/core-concepts/glossary) - Some terms make it easy to understand the whole world.
* [Roadmap](/contributing/roadmap) - Introduce in detail how Chainbase achieves interoperability, security and sustainability.

# Use Cases

What can Chainbase be used for? Consider the following examples of potential applications that are now possible with Chainbase:

1. **Wallet**: Enables wallets to manage and view assets on multiple blockchains from a single interface, improving user convenience.

2. **Security**: Tracks attacks, provides security alerts, and performs in-depth security analysis to protect the blockchain network.

3. **AI**: Facilitates the deployment of AI models that use data from multiple blockchains, enhancing accuracy and decentralization.

4. **Social**: Builds social platforms where users from different blockchains can interact and share content seamlessly.

5. **Infrastructure**: Provides a robust infrastructure for building applications that utilize data from multiple blockchains.

6. **DeFi**: Enables DeFi platforms to support lending and borrowing across different blockchains, increasing liquidity and flexibility.

# Contributing

To learn about how to contribute to the network, including this documentation site, check out the [Contributing](/contributing/overview) section.


# FAQs
Source: https://docs.chainbase.com/introduction/faqs



## What are all the ways I can get involved?

* Use our [Data Platform](https://console.chainbase.com/register)
* Join our [Data Network](https://chainbase.mintlify.app/introduction/networks/overview)
* Use our AI Agent
* Write a [Manuscript](https://chainbase.mintlify.app/core-concepts/manuscript)
* Join our [Discord](https://chainbase.com/discord)

## When testnet? When mainnet? When token?

Soon! Be sure to follow us on [X](https://x.com/ChainbaseHQ) for latest updates.

## Is Chainbase open source?

Chainbase is in the process of open-sourcing all user-facing products and services; for the most up-to-date, you can take a look at our github repository here: [https://github.com/chainbase-labs](https://github.com/chainbase-labs)

## Will Chainbase work for smart contracts?

No! Chainbase does not execute contracts - it is specifically for making data accessible both on and off-chain. Rather than writing smart contracts, developers can execute sophisticated data processing using [manuscripts](https://chainbase.mintlify.app/core-concepts/manuscript#overview).

## Will I need to know Solidity to write manuscripts?

No! Most manuscripts are written in [SQL](https://chainbase.mintlify.app/core-concepts/manuscript#gpl). With [GPL](https://chainbase.mintlify.app/core-concepts/manuscript#gpl), you can write manuscripts in Typescript, Solidity, even Python.

## Who can I reach out to for more help?

For more help, Join our Discord or reach out to our DevRel, [KagemniKarimu](https://x.com/kagemnikarimu)


# Litepaper
Source: https://docs.chainbase.com/introduction/litepaper



<Tabs>
  <Tab title="English">
    <a href="https://github.com/chainbase-labs/chainbase-docs/blob/main/pdf/Chainbase_litepaper.pdf" target="_blank">
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/chainbase_litepaper.jpg" alt="English Litepaper" width="700" height="900" />
    </a>

    <p>
      <a href="https://raw.githubusercontent.com/chainbase-labs/chainbase-docs/refs/heads/main/pdf/Chainbase_litepaper.pdf" download="Chainbase_litepaper_en.pdf">
        Download: Chainbase: The Decentralized Omnichain Data Network for Open AGI Economy
      </a>
    </p>
  </Tab>

  <Tab title="한국어">
    <a href="https://github.com/chainbase-labs/chainbase-docs/blob/main/pdf/Chainbase_litepaper_KR.pdf" target="_blank">
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/chainbase_litepaper_kr.jpg" alt="Korean Litepaper" width="700" height="900" />
    </a>

    <p>
      <a href="https://raw.githubusercontent.com/chainbase-labs/chainbase-docs/refs/heads/main/pdf/Chainbase_litepaper_KR.pdf" download="Chainbase_litepaper_kr.pdf">
        다운로드: Chainbase: 오픈 AGI 경제를 위한 탈중앙화 옴니체인 데이터 네트워크
      </a>
    </p>
  </Tab>
</Tabs>


# Delegators
Source: https://docs.chainbase.com/introduction/networks/delegators



## Delegators

Delegators enhance the economic security of the network by staking their tokens to validators and operators. The Chainbase network uses a dual staking mechanism, where delegators can choose to stake `$ETH (or $LST)` and `$C`.

### Staking Tokens

Delegators can stake their tokens to support validators and operators, contributing to the network's security and stability.

1. **Choose Tokens**: Decide whether to stake `$ETH (or $LST)` or `$C`.
2. **Select Validators/Operators**: Choose the validators and operators you want to support.
3. **Stake Tokens**: Use the staking interface to delegate your tokens to the selected validators and operators.

### Earning Rewards

By staking tokens, delegators earn a share of the rewards earned by the validators and operators they support.
for details refer to [tokenomics](/introduction/tokenomics)

### Community and Support

Join the Chainbase delegator discord to collaborate with other delegators, share knowledge, and get support.


# Developers
Source: https://docs.chainbase.com/introduction/networks/developers



## Developers

Developers are both the demand and supply side of the network's data. Developers build manuscripts and publish them to the network to earn rewards, and at the same time, when they build Dapps, they query network data, becoming users of the network.

### Local Development(Coming soon)

Developers use the `chainbase-sdk` to build manuscripts locally. The SDK provides a comprehensive set of tools and libraries that simplify the process of data transformation and querying.

#### Setting Up the Development Environment

To get started, developers need to set up their local development environment. This involves installing the necessary dependencies, configuring the SDK, and setting up a local blockchain node for testing.

1. **Install Dependencies**: Ensure you have Node.js and npm installed. Then, install the `chainbase-sdk` using npm:
   ```bash
   npm install chainbase-sdk
   ```
2. **Configure the SDK**: Create a configuration file to specify the connection details for your local blockchain node and other settings.
3. **Set Up Local Node**: Run a local blockchain node to simulate the network environment. This allows you to test your manuscripts in a controlled setting.
   refer to [how to run a node](xxx)

### Testing and Validation

After development, manuscripts can be deployed to our sandbox environment, where developers have the opportunity to validate their manuscripts in advance to ensure there are no indexing errors and that they work as expected.

#### Sandbox Environment

The sandbox environment mimics the main network but operates in isolation, allowing developers to test their manuscripts without affecting the live network. This environment provides tools for debugging and performance monitoring.

1. **Deploy Manuscripts**: Use the SDK to deploy your manuscripts to the sandbox environment.
2. **Run Tests**: Execute a series of tests to validate the functionality and performance of your manuscripts.
3. **Debugging Tools**: Utilize the provided debugging tools to identify and fix any issues.

### Publishing

When developers are satisfied with their manuscripts, they can publish them to the network. This is an on-chain operation that registers the manuscript so that indexers (operators) can discover it.

#### On-Chain Registration

Publishing a manuscript involves an on-chain deploy that registers the manuscript with the network. This process ensures that the manuscript is indexed and available for querying by other network participants.

1. **Prepare Manuscript**: Ensure your manuscript is finalized and thoroughly tested.
2. **Initiate deploy**: Use the SDK to initiate the on-chain deploy for publishing your manuscript.
3. **Confirmation**: Wait for the deploy to be confirmed on the blockchain. Once confirmed, your manuscript is officially published and indexed.

### Earning Rewards

By publishing manuscripts, developers can earn rewards based on the usage and value of their data transformations. The network incentivizes high-quality and frequently used manuscripts, providing a steady stream of rewards to active developers.

1. **Usage-Based Rewards**: Earn rewards based on the number of queries and the amount of data processed by your manuscripts.
2. **Quality Incentives**: High-quality manuscripts that provide valuable data transformations are eligible for additional incentives.
   for details refer to [tokenomics](../tokenomics.mdx)

### Community and Support

Join the Chainbase developer discord to collaborate with other developers, share knowledge, and get support. Contribute to the documentation and SDK development get potential reward.

1. **[Discord](https://discord.gg/chainbase)**: Engage with other developers on the Chainbase Discord.
2. **Contributions**: Contribute to the SDK and documentation to help improve the tools and resources available to all developers.


# Operators
Source: https://docs.chainbase.com/introduction/networks/operators



## Operators

Operators play a crucial role in the network by providing the necessary computational resources for the execution layer, ensuring the smooth operation of data processing tasks. Operators are rewarded in a manner akin to proof-of-work, with greater workloads demanding higher hardware requirements.

### Becoming an Operator

To become an operator in the Chainbase network, follow these steps:

1. **Register**: Register as an operator on the Holesky testnet or the mainnet of the Eigenlayer smart contract. This will register your Ethereum public key with the Eigenlayer smart contract. Follow the instructions on [Eigenlayer](https://docs.eigenlayer.xyz/eigenlayer/operator-guides/operator-installation).
2. **Set Up Infrastructure**: Ensure you have the necessary hardware and software infrastructure to support the network's computational requirements.
3. **Run Node Software**: Install and run the Chainbase node software to start participating in the network.

### Responsibilities

Operators are responsible for maintaining and managing the computational infrastructure required for data processing tasks.

1. **Infrastructure Management**: Maintain and manage the hardware and software infrastructure to ensure efficient operation.
2. **Data Processing**: Process and execute data query requests submitted by data developers.

### Earning Rewards

Operators earn rewards based on the quality and quantity of data processing services they provide. The network incentivizes operators to maintain and optimize their computing resources.
for details refer to [tokenomics](../tokenomics.mdx).

### Community and Support

Join the Chainbase discord operators channel to collaborate with other operators, share knowledge, and get support.


# Overview
Source: https://docs.chainbase.com/introduction/networks/overview



The Chainbase Network is composed of Operators, Validators, Developers, and Delegators who provide services to the network and supply data to Web3 applications. Consumers utilize these applications and consume the data.

![role](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/role.png)

TL;DR

* developers build [manuscripts](../../core-concepts/manuscript.mdx)
* operators index [manuscripts](../../core-concepts/manuscript.mdx)
* validators maintain network consensus
* delegators delegate to operators && validators enhance the economic security

## Developers

Developers are both the demand and supply side of the network's data. Developers build manuscripts and publish them to the network to earn rewards, and at the same time, when they build Dapps, they query network data, becoming users of the network.

### Local Development

Developers use the `chainbase-sdk` to build manuscripts locally, for details refer to [developers details](xxx).

### Testing and Validation

After development, manuscripts can be deployed to our sandbox environment, where developers have the opportunity to validate their manuscripts in advance to ensure there are no indexing errors and that they work as expected.

### Publishing

When developers are satisfied with their manuscripts, they can publish them to the network. This is an on-chain operation that registers the manuscript so that indexers (operators) can discover it.

## Operators

Operators play a crucial role in the network by providing the necessary computational resources for the execution layer, ensuring the smooth operation of data processing tasks. Operators are rewarded in a manner akin to proof-of-work, with greater workloads demanding higher hardware requirements, for details refer to [operator details](xxx).

To become an Operator in the network, one must first register as an operator on the Holesky testnet or the mainnet of the Eigenlayer smart contract. This will register your Ethereum public key with the Eigenlayer smart contract. You can follow the instructions on [Eigenlayer](https://docs.eigenlayer.xyz/eigenlayer/operator-guides/operator-installation).

## Validators

Validators play a key role in maintaining the security and consensus of the network. They are responsible for ensuring data integrity and maintaining network stability. Validators in the network reach consensus through an improved cometbft and use DPOS to determine voting weight based on the size of the staked \$C data.

There are certain hardware and software requirements to become a validator in the network. If you wish to become a validator, please contact the team.

## Delegators

Delegators enhance the economic security of the network by staking their tokens to validators and operators. The Chainbase network uses a dual staking mechanism, where delegators can choose to stake `$ETH (or LST)` and `$C`.


# Validators
Source: https://docs.chainbase.com/introduction/networks/validators



## Validators

Validators play a key role in maintaining the security and consensus of the network. They are responsible for ensuring data integrity and maintaining network stability.

### Becoming a Validator

To become a validator in the Chainbase network, follow these steps:

1. **Contact the Team**: Reach out to the Chainbase team to express your interest in becoming a validator and to get detailed instructions.
2. **Meet Requirements**: Ensure you meet the necessary hardware and software requirements to run a validator node.
3. **Register**: Register as a validator on the network by following the provided instructions.
4. **Set Up Node**: Install and configure the validator node software to start participating in the network.

### Responsibilities

Validators are responsible for verifying transactions, maintaining network consensus, and ensuring data integrity.

1. **Transaction Verification**: Verify and confirm transactions to ensure their legality and accuracy.
2. **Consensus Maintenance**: Maintain the network's consensus mechanism, preventing malicious behavior and attacks.
3. **Data Integrity**: Ensure the integrity of the data being processed and stored on the network.
4. **Network Governance**: Participate in network governance by proposing and voting on network improvements and development directions.

### Earning Rewards

Validators earn rewards for their role in maintaining the network's security and stability. The reward structure incentivizes validators to perform their duties effectively.
for details refer to [tokenomics](../tokenomics.mdx)

### Monitoring and Performance

Validators should continuously monitor their node's performance to ensure it meets the network's standards.

1. **Performance Metrics**: Access performance metrics to evaluate your node's efficiency and reliability.
2. **Regular Monitoring**: Regularly check your node's status and performance to ensure it is operating optimally.
3. **Upgrades and Maintenance**: Perform necessary upgrades and maintenance to keep your node up-to-date and secure.

### Community and Support

Join the Chainbase validators discord channel to collaborate with other validators, share knowledge, and get support.


# Tokenomics
Source: https://docs.chainbase.com/introduction/tokenomics



## **Overview**

\$C is the native token of our decentralized data network, designed to facilitate and incentivize various activities within the ecosystem. The tokenomics model aims to support a sustainable and secure network by aligning the incentives of all participants, ensuring the efficient operation of both the execution and consensus layers, and fostering ongoing development and usage of the network. \$C serves as a utility token for coordinating data providers and consumers within the network, incentivizing protocol participants to effectively organize data.

By using our network, users can easily access data, paying only for the specific information they need. Our network plays a crucial role in making blockchain data more accessible and facilitating its exchange.

## **Reward Structure**

![network participation](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/tokenomic.png)
The reward structure of \$C is designed to incentivize network participation and ensure the growth and sustainability of the ecosystem. Rewards are primarily distributed through:

### **Data Query Fees**

Data developers create Manuscripts for processing blockchain data, and the resulting datasets can be queried and used. These query operations require the payment of \$C fees.

Data developers pay a certain amount of \$C to the network when querying datasets, which covers the costs of data retrieval and serves as a reward for network resource providers (such as Operators and Validators), ensuring they continue to provide high-quality services.

**Distribution:**

* **80%** is distributed to Operators and their delegators. This portion of the fees primarily incentivizes Operators to maintain and optimize computing resources, ensuring efficient data query processing.
* **15%** is distributed to Developer. Encourage developers to provide high-quality manuscript data processing logic.
* **5%** of the data query fee is burned.

### **Incentive Operator Pools**

A total of 15% of the \$C token supply will be allocated over 6 years, with 2% unlocked annually. This is to incentivize Operators to provide reliable and diverse computing resources, supporting the network in achieving large-scale data processing.

**Distribution:**

* **100%** is distributed to Operators and their delegators based on the quality and quantity of data processing services provided for blockchain projects.

### **Block Rewards**

Provided to help bootstrap the Network (-2% Annual Inflation)

* This fixed proportion ensures the sustainability and long-term incentives of the network.
* Block rewards are primarily used to incentivize Validators to maintain the security and stability of the network and ensure the proper functioning of the blockchain.

**Distribution:**

* **100%** is distributed to Validators and their delegators, who maintain the consensus mechanism of the blockchain and verify transactions.

## **Roles and Incentives**

### **Operators**

Operators play a crucial role in the network by providing the necessary computing resources for the execution layer, ensuring that data processing tasks run smoothly.

* Responsibilities include:
  * Maintaining and managing computing infrastructure to ensure efficient operation.
  * Processing and executing data query requests submitted by data developers.
  * Ensuring network stability and responsiveness, providing high-quality services.

#### **Incentives**

* Receive 80% of data query fees, incentivizing them to maintain and optimize computing resources for efficient data query processing.
* Receive 100% of the rewards from the incentive operator pools, encouraging them to provide efficient data processing services for blockchain projects.

### **Validators**

Validators play a critical role in maintaining network security and consensus. They are responsible for verifying transactions, ensuring data integrity, and maintaining network stability.

* Responsibilities include:
  * Verifying and confirming transactions to ensure their legality and accuracy.
  * Maintaining the network's consensus mechanism, preventing malicious behavior and attacks.
  * Participating in network governance, proposing and voting on network improvements and development directions.

#### **Incentives**

* Receive 100% of block rewards, incentivizing them to maintain network security and stability, and ensure the proper functioning of the blockchain.

### **Data Developers**

Data developers are responsible for contributing code for data transformation, making datasets available within the network, and querying dataset results.

* Responsibilities include:
  * Building and maintaining data transformation code (Manuscripts) to ensure datasets can be effectively processed and queried.
  * Conducting data queries to obtain the necessary results, supporting applications.
  * Participating in network development and improvement, proposing new features and optimizations.

#### **Incentives**

* Receive 15% of data query fees to provide high-quality manuscript data processing logic

### **Delegators**

Delegators enhance the network's economic security by staking tokens to Validators and Operators.

* Responsibilities include:
  * Selecting and supporting high-performance Validators and Operators by staking \$C, enhancing their economic security.
  * Monitoring and evaluating the performance of Validators and Operators to ensure they provide high-quality services.
  * Participating in network governance by voting on proposals and influencing the network's development and direction.

#### **Incentives**

* Earn a share of the rewards earned by the Validators and Operators they support. Delegators share in the rewards by staking tokens to Validators and Operators.
* Receive additional incentives for supporting high-performance Validators and Operators to ensure network security and stability.

## **Economic Sustainability**

Ensuring the long-term value and stability of \$C is crucial for the success of the network. We have implemented several mechanisms to prevent inflation and maintain the utility of the token:

### **Inflation Control**

* **Annual Cap**: Token issuance is capped at 3% per year to prevent excessive inflation.
* **Controlled Distribution**: Newly issued tokens are carefully allocated to maintain network security and incentivize participation without excessively diluting token value.

### **Utility Maintenance**

* **Broad Utility**: \$C tokens are required for various activities within the network, including query fees, staking, and accessing datasets, ensuring continuous demand.
* **Fee Adjustments**: Query fees can be adjusted based on network activity and demand to balance economic incentives and operational costs.

### **Economic Security**

* **Staking**: Validators and Delegators must stake \$C tokens, aligning their economic interests with the network's security and stability.
* **Performance Incentives**: High-performing Operators and Validators receive greater rewards, promoting continuous improvement and network reliability.

By integrating these elements, the \$C tokenomics model aims to create a balanced and sustainable ecosystem that fairly rewards all participants and promotes the long-term success of our decentralized data network.


# Configuration
Source: https://docs.chainbase.com/node/configuration



## Coming soon


# Introduction
Source: https://docs.chainbase.com/node/introduction



<Tip>
  As the Chainbase Network enters the testnet phase, network nodes will be open for participation
</Tip>

## What is a Chainbase Network Node?

A Chainbase Network node is an operator running the Chainbase Network node software and playing an active role in the network. The nodes in the Chainbase Network are divided into two roles: Operator and Validator.

### 1. Operator

Operators play a crucial role in the network by providing the necessary computational resources for the execution layer, ensuring the smooth operation of data processing tasks. The Operator Node constructs the Eigenlayer AVS. As the Chainbase Network testnet phase prepares to launch, we will open up participation for Operators, inviting interested users to join.

### 2. Validator

Validators play a key role in maintaining the security and consensus of the network. They are responsible for ensuring data integrity and maintaining network stability. The Validator Node is constructed based on the Cosmos SDK, using the CometBFT and DPoS consensus mechanisms. As the Chainbase Network testnet phase prepares to launch, we will open up participation for Validators, inviting interested users to join.

## How to Participate as a Chainbase Network Node?

If you are interested in becoming an Operator or Validator for the Chainbase Network, please contact the Chainbase Network team for more information and guidance. We look forward to your participation in advancing the Chainbase Network.


# Run a Chainbase AVS Operator
Source: https://docs.chainbase.com/node/operator



## Overview

This guide will walk you through the process of setting up and running a Chainbase AVS (Actively Validated Service) operator node.

## Requirements

Recommended Hardware Specifications

| Class                   | vCPUs (10th gen+) | Memory | Networking Capacity |
| ----------------------- | ----------------- | ------ | ------------------- |
| General Purpose - large | 2                 | 8 GB   | 5 Mbps              |
| General Purpose - xl    | 4                 | 16 GB  | 25 Mbps             |
| General Purpose - 4xl   | 16                | 64 GB  | 5 Gbps              |

Before you begin, ensure you have the following prerequisites installed:

➕[Docker](https://docs.docker.com/get-docker/): Docker is a requirement for AVS operator node.

➕[Docker Compose](https://docs.docker.com/compose/install/):  Docker Compose is used alongside Docker for executing operator node.

➕ **Linux Environment**: Eigenlayer’s CLI only runs in a Linux environment.

➕[Go](https://go.dev/doc/install): Two out of three installation routes require the use of Go. It’s safer to go with Go than go without. 😉

## Installation Process

### Migration From Previous Version

If you've previously run a Chainbase AVS operator node:

1. You can delete old version `chainbase-avs-setup` directory on your server, but need to back up your encrypted **ECDSA** and **BLS** keys.
2. Skip the **EigenLayer Registration** step and only start from **Chainbase AVS Setup** step.

### EigenLayer Registration

Ensure you've registered with EigenLayer before proceeding. For guidance, refer to the [EigenLayer Operator Installation Guide](https://docs.eigenlayer.xyz/eigenlayer/operator-guides/operator-installation).

### Chainbase AVS Setup

1. Clone the Chainbase AVS setup repository:

```
git clone https://github.com/chainbase-labs/chainbase-avs-setup
```

run a Chainbase AVS operator node on mainnet (**invited and whitelisted**):

```
cd chainbase-avs-setup/mainnet
```

**OR** run a Chainbase AVS operator node on testnet (**no restrictions**):

```
cd chainbase-avs-setup/holesky
```

2. Set up the environment file:

```
cp .env.example .env
```

Configure all fields in the `.env` file with your specific information:

```
NODE_ECDSA_KEY_FILE_PATH=/your/ecdsa/key/path
NODE_BLS_KEY_FILE_PATH=/your/bls/key/path
OPERATOR_ECDSA_KEY_PASSWORD=yourECDSAKeyPassword
OPERATOR_BLS_KEY_PASSWORD=yourBlsKeyPassword
OPERATOR_ADDRESS=yourECDSAKeyAddress
NODE_SOCKET=yourNodeSocket
OPERATOR_NAME=yourOperatorName
```

Use the command `eigenlayer operator keys list` to retrieve information about your  **ECDSA** and **BLS** key paths and operator address.

* **OPERATOR\_ADDRESS**: Set to your operator address (must match your ECDSA key address).
* **NODE\_SOCKET**: Set to your server's public IP address (format: `<your_server_public_ip>:8011`).

Important:

* Ensure your server's public IP is internet-accessible.
* Verify that port 8011 is open and properly configured in your firewall settings.

3. Set execution permissions for the script:

```shell
chmod +x ./chainbase-avs.sh
```

## Operating the Chainbase AVS

### Register as an Operator

Run the following command to register as an operator:

```shell
./chainbase-avs.sh register
```

### Run Node

Run the following command to startup node:

```shell
./chainbase-avs.sh run
```

### Test Node

Run the following command to test node:

```shell
./chainbase-avs.sh test
```

If you see the output `All systems are working for your manuscript node` in the command line output, it indicates that your node is running correctly.

### Update Node socket

If your server's public IP address is changed after you register as an operator, you need to update the node socket.
Configure `NODE_SOCKET` in `.env` file, then run the following command:

```shell
./chainbase-avs.sh socket
```

### Update Node version

Run the following command to update node version:

```shell
./chainbase-avs.sh stop
./chainbase-avs.sh update
./chainbase-avs.sh run
```

### Monitor Logs

View container logs using any of these commands:

```shell
docker compose logs -f
docker compose logs -f <container_name>
docker logs -f <container_id>
```

### Dashboard

You can visit `<your_server_public_ip>:3010` on browser to view the dashboard to confirm the status of your node.If you are unable to access the page in your browser, please verify that port 3010 on your server is open and properly configured in firewall settings.

## Troubleshooting

If you encounter any issues during setup or operation, please contact our support team on [Discord](https://discord.com/channels/933995010158907422/1268125787546980403).

## Additional Resources

* [EigenLayer Documentation](https://docs.eigenlayer.xyz/)


# Join Testnet
Source: https://docs.chainbase.com/node/testnet



## Coming soon


# Run a Validator
Source: https://docs.chainbase.com/node/validator



## Coming soon


# Data Catalog
Source: https://docs.chainbase.com/platform/datasets/data-catalog





# Inscription & Rune Data Support
Source: https://docs.chainbase.com/platform/datasets/inscription-and-rune



## Inscription & Rune Overview

Chainbase is built on the Streaming Warehouse prepared for the blockchain, constructing datasets in various fields. We hope to contribute to the Data field for BTC ecology under Inscription & Rune, making it easier and more efficient for developers to join the BTC ecosystem.

## Why Inscription & Rune is a Challenge from a Data Perspective in the Future

* Theoretically, all blockchains can run the Inscription protocol. Due to their low barrier to entry, throughput and storage will become challenges.
* The protocol is in its early stages, some indexers are still in the paper stage and have not been implemented. This requires infrastructure capabilities.
* The current implementation of indexers is more to solve the asset rights of Inscription & Rune off-chain, while the mining of blockchain data requires more capabilities.

## What has Chainbase done?

### Integrating Community Indexer

At present, Inscription & Rune generally open source protocol indexer, to ensure the legitimacy of off-chain asset verification and provide simple query services. Chainbase hopes to stay integrated with the community, continuously ingesting data into the Chainbase data platform to facilitate the re-mining of data value and create more data applications. At the same time, it can contribute code to the community's indexer.

![](https://files.readme.io/efa8bd6-image.png)

### Unify Data Abstraction Capability

Due to the lack of standardization in the Inscription & Rune's indexer, different indexer protocols use different languages and repeatedly build with different business logic. For example, all indexers will implement balance calculations related to the tick. The platform-based capability of chainbase can unify this part of data abstraction logic, integrating more inscription protocols at a lower cost.

![](https://files.readme.io/28b55ed-image.png)

### Make Developers Better Use Inscription & Rune Data

With the data platform capability based on chainbase, developers can explore more data value. For example

* Insight into investment opportunities on Inscription & Rune based on the product features of datacloud, such as the excavation of smart money
* The ability to actively push based on sync, develop robots based on message flow
* Integrate Inscription & Rune asset data into wallet applications and more based on web3 APIs

![](https://files.readme.io/0416381-image.png)

## Dataset Supported

* [brc20.token\_balances](/catalog/Bitcoin/Abstracted/brc20_token_balances)
* [brc20.token\_activities](/catalog/Bitcoin/Abstracted/brc20_token_activities)
* [brc20.token\_info](/catalog/Bitcoin/Abstracted/brc20_token_info)
* [pipe.token\_balances](/catalog/Bitcoin/Abstracted/pipe_token_balances)
* [pipe.token\_activities](/catalog/Bitcoin/Abstracted/pipe_token_activities)
* [pipe.token\_info](/catalog/Bitcoin/Abstracted/pipe_token_info)


# Overview
Source: https://docs.chainbase.com/platform/datasets/overview



## What is Dataset

A Dataset refers to a structured collection of data stored on the Chainbase Warehouse, which providing a clear and organized way to **Store, Access, and Manage** Web3 data in efficient way.

These datasets go through a strict process of **aggregation, validation, and indexing** to ensure they are accurate and real-time. They serve as the **Backbone** of our platform, enabling users to interact with **Web3 data** in a more intuitive and efficient way.

![](https://files.readme.io/d4e7423-image.png)

Datasets on Chainbase comprise of various **Data Tables**, which can be utilized through different user-interfaces such as **DataCloud, Sync, and API**, catering to diverse user requirements and scenarios.

## Data Layers

**Datasets** are structured in three primary layers to provide varying degrees of data abstraction, namely **Raw, Decoded Contract, and Abstracted**. These layers aid users in quickly accessing the desired dataset based on their specific needs and use-cases.

![](https://files.readme.io/b4659df-image.png)

* **Raw**: This layer houses the Raw Data of the blockchain including **Blocks, Transactions, Traces, and Logs**, serving as the fundamental basis for higher-level data interpretations.
* **Decoded Contract**: Utilizing smart contract ABIs, this layer auto-decodes contract data into a more comprehensible format. It mainly comprises **Call Tables and Event Logs**.
* **Abstracted**: This layer is **highly-abstracted** based on Real-world business requirements. It includes tables like `nft_assets, nft_burns, token_metas`  etc., catering to various domains like **NFTs, Tokens, and DeFi**.

## Chains Supported

The Chainbase platform is dedicated to building a powerful **Multi-Chain** ecosystem to enable **interoperability** and diversity of blockchain technology. thus facilitating the flow of data between different chains and networks.

By supporting multiple **Layers(L1/L2) and Chain types**, including **EVM, Non-EVM** to ensure that Chainbase platform can cover a wide range of blockchain networks and scenarios, providing users with a **All in One** data workstation.

### EVM-Compatible

**EVM-compatible** Chains like **Ethereum, Polygon, BSC, Avalanche, Fantom, Arbitrum, and Optimism** now are supported in Chainbase, allowing a broad dApps and services to seamlessly on our platform. Additionally, our continual updates and enhancements ensure that we stay in sync with the evolving **EVM specifications and community standards**, thereby ensuring our platform remains at the forefront of the blockchain technology landscape.

![](https://files.readme.io/043ae31-image.png)

### Non-EVM

We also support **Non-EVM** chains like **Bitcoin, Sui, and Aptos**, By integrating them, we bridge the technological gaps between different blockchains, offering users a broader landscape for data exploration and application development.

![](https://files.readme.io/f2c01f4-image.png)

## Data Sources

Chainbase not only provides **built-in datasets** but also facilitates the acquisition and processing of datasets from other ways.

Users have the flexibility to harness additional data by submitting Smart-Contract **ABI (Application Binary Interface)**  to decode the corresponded contracts.

### ABI Auto Decode

Users can submit the "**Contract Address**" along with the corresponding **ABI** to parse the data of the contract they are interested in. This feature significantly simplifies the process of decoding contract data, making it a straightforward task for users to obtain the precise contract data they need.

Through **ABI Auto Decode**, Chainbase empowers users to effortlessly access and interpret **contract data**, further enriching the datasets available on the platform and expanding the scope of data analytics and insights that can be derived from blockchain data.

While it was still in developing. and it will be released in next few versions.

> 🚧 Coming soon...


# FAQs
Source: https://docs.chainbase.com/platform/faqs/faq



## Account

### 1. How to get API key?

![death spiral](https://mintlify.s3.us-west-1.amazonaws.com/chainbase/images/faq/how_to_get_api_key.gif)

### 2. What is the QPS in the Chainbase Console?

You can find more information in [pricing](https://chainbase.com/pricing)

## APIs

### 1. What is Custom API, and how can I get access to Custom API? Are there any difference with Task API?

* [Task API](/platform/features/api/sql-api/datacloud-task-api): Asynchronous real-time requests with high data freshness (less concurrency scenarios).
* [Custom API](/platform/features/api/sql-api/datacloud-custom-api): High concurrency and low latency (with slightly reduced data freshness, at least 5 minutes).

Custom API is not available for all users. Please contact us for more information.


# Chain RPC
Source: https://docs.chainbase.com/platform/features/api/chain-rpc



<Note>
  📘 Don’t have an API key?

  Go to [console.chainbase.com](https://console.chainbase.com/) to create an account and a new API key.
</Note>

<CardGroup cols={2}>
  <Card title="EVM RPC API" href="/api-reference/node-rpc/evm/web3_clientVersion" />

  <Card title="Aptos RPC API" href="/api-reference/node-rpc/aptos/blocks/get-blocks-by-height" />

  <Card title="Ton RPC API" href="/api-reference/node-rpc/ton/blocks/get-masterchain-info" />

  <Card title="Sui RPC API" href="/api-reference/node-rpc/sui/overview" />
</CardGroup>

## EVM RPC API

### What is the EVM RPC API?

The EVM RPC API enables applications to connect to an Ethereum-compatible node supported by Chainbase. By utilizing the API's endpoints, developers can interact with on-chain data and send various types of transactions to the network. The API adheres to the JSON-RPC standard, which is a stateless, lightweight remote procedure call (RPC) protocol frequently used for interacting with Ethereum.

### Supported networks

* ethereum-mainnet
* merlin-mainnet
* polygon-mainnet
* polygon-mumbai
* bsc-mainnet
* bsc-testnet
* avalanche-mainnet
* avalanche-testnet
* fantom-mainnet
* fantom-testnet
* arbitrum-mainnet
* optimism-mainnet
* base-mainnet
* zksync-mainnet
* blast-mainnet
* merlin-mainnet

## Aptos RPC API

### What is the Aptos RPC API?

The Aptos RPC API is a RESTful API for client applications to interact with the Aptos blockchain. By utilizing the API's endpoints, developers can interact with on-chain data and send various types of transactions to the network.

### Public Endpoint

We have a rate limit of 20 r/s for public endpoint.

#### Testnet

Endpoint: [https://testnet-rpc.aptos.chainbase.online](https://testnet-rpc.aptos.chainbase.online)

#### Mainnet

Endpoint: [https://mainnet-rpc.aptos.chainbase.online](https://mainnet-rpc.aptos.chainbase.online)

## Sui RPC API

Chainbase is a supporter of the Sui ecosystem. With extensive experience operating in Sui nodes, we provide highly available RPC services. We are also a validating node of the SUI network, working with over 100 nodes worldwide to provide sufficient decentralization support for the high TPS of the Sui network.

We provide three types of services for Sui:

### Public Endpoint

We have a rate limit of 20 r/s for public endpoint.

#### Testnet

Endpoint: [https://testnet-rpc.sui.chainbase.online](https://testnet-rpc.sui.chainbase.online)

#### Mainnet

Endpoint: [https://mainnet-rpc.sui.chainbase.online](https://mainnet-rpc.sui.chainbase.online)

## Ton RPC API

The TON API provides an interface for interacting with the TON Network, offering highly flexible, secure, and efficient way to manage accounts, transactions and blocks data. TON is a dynamic decentralized network, providing a variety of possibilities for the development of smart contracts and Dapps.


# Data Cloud API (Deprecated)
Source: https://docs.chainbase.com/platform/features/api/sql-api/datacloud-api-classic



<Warning>
  ❗️ Warning

  The feature will be discontinued and no longer available on \[ 2024-12-31 ]

  Recommend using our latest version of the [DataCloud API.](/platform/features/api/sql-api/datacloud-task-api)
</Warning>

<Info>
  📘 Don’t have an API key?

  Go to [console.chainbase.com](https://console.chainbase.com/) to create an account and a new API key.
</Info>

## What is Data Cloud?

The Chainbase Data Cloud lets you run your low-latency queries through an endpoint to leverage all our indexed datasets for your custom needs. Chainbase's [Data Cloud](/platform/datasets/overview) is a fully managed online data warehouse service for Web3 developers.  Developers can query the data warehouse through the **API** to access our datasets with zero infra cost.  And the **Data Cloud**'s scalable, distributed analytical data engine and intelligent data modeling allow you to query terabytes of data **in seconds**.

## Quickstart

Query the hashes of the last 3,000 blocks in Ethereum and the number of transactions in each block:

```bash
curl -X "POST" "https://api.chainbase.online/v1/dw/query" \
     -H 'X-API-KEY: YOUR-API-KEY ' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "query": "select number, transactions_count from ethereum.blocks order by number desc limit 3000;"
}'
```

If there are more than 1000 rows, you need to paginate through the`task_id` and `page` to get all the results:

```bash
curl -X "POST" "https://api.chainbase.online/v1/dw/query" \
     -H 'X-API-KEY: YOUR-API-KEY ' \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
       "task_id": "xxxxxxxxxxxxxxxxxxxxx",
       "page": 2
}'
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [SQL API (Classic)](/api-reference/sql-api/data-cloud-sql-query)


# Data Cloud Custom API (Alpha)
Source: https://docs.chainbase.com/platform/features/api/sql-api/datacloud-custom-api

A data request method supporting high-concurrency scenarios.

The Custom API functionality is designed to offer an efficient and reliable data processing solution, by automatically updating and persistently storing users' SQL query results according to a predetermined schedule in a relational database engineered to handle high concurrency and high throughput demands. This strategy, by sacrificing a certain degree of data real-time accuracy, achieves optimization in reducing response time and enhancing the number of requests processed. Compared to our Task API, the distinctiveness of the Custom API functionality lies in its less stringent requirement for data immediacy.

* **Task API**:  Asynchronous real-time requests with high data freshness (less concurrency scenarios).
* **Custom API**: High concurrency and low latency (with slightly reduced data freshness,at least 5 minutes).

![](https://files.readme.io/507a0b7-image.png)

![](https://files.readme.io/1398f86-image.png)

![](https://files.readme.io/a0204dd-image.png)

![](https://files.readme.io/a5ea53e-image.png)

![](https://files.readme.io/df39799-image.png)

![](https://files.readme.io/8e2ecb8-image.png)

![](https://files.readme.io/218aafc-image.png)


# Data Cloud Task API (Alpha)
Source: https://docs.chainbase.com/platform/features/api/sql-api/datacloud-task-api



**Unified Datasets**

Users can now explore and query across three layers of datasets - Raw, Decoded, and Abstracted - within DataCloud.

<iframe width="100%" height="500" src="https://demo.arcade.software/8Ou4nlJdMdwqpFcFFhc5?embed" />

**Parameterized Queries**

With our new Parameterized Queries feature, users can now craft more dynamic and customized SQL queries.

<iframe width="100%" height="500" src="https://demo.arcade.software/2ne5zkptZuuKEdTC3Yd5?embed" />

**Task API**

Our Task API enable seamless integration with a wide range of applications, ensuring continuous access to the latest data.

<iframe width="100%" height="500" src="https://demo.arcade.software/ZtYTcEGvfVKfHrfwzzbB?embed" />

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [SQL API (Alpha)](/api-reference/sql-api/execute-queries)


# Overview
Source: https://docs.chainbase.com/platform/features/api/sql-api/overview



<Note>
  📘 Don’t have an API key?

  Go to [console.chainbase.com](https://console.chainbase.com/) to create an account and a new API key.
</Note>

## What is SQL API?

The Chainbase SQL API lets you run your low-latency queries through an endpoint to leverage all our indexed datasets for your custom needs.

The SQL API is powered by Chainbase's [Data Cloud](/platform/features/datacloud/overview), a fully managed online data warehouse service for Web3 developers.  Developers can query the data warehouse through the **SQL API** to access our datasets with zero infra cost.  And the **Data Cloud**'s scalable, distributed analytical data engine and intelligent data modeling allow you to query terabytes of data **in seconds**.


# Web3 API
Source: https://docs.chainbase.com/platform/features/api/web3-api



<Note>
  📘 **Don’t have an API key?**

  Go to [console.chainbase.com](https://console.chainbase.com/) to create an account and a new API key.
</Note>

Simplifies your web3 development process with seamless access to on-chain and off-chain data.

## What is Web3 API?

The Chainbase Web3 API is an API suite that simplifies your web3 development process with seamless access to on- and off-chain data. No matter what you're building, our Web3 API will provide the necessary data support, including balance, transaction history, ownership, and price information.

## Web3 API Features

Chainbase lets you easily and instantly look up multi-chain, multi-asset balances, transfer history, prices, etc. No indexing is required!

<CardGroup cols={3}>
  <Card title="Basic API" href="/api-reference/web3-api/basic/block/get-block-by-number" />

  <Card title="NFT API" href="/api-reference/web3-api/nft/nft-metadata/get-nft-metadata" />

  <Card title="Token API" href="/api-reference/web3-api/token/market-data/get-token-price-history" />

  <Card title="Balance API" href="/api-reference/web3-api/balance/nft-balances/get-nfts-owned-by-address" />

  <Card title="Domain API" href="/api-reference/web3-api/domain/ens-domain-endpoints/get-ens-domains" />
</CardGroup>

## Built for Web3 Use Cases

The advanced feature set of our Web3 APIs means it can support use case, including:

* NFT Marketplaces
* Wallets
* Block Explorers
* DeFi portfolio Trackers
* Analytics & Reporting
* DAO Governance Tools
* Gaming

## Supported Chains

We will continue to add support for new blockchains for Web3 API. If there is a chain that you wish to support but we do not, please let us know by [reaching us](http://chainbase.com/help).

<table>
  <thead>
    <tr>
      <th style={{ width: "150px" }}>Chain</th>
      <th style={{ width: "60%" }}>Network ID</th>
    </tr>
  </thead>

  <tbody>
    <tr>
      <td>Ethereum</td>
      <td>1</td>
    </tr>

    <tr>
      <td>Polygon</td>
      <td>137</td>
    </tr>

    <tr>
      <td>BSC</td>
      <td>56</td>
    </tr>

    <tr>
      <td>Avalanche</td>
      <td>43114</td>
    </tr>

    <tr>
      <td>Arbitrum One</td>
      <td>42161</td>
    </tr>

    <tr>
      <td>Optimism</td>
      <td>10</td>
    </tr>

    <tr>
      <td>Base</td>
      <td>8453</td>
    </tr>

    <tr>
      <td>zkSync</td>
      <td>324</td>
    </tr>

    <tr>
      <td>Merlin</td>
      <td>4200</td>
    </tr>
  </tbody>
</table>

<div
  style={{
  display: "flex",
  columnGap: "2rem",
  rowGap: "1rem",
  flexWrap: "wrap",
}}
>
  {[
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Ethereum.png",
        name: "Ethereum",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Polygon.png",
        name: "Polygon",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/BSC.png",
        name: "BNB Chain",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Fantom.png",
        name: "Fantom",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Avalanche.png",
        name: "Avalanche",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Arbitrum.png",
        name: "Arbitrum",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/Optimism.png",
        name: "Optimism",
      },
      {
        link: "https://platform.chainbase.com/assets/rpcService/multiChain/zkSync.png",
        name: "zkSync",
      },
    ].map((v) => (
      <div
        style={{
          backgroundColor: "#fff",
          width: "150px",
          height: "140px",
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
          justifyContent: "center",
          gap: "0.5rem",
          border: "2px solid #d9f0fa",
          borderRadius: "12px",
        }}
      >
        <img style={{ margin: "0px" }} width="60px" src={v.link} />
        <span style={{ color: "#000" }}>{v.name}</span>
      </div>
    ))}
</div>


# Overview
Source: https://docs.chainbase.com/platform/features/datacloud/overview



## What is Data Cloud

* DataCloud is a powerful online platform designed for on-chain data processing. It is tailored to provide extensive capabilities in data querying, analysis, and processing. This platform enables developers to swiftly and effectively analyze on-chain data, facilitating the creation of high-performance, low-latency APIs for streamlined Web3 application development.
* This platform significantly simplifies the process from analyzing on-chain data to building high-performance APIs, especially suitable for applications requiring real-time data monitoring and dynamic data analysis.
* DataCloud supports a wide range of users, from exchanges and DeFi application operators to market analysts, offering powerful tools to focus more on innovation and optimizing Web3 application features.

## Features

* **Unified Datasets (Raw / Decoded / Abstracted)**: The datasets have been unified, providing a more streamlined and efficient data handling experience.
* **Parameterized Queries**: Introducing parameterized templates for more flexible and efficient data querying.
* **File Explorer**: A new tool to explore and manage saved queries.
* **Task API**: Replacing the SQL API, this new feature allows for more advanced and customizable data handling tasks.

## QuickStart

**Enter Data Cloud**: Access the [Data Cloud](https://console.chainbase.com/dataCloud) interface to start your data exploration.

**Input a Simple SQL Query**: Use the following SQL query in the Data Cloud to extract information from Ethereum transaction data, focusing on a specific block number:

```sql
select
    block_timestamp,
    block_number,
    _value,
    _from,
    _to
FROM ethereum.erc20_transfer
WHERE block_number = 17089970
```

This query retrieves details such as the timestamp of the block, block number, originating address, transaction value, and the transaction hash, specifically targeting transactions in block number 17089970 on the Ethereum blockchain.

**Execute the Query**: Run this query within Data Cloud to pull the specified data from the Ethereum blockchain.

![](https://files.readme.io/91fd400-image.png)

**Introduction to Custom Parameters**: In Data Cloud, you have the ability to use a dedicated parameter input box, which allows for the customization of query parameters. This feature enhances the flexibility and user-friendliness of SQL queries.

**Setting Up a Query with Custom Parameters**: Here’s an example of how you can structure an SQL query using a custom parameter for the block number:

![](https://files.readme.io/f7da96e-image.png)

```sql
SELECT
    block_timestamp,
    block_number,
    from_address,
    value,
    gas,
    hash
FROM ethereum.transactions
WHERE block_number = {blocknumber}
```

**Using the Custom Parameter Box**: When you run this query, use the custom parameter box to input or select the desired block number. This input will replace the {blocknumber} placeholder in the query, allowing you to retrieve data for that specific block on the Ethereum blockchain with ease.

![](https://files.readme.io/8249d4d-image.png)

**Save your query to File Explorer：**

After saving your SQL query, it will be visible and accessible at any time within the "File Explorer" on the left side. This tool is meticulously designed to simplify your navigation and management of saved queries. With easy access to these entries in the file management panel, complemented by the search functionality at the top, you can quickly locate and retrieve previously saved queries, significantly enhancing the efficiency of your development workflow in data analysis and database management. The "File Explorer" serves as a centralized platform for viewing and organizing SQL queries, further enabling developers to manage and execute data operations with great efficiency.

Finally, by clicking on "Generate API," you can create an API endpoint that allows you to invoke the data seen in Data Cloud within your own programs, offering a 'what you see is what you get' convenience. Additionally, you have the flexibility to select from different programming languages according to your tech stack, ensuring seamless integration into your development environment.

```typescript

const apiKey = "your-api-key";
const queryId = "424242";

const headers = {
  "API-KEY": apiKey,
  "CONTENT-TYPE": "application/json",
};

async function executeQuery(queryId) {
  return await fetch(
    `https://api.chainbasehq.com/v1/query/${queryId}/execute`,
    { method: "POST", headers }
  )
    .then((response) => response.json())
    .then((data) => data.data[0].executionId);
}

async function checkStatus(executionId) {
  return await fetch(
    `https://api.chainbasehq.com/v1/execution/${executionId}/status`,
    { headers }
  )
    .then((response) => response.json())
    .then((data) => data.data[0].status);
}

async function getResults(executionId) {
  return await fetch(
    `https://api.chainbasehq.com/v1/execution/${executionId}/results`,
    { headers }
  ).then((response) => response.json());
}

async function main() {
  const executionId = await executeQuery(queryId);
  let status;
  do {
    status = await checkStatus(executionId);
    await new Promise((resolve) => setTimeout(resolve, 1000));
  } while (status !== "FINISHED" && status !== "FAILED");

  return await getResults(executionId);
}

main().then(console.log);
```

![](https://files.readme.io/70d9592-image.png)

## SQL Example

**Query the total cross-chain amount for a user:**

```sql
SELECT
    'out' as type,
    project,
    token,
    from_chain,
    to_chain,
    sum(cast(amount as decimal(38, 0))) as total
FROM
    bridge_ethereum.transfers
WHERE
    "from" = '0xf99d58e463a2e07e5692127302c20a191861b4d6'
group by
    project,
    token,
    from_chain,
    to_chain
UNION ALL
SELECT
    'in' as type,
    project,
    token,
    from_chain,
    to_chain,
    sum(cast(amount as decimal(38, 0))) as total
FROM
    bridge_ethereum.transfers
WHERE
    "to" = '0xf99d58e463a2e07e5692127302c20a191861b4d6'
group by
    project,
    token,
    from_chain,
    to_chain
```

This query consists of two parts: one part calculates the total amount of funds sent from a specific address (marked as 'out'), and the other part calculates the total amount of funds sent to that address (marked as 'in'). The two parts are combined using UNION ALL to provide a complete view of the total cross-chain transfer amount.

**Query the total liquidity provided by the user for each liquidity pool.**

```sql
select
    project,
    pool,
    token_address,
    sum(cast(amount as decimal(38, 0)))
from
    dex_ethereum.liquidity
where
    "from" = '{{UserAddress}}'
    or "to" = '{{UserAddress}}'
group by
    project,
    pool,
    token_address
```

**Query for token holdings**

```sql
select
    *
from
    ethereum.erc20_balances b
    left join ethereum.token_metas t on t.contract_address = b.contract_address
where
    wallet_address = '0x2e12979da9ad061ccc204c00d0e3a477a8cc4aea'
limit
    10
```

**Query the total amount of loans and collateral for a user.**

```sql
with
    lending_raw as (
        select
            project,
            asset,
            category,
            sum(cast(amount as decimal(38, 0))) as total_amount
        from
            lending_ethereum.feeds
        where
            account = '{{UserAddress}}'
        group by
            project,
            asset,
            category
    )
select
    project,
    asset,
    category,
    total_amount / t.decimals as volume,
    t.name
from
    lending_raw l
    left join ethereum.token_metas t on t.contract_address = l.asset
```

DataCloud fundamentally transforms how we interact with blockchain data, offering unprecedented flexibility and efficiency for all Web3 developers. As you embark on this journey of exploration and innovation, Chainbase will be your ultimate partner, guiding you through the ever-evolving realm of Web3 development.


# Write Efficient Queries
Source: https://docs.chainbase.com/platform/features/datacloud/write-efficient-queries



## Tips for writing efficient queries

When you write a query, you want to make sure it runs as efficiently as possible. Here are some tips to help you write efficient queries:

1. **Limit the columns in the `SELECT` clause**: Only request the columns you need, as it reduces the amount of data the query engine needs to process.

2. **Use the `LIMIT` clause**: If you are only interested in a specific number of rows, use the `LIMIT` clause to avoid processing more data than necessary.

3. **Filter early and use predicate pushdown**: Apply filters as early as possible in the query to reduce the amount of data being processed. This takes advantage of predicate pushdown, which pushes filter conditions down to the storage layer, reducing the amount of data read from storage. For example, if you only need data from a specific date range, filter on the date column as early as possible.

4. **Use `UNION ALL` instead of `UNION`**: If you’re combining the results of multiple queries, use `UNION ALL` instead of `UNION` to avoid the overhead of removing duplicate rows.

5. **Only order when necessary**: Ordering results can be computationally expensive. If you don’t need ordered results, avoid using `ORDER BY`.

6. **Always use the actual data while filtering**: Do not use functions on the filter columns: For example, if you want to filter on a date, do not use date\_trunc('day', block\_timestamp) > '2022-01-01'. Instead, use block\_timestamp > '2022-01-01'. The first example will not be able to use the min/max values of the block\_time column to skip entire parquet files or row groups within files while scanning through a table, while the second example will. The same goes for other functions, such as substr, lower, upper etc.

7. **Use `UNION ALL` instead of `OR`**: If you need to combine the results of multiple queries, use `UNION ALL` instead of `OR` to avoid the overhead of removing duplicate rows. For example, instead of using `SELECT * FROM table WHERE column = 'value1' OR column = 'value2'`, use `SELECT * FROM table WHERE column = 'value1' UNION ALL SELECT * FROM table WHERE column = 'value2'`.

8. **User lower-case address directly in SQL**: If you are filtering on an address, use the lower-case address directly in the SQL query. For example, instead of using `SELECT * FROM transactions WHERE from_address = lower('0x1234567890ABCDEF')`, use `SELECT * FROM transactions WHERE from_address = '0x1234567890abcdef'`. This allows the query engine to use the min/max values of the from\_address column to skip entire ORC files or row groups within files while scanning through a table.


# Overview
Source: https://docs.chainbase.com/platform/features/sync/overview



## Introduction

![](https://files.readme.io/32d107b-image.png)

Welcome to our Chainbase Sync service tutorial. This service is designed to offer:

1. **Complete and Accurate Historical Data**: Sync-Service ensures full consistency with the tables in DataCloud, providing complete and precise historical data.
2. **Rapid Historical Data Synchronization**: Our service enables quick synchronization of historical data without relying on RPC, streamlining the process significantly.
3. **Up-to-Date Incremental Blockchain Data**: After synchronizing historical data, Sync-Service continuously updates with real-time incremental blockchain data, tailored to your specific needs.

This guide will help you utilize these features to their fullest potential.

## Before You Begin

* Ensure you have a registered Chainbase account.
* Make sure you have a data source and a target data storage system that you wish to synchronize.

## Step 1: Selecting Your Data Source

* Access the Chainbase Sync-Service interface.
* Choose your data source (e.g., PostgreSQL, MySQL, S3, etc.).
* Enter the details and credentials for your data source.

![](https://files.readme.io/01efde5-image.png)

## Step 2: Configuring Data Flow

* Select the type of data to synchronize (raw data, decoded data, or abstracted data).

![](https://files.readme.io/138a961-image.png)

* Identify the target system, such as a database or object storage system.

![](https://files.readme.io/cfcf37e-image.png)

* Set the synchronization frequency and specific data sync options.

![](https://files.readme.io/fa61fac-image.png)

## Step 3: Syncing and Monitoring

* Start the data synchronization process.
* Monitor the progress and logs using tools provided by Chainbase.
* Verify the data in the target system to ensure successful synchronization.

![](https://files.readme.io/0651669-image.png)

## Step 4: Managing and Maintenance

* In the 'Jobs' section of the integration interface, users can observe the current status of each sync job.
* The interface provides controls to pause and restart sync jobs as needed.

![](https://files.readme.io/f3a83d3-image.png)

## Conclusion

The Chainbase Sync service streamlines the data synchronization process, enabling users to efficiently set up and maintain their data workflows within just two interface pages. With continuous synchronization, users can receive ongoing data updates after the initial sync is complete. The system's flexibility, scalability, and ease of use are evident in the variety of data sources and tables users can choose from, tailored to their specific needs. Furthermore, the conformity of table data formats with DataCloud standards ensures seamless integration and consistency across platforms. This comprehensive service package empowers users to harness real-time data insights effectively.

## Frequently Asked Questions (FAQs)

1. **Is the data synchronized with Chainbase Sync-Service in real-time?**
   Yes, Chainbase Sync service supports real-time data synchronization. As changes occur in your data source, they are immediately captured and updated in your target system, ensuring that the data you access is always current.
2. **How is the pricing for synchronization calculated?**
   The pricing for synchronization with Chainbase Sync-Service is based on several factors, including the volume of data being synchronized, the frequency of sync jobs, and the number of data sources and destinations configured. For detailed pricing information, please refer to our pricing page or contact our [sales team](https://chainbase.com/contact).
3. **Can I choose to start synchronization from a specific block?**
   Currently, the ability to begin synchronization from a specific block index is a feature exclusive to our enterprise users. If you require this level of synchronization control, please reach out to our [sales team](https://chainbase.com/contact) for assistance and information on our enterprise solutions.


# Overview
Source: https://docs.chainbase.com/platform/overview



Welcome to Chainbase Data Platform docs. All-in-one web3 data infrastructure for indexing, transforming, and utilizing large-scale on-chain data.

## What is Chainbase Data Platform?

Chainbase Data Platform is an all-in-one data infrastructure for Web3 that allows you to index, transform, and utilize large-scale on-chain data. It is a platform that provides a suite of tools and services to help you build, manage, and scale your Web3 applications.

By leveraging enriched on-chain data and streaming computing technologies across one data infrastructure, Chainbase Data Platform automates the indexing and querying of blockchain data, enabling developers to accomplish complex data tasks with ease.

## Products & Features

### API - Indexed Data

Chainbase Data Platform provides a powerful API that allows you to access indexed data from the blockchain. The API is designed to be easy to use and provides a wide range of features to help you get the data you need.

### Datasets

Chainbase Data Platform supports a wide range of raw, decoded, and abstracted datasets for you to build next-level apps with cutting-edge protocols today and tomorrow.

### Data Cloud

Data Cloud lets you run your low-latency queries through an endpoint to leverage all our indexed datasets for your custom needs.

### Data Sync - Stream data to your backend

With Data Sync, you can stream the data you need into your own infrastructure in real-time, and then use it to build powerful applications.


# Pricing
Source: https://docs.chainbase.com/platform/pricing/pricing





# Support
Source: https://docs.chainbase.com/platform/support





# Supported Networks
Source: https://docs.chainbase.com/platform/supported-networks/supported-networks



We support the following networks in real-time across multiple data types. More chains and types are being onboarded and will coming soon.

| **Ecosystem** | **Blockchains Supported** | **Node RPC** | **Raw** | **Decoded** | **Abstracted** | **Web3 API** |
| ------------- | ------------------------- | ------------ | ------- | ----------- | -------------- | ------------ |
| **EVM**       | Ethereum                  | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Binance Smart Chain (BSC) | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Polygon                   | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Avalanche (C-Chain)       | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Fantom                    | ✔            | ✔       | ✔           |                |              |
|               | Arbitrum                  | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Optimism                  | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Base                      | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Blast                     | ✔            | ✔       | ✔           | ✔              |              |
|               | ZkSync                    | ✔            | ✔       | ✔           | ✔              | ✔            |
|               | Merlin                    | ✔            | ✔       |             |                | ✔            |
| **Non EVM**   | Bitcoin                   |              | \*      |             | ✔              |              |
|               | Sui                       | ✔            |         |             | ✔              |              |
|               | Ton                       | ✔            | ✔       | ✔           | ✔              |              |
|               | Tron                      | ✔            | ✔       |             |                |              |
|               | *Solana\**                |              | \*      | \*          | \*             | \*           |


# Get native token balances by address
Source: https://docs.chainbase.com/platform/usecases/balance-api/get-native-token-balances



Getting the token balances of an account is an essential task when dealing with cryptocurrencies, as it allows you to know the amount of tokens that an account holds. The Web3 APIs from Chainbase provide the ability to get all transactions and account balances in a straightforward way. By following the steps below, you can seamlessly get the native token balances of an account on a certain chain through a single API call using Chainbase API.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A known wallet address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/eb3531c-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

fetch(`https://api.chainbase.online/v1/account/balance?chain_id=${network_id}&address=${wallet_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/account/balance?chain_id=${network_id}&address=${wallet_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print native token balances

Chainbase API [Get native token balances](/api-reference/web3-api/balance/token-balances/get-native-token-balances) takes the chain id and wallet address as parameters, and returns the value of native token balances.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the native token balances of Vitalik’s wallet on Ethereum is `0x122b7e019d9a0431a15` by the time of Mar. 17th, 2023.

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get native token balances](/api-reference/web3-api/balance/token-balances/get-native-token-balances)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get all NFTs owned by an address
Source: https://docs.chainbase.com/platform/usecases/balance-api/get-nfts-owned-by-address



It’s important for a wallet to view all NFTs it holds. Chainbase offers a specific API endpoint for retrieving all NFTs owned by a wallet address.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A wallet address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/747aea7-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

fetch(`https://api.chainbase.online/v1/account/nfts?chain_id=${network_id}&address=${wallet_addr}&page=1&limit=5`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/account/nfts?chain_id=${network_id}&address=${wallet_addr}&page=1&limit=5`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print NFTs owned by the wallet

Chainbase API [Get NFTs owned by address](/api-reference/web3-api/balance/nft-balances/get-nfts-owned-by-address) takes the chain id and wallet address as parameters, and returns the NFTs owned by the input wallet.

To get data printed, run command `node <filename>.js` in the terminal. In this case, five of the NFTs owned by Vitalik are as follows.

```jsx
[
  {
    contract_address: '0xc54567b294d7ec7807529fbaec71d326543453c5',
    erc_type: 'ERC721',
    image_uri: 'ipfs://QmVaTJSCgGFyfcd4hsaTN2ZMDh2hErpCtY9xMP9USdZqt1',
    metadata: {
      attributes: [Array],
      description: "CoinStats GLXY is for the starry-eyed and galaxy-brained. It's for those whose spaceship has landed on CoinStats planet, who appreciate the mysterious glow the cosmic entities on our orbit give off. Enjoy the kitsch!",
      image: 'ipfs://QmVaTJSCgGFyfcd4hsaTN2ZMDh2hErpCtY9xMP9USdZqt1',
      name: 'CoinStats GLXY 1856'
    },
    mint_time: '2022-08-11T07:22:13Z',
    mint_transaction_hash: '0x46a7b861a8f1e0290b6dc3095051bf03914701ea6b0a065455273c61fb6b3861',
    name: 'CoinStatsGLXY',
    owner: '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045',
    symbol: 'GLXY',
    token_id: '0x0740',
    token_uri: 'ipfs://QmQyhH7CWpcRpZtuau7GzucbG4NnG2Uv3ZuAuvHGJWdys7/1856.json',
    total: 1,
    total_string: '1',
    traits: null
  },
  {
    contract_address: '0x495f947276749ce646f68ac8c248420045cb7b5e',
    erc_type: 'ERC1155',
    image_uri: '',
    metadata: null,
    mint_time: '0001-01-01T00:00:00Z',
    mint_transaction_hash: '',
    name: 'OpenSea Shared Storefront',
    owner: '',
    symbol: 'OPENSTORE',
    token_id: '0x92c6b6b4a1817e76b56eb3e1724f9df6026dd63c000000000000410000000006',
    token_uri: '',
    total: 1,
    total_string: '1',
    traits: null
  },
  {
    contract_address: '0x495f947276749ce646f68ac8c248420045cb7b5e',
    erc_type: 'ERC1155',
    image_uri: '',
    metadata: null,
    mint_time: '0001-01-01T00:00:00Z',
    mint_transaction_hash: '',
    name: 'OpenSea Shared Storefront',
    owner: '',
    symbol: 'OPENSTORE',
    token_id: '0x92c6b6b4a1817e76b56eb3e1724f9df6026dd63c000000000000400000000006',
    token_uri: '',
    total: 1,
    total_string: '1',
    traits: null
  },
  {
    contract_address: '0x495f947276749ce646f68ac8c248420045cb7b5e',
    erc_type: 'ERC1155',
    image_uri: '',
    metadata: null,
    mint_time: '0001-01-01T00:00:00Z',
    mint_transaction_hash: '',
    name: 'OpenSea Shared Storefront',
    owner: '',
    symbol: 'OPENSTORE',
    token_id: '0x92c6b6b4a1817e76b56eb3e1724f9df6026dd63c0000000000003f0000000006',
    token_uri: '',
    total: 1,
    total_string: '1',
    traits: null
  },
  {
    contract_address: '0x495f947276749ce646f68ac8c248420045cb7b5e',
    erc_type: 'ERC1155',
    image_uri: '',
    metadata: null,
    mint_time: '0001-01-01T00:00:00Z',
    mint_transaction_hash: '',
    name: 'OpenSea Shared Storefront',
    owner: '',
    symbol: 'OPENSTORE',
    token_id: '0x92c6b6b4a1817e76b56eb3e1724f9df6026dd63c0000000000003e0000000006',
    token_uri: '',
    total: 1,
    total_string: '1',
    traits: null
  }
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get NFTs owned by address](/api-reference/web3-api/balance/nft-balances/get-nfts-owned-by-address)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get all ENS domain names by address
Source: https://docs.chainbase.com/platform/usecases/domain-api/get-domain-names-by-address



To get ENS domains owned by a wallet address, you can use Chainbase [Get ENS domains](/api-reference/web3-api/domain/ens-domain-endpoints/get-ens-domains) API. If the wallet doesn’t have any ENS domains, the `data` field of the response will be null.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A wallet address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/aa64d62-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac'; // Take our CTO Xiaocong's wallet address as an example.

fetch(`https://api.chainbase.online/v1/account/ens?chain_id=${network_id}&address=${wallet_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac'; // Take our CTO Xiaocong's wallet address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/account/ens?chain_id=${network_id}&address=${wallet_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print ENS domains

Chainbase API [Get ENS domains](/api-reference/web3-api/domain/ens-domain-endpoints/get-ens-domains) takes the chain id and wallet address as parameters, and returns all the ENS domains owned by the wallet.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the ENS domains of Xiaocong’s wallet on Ethereum are as follows.

```jsx
[
  {
    "address": "0x57511688c0ca7cc7c25b90ae51c62b64652136ac",
    "expiration_time": "2023-04-17T14:19:21Z",
    "name": "lxcong",
    "owner": "0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac",
    "registrant": "0x57511688c0ca7cc7c25b90ae51c62b64652136ac",
    "registrant_time": "2022-04-17T08:30:09Z",
    "resolver": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
    "text_records": {},
    "token_id": "63135721284494715790867739452503301817186787830065141439742276093364926543362"
  }
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get ENS domains](/api-reference/web3-api/domain/ens-domain-endpoints/get-ens-domains)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Resolve ENS Domain
Source: https://docs.chainbase.com/platform/usecases/domain-api/resolve-domain



To resolve an ENS domain name, you can use Chainbase API [Resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/resolve-ens-domain). The steps are as follows.

An ENS (Ethereum Name Service) domain name is a unique identifier that points to an Ethereum address. It is a decentralized naming system built on the Ethereum blockchain. Resolving an ENS domain name means translating it into the corresponding Ethereum address. It is important to resolve an ENS domain name because it makes it easier to send and receive cryptocurrency payments.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. An ENS domain name as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/a917ffc-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
domain = 'paradigm.eth'; // Take paradigm.eth as an example.

fetch(`https://api.chainbase.online/v1/ens/records?chain_id=${network_id}&domain=${domain}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
domain = 'paradigm.eth'; // Take paradigm.eth as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/ens/records?chain_id=${network_id}&domain=${domain}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the resolved address

Chainbase API [Resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/resolve-ens-domain) takes the chain id and an ENS domain name as parameters, and returns the resolved address related to the domain name.

To get data printed, run command `node <filename>.js` in the terminal. In this case, data returned is as follows by the time of Mar. 23rd, 2023.

```jsx
{
  "name": "paradigm",
  "address": "0x29ecfa2bee3538bb45d5017141a2e36208f1c082",
  "registrant": "0x29ecfa2bee3538bb45d5017141a2e36208f1c082",
  "owner": "0x29ecfA2BEe3538bB45D5017141a2e36208f1C082",
  "resolver": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
  "registrant_time": "2020-08-30T00:21:53Z",
  "expiration_time": "2021-08-30T06:11:05Z",
  "token_id": "25678324544658514891171433701500781853442152332474238876092807294041322428124",
  "text_records": {
    "avatar": "https://sushi.com/static/media/logo.dec926df.png",
    "com.github": "andrecronje",
    "com.twitter": "a16z",
    "description": "Skate on the Paradigm and shift it when I feel like",
    "email": "careers@mcdonalds.com",
    "eth.ens.delegate": "https://discuss.ens.domains/t/ens-dao-delegate-applications/815/1045",
    "url": "https://www.forbes.com/sites/stevenehrlich/2021/10/06/the-richest-under-30-in-the-world-all-thanks-to-crypto"
  }
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/resolve-ens-domain)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Reverse Resolve ENS Domain
Source: https://docs.chainbase.com/platform/usecases/domain-api/reverse-resolve-domain



Reverse resolving an ENS name involves retrieving the address associated with a given ENS name. This can be useful in cases where you need to verify the ownership of an ENS name or interact with a smart contract associated with the name. By using Chainbase API [Reverse resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/reverse-resolve-ens-domain), you can easily reverse resolve an ENS name and retrieve the associated address on Ethereum or other chains.

It's important to note that reverse resolving an ENS name only works for names that have been registered on the blockchain. If a name has not been registered, it will not have an associated address and therefore cannot be reverse resolved.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A wallet address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/3e13e42-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac'; // Take our CTO Xiaocong's wallet address as an example.

fetch(`https://api.chainbase.online/v1/ens/reverse?chain_id=${network_id}&address=${wallet_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac'; // Take our CTO Xiaocong's wallet address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/ens/reverse?chain_id=${network_id}&address=${wallet_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the reversed resolved ENS domain

Chainbase API [Reverse resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/reverse-resolve-ens-domain) takes the chain id and wallet address as parameters, and returns the reversed resolved ENS domain name.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the corresponding domain name of Xiaocong’s wallet on Ethereum is `lxcong`, which means you can get the wallet address using `lxcong.eth`.

```jsx
[
  {
    "address": "0x57511688c0ca7cc7c25b90ae51c62b64652136ac",
    "expiration_time": "2023-04-17T14:19:21Z",
    "name": "lxcong",
    "owner": "0x57511688c0ca7Cc7C25B90aE51C62B64652136Ac",
    "registrant": "0x57511688c0ca7cc7c25b90ae51c62b64652136ac",
    "registrant_time": "2022-04-17T08:30:09Z",
    "resolver": "0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41",
    "text_records": {},
    "token_id": "63135721284494715790867739452503301817186787830065141439742276093364926543362"
  }
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Reverse resolve ENS domain](/api-reference/web3-api/domain/ens-domain-endpoints/reverse-resolve-ens-domain)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get all transfers of a NFT collection
Source: https://docs.chainbase.com/platform/usecases/nft-api/get-all-transfers-of-a-collection



If you're interested in tracking the transfers of an NFT collection, there are a few steps you can take to easily access this information. First, you need to find the contract address of the NFT collection you're interested in. You can usually find this on the collection's website or on a marketplace where the collection is listed. After you get the contract address, you can use Chainbase to view all the transactions related to that collection. With Chainbase API, you can easily access all the transfers of an NFT collection and gain valuable insights into the collection's activity.

Once you have these results, you can analyze the data to see who owns each NFT and when it was transferred. This can be useful for tracking the value of a particular NFT or for understanding the buying and selling patterns of a collection's community.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. An NFT contract address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/d07df31-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take the contract address of Azuki as an example.

fetch(`https://api.chainbase.online/v1/nft/transfers?chain_id=${network_id}&contract_address=${contract_addr}&page=1&limit=5`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take the contract address of Azuki as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/nft/transfers?chain_id=${network_id}&contract_address=${contract_addr}&page=1&limit=5`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print all transfers of an NFT collection

Chainbase API [Get NFT owners by collection](/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection) takes the chain id and contract address as parameters, and returns all transfers of an NFT collection. You can also filter the results using constraints like block number and timestamp.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the first five transfers of Azuki on Ethereum are as follows by the time of Mar. 23rd, 2023.

```jsx
[
  {
    block_number: 16892442,
    block_timestamp: '2023-03-23T19:53:59Z',
    from_address: '0x77e3e957082ca648c1c5b0f3e6aec00ab1245186',
    log_index: 244,
    operator_address: '',
    to_address: '0xc58d63d59ad68930c9fdff6f1ac479c5c9941ef4',
    token_id: '0x1719',
    transaction_hash: '0xd4e351146e6bb87fc945bd334a98ab886473c6acdf52468ae69e35c3944b0c90',
    transaction_index: 108,
    value: '0'
  },
  {
    block_number: 16892439,
    block_timestamp: '2023-03-23T19:53:23Z',
    from_address: '0xfbff2739978790aa7655fb1b75bb1811e347c1fd',
    log_index: 229,
    operator_address: '',
    to_address: '0x77e3e957082ca648c1c5b0f3e6aec00ab1245186',
    token_id: '0x1e72',
    transaction_hash: '0x9b6f9c66adbdc0fd04c3e338bc35a076a8300d8dedfeb60f6110c8b0986f907f',
    transaction_index: 99,
    value: '0'
  },
  {
    block_number: 16892256,
    block_timestamp: '2023-03-23T19:16:23Z',
    from_address: '0x23d01763c1d3f5f0e8f2302cb143a4d069c816b6',
    log_index: 266,
    operator_address: '',
    to_address: '0x3b968d2d299b895a5fcf3bba7a64ad0f566e6f88',
    token_id: '0x04ea',
    transaction_hash: '0x01f8a9c333611a64b24fc29ba72c04e09c4582621b910b6c8829312fd5759a9e',
    transaction_index: 133,
    value: '0'
  },
  {
    block_number: 16892256,
    block_timestamp: '2023-03-23T19:16:23Z',
    from_address: '0x3b968d2d299b895a5fcf3bba7a64ad0f566e6f88',
    log_index: 274,
    operator_address: '',
    to_address: '0x70b97a0da65c15dfb0ffa02aee6fa36e507c2762',
    token_id: '0x04ea',
    transaction_hash: '0x01f8a9c333611a64b24fc29ba72c04e09c4582621b910b6c8829312fd5759a9e',
    transaction_index: 133,
    value: '0'
  },
  {
    block_number: 16892256,
    block_timestamp: '2023-03-23T19:16:23Z',
    from_address: '0x70b97a0da65c15dfb0ffa02aee6fa36e507c2762',
    log_index: 276,
    operator_address: '',
    to_address: '0x5f6ac80cdb9e87f3cfa6a90e5140b9a16a361d5c',
    token_id: '0x04ea',
    transaction_hash: '0x01f8a9c333611a64b24fc29ba72c04e09c4582621b910b6c8829312fd5759a9e',
    transaction_index: 133,
    value: '0'
  }
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get NFT owners by collection](/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get NFT metadata
Source: https://docs.chainbase.com/platform/usecases/nft-api/get-nft-metadata



The importance of NFT metadata lies in its ability to provide additional information about the NFT such as its name, description, image, and other attributes. This metadata is often used by marketplaces and collectors to display and search for NFTs. Additionally, the metadata can be used to verify the authenticity and ownership of an NFT.

To get NFT metadata, you can use the [Get NFT metadata](/api-reference/web3-api/nft/nft-metadata/get-nft-metadata) function, which returns JSON-formatted data that contains the metadata for the NFT.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. An NFT contract address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/e44419d-image.png)## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take the contract address of Azuki as an example.
token_id = '1'; // Token id should be in hex or num string. Here we take 1 as example.

fetch(`https://api.chainbase.online/v1/nft/metadata?chain_id=${network_id}&contract_address=${contract_addr}&token_id=${token_id}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take the contract address of Azuki as an example.
token_id = '1'; // Token id should be in hex or num string. Here we take 1 as example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/nft/metadata?chain_id=${network_id}&contract_address=${contract_addr}&token_id=${token_id}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print NFT metadata

Chainbase API [Get NFT metadata](/api-reference/web3-api/nft/nft-metadata/get-nft-metadata) takes the chain id, NFT contract address and NFT token id as parameters, and returns the metadata of that NFT.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the metadata of Azuki with the first token id on Ethereum is as follows by the time of Mar. 23rd, 2023.

```json
{
  "contract_address": "0xed5af388653567af2f388e6224dc7c4b3241c544",
  "name": "Azuki",
  "symbol": "AZUKI",
  "owner": "0xC8967D1537F7B995607A1DEa2B0C06E18A9756a2",
  "token_id": "0x1",
  "erc_type": "ERC721",
  "image_uri": "https://ikzttp.mypinata.cloud/ipfs/QmYDvPAXtiJg7s8JdRBSLWdgSphQdac8j1YuQNNxcGE1hg/1.png",
  "mint_time": "2022-01-12T04:17:28Z",
  "mint_transaction_hash": "0xc208fdb2f133bda64522fececd6518a565aaa6e8801b0a776f2f93c922fe9420",
  "token_uri": "https://ikzttp.mypinata.cloud/ipfs/QmQFkLSQysj94s5GvTHPyzTxrawwtjgiiYS2TBLgrvw8CW/1",
  "metadata": {
    "name": "Azuki #1",
    "image": "https://ikzttp.mypinata.cloud/ipfs/QmYDvPAXtiJg7s8JdRBSLWdgSphQdac8j1YuQNNxcGE1hg/1.png",
    "attributes": [
      {
        "trait_type": "Type",
        "value": "Human"
      },
      {
        "trait_type": "Hair",
        "value": "Pink Hairband"
      },
      {
        "trait_type": "Clothing",
        "value": "White Qipao with Fur"
      },
      {
        "trait_type": "Eyes",
        "value": "Daydreaming"
      },
      {
        "trait_type": "Mouth",
        "value": "Lipstick"
      },
      {
        "trait_type": "Offhand",
        "value": "Gloves"
      },
      {
        "trait_type": "Background",
        "value": "Off White D"
      }
    ]
  },
  "traits": [
    {
      "trait_type": "Type",
      "value": "Human"
    },
    {
      "trait_type": "Hair",
      "value": "Pink Hairband"
    },
    {
      "trait_type": "Clothing",
      "value": "White Qipao with Fur"
    },
    {
      "trait_type": "Eyes",
      "value": "Daydreaming"
    },
    {
      "trait_type": "Mouth",
      "value": "Lipstick"
    },
    {
      "trait_type": "Offhand",
      "value": "Gloves"
    },
    {
      "trait_type": "Background",
      "value": "Off White D"
    }
  ]
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get NFT metadata](/api-reference/web3-api/nft/nft-metadata/get-nft-metadata)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get NFT owner by token
Source: https://docs.chainbase.com/platform/usecases/nft-api/get-nft-owner-by-token



If you’re interested in buying or selling an NFT from a specific owner, you can use Chainbase API [Get NFT owner by token](/api-reference/web3-api/nft/nft-ownership/get-nft-owner-by-token) to get the current owner address of an NFT. What you need to prepare as an input is the contract address of the NFT collection and the token id of the NFT that you want to query with. With the owner information returned by Chainbase, you can contact them directly or make an offer through a marketplace platform.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. The contract address of a known NFT collection and the token id of that specific NFT as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take Azuki's contract address as an example.
token_id = '1';

fetch(`https://api.chainbase.online/v1/nft/owner?chain_id=${network_id}&contract_address=${contract_addr}&token_id=${token_id}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take Azuki's contract address as an example.
token_id = '1';

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/nft/owner?chain_id=${network_id}&contract_address=${contract_addr}&token_id=${token_id}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the owner of the NFT

Chainbase API [Get NFT owner by token](/api-reference/web3-api/nft/nft-ownership/get-nft-owner-by-token) takes the chain id, NFT contract address and NFT token id as parameters, and returns the owner address.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the address of `0xC8967D1537F7B995607A1DEa2B0C06E18A9756a2` is returned as the owner of the input NFT.

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get NFT owner by token](/api-reference/web3-api/nft/nft-ownership/get-nft-owner-by-token)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get NFT owners by collection
Source: https://docs.chainbase.com/platform/usecases/nft-api/get-nft-owners-by-collection



If you’re interested in the market of NFTs, it’s essential to know who the current owners of particular NFT collection are. Here are some steps to follow to get the owner information:

1. First, you need to identify the blockchain platform that the NFT collection is built on. Popular blockchain platforms for NFTs include Ethereum, Polygon, Binance Smart Chain, and so on.
2. Once you know the blockchain platform, you can use a blockchain explorer to search for the NFT contract address. A blockchain explorer is a tool that allows you to view transaction data on the blockchain.
3. After you find the NFT contract address, you can use Chainbase API [Get NFT owners by collection](/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection) to get all the owners of that NFT collection.

The following tutorial shows how to use Chainbase to get all the owners of a certain NFT collection. With this information, you can see who the largest holder of an NFT collection is.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. The contract address of a known NFT collection as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/d0ae1d1-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take Azuki's contract address as an example.

fetch(`https://api.chainbase.online/v1/nft/owners?chain_id=${network_id}&contract_address=${contract_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0xed5af388653567af2f388e6224dc7c4b3241c544'; // Take Azuki's contract address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/nft/owners?chain_id=${network_id}&contract_address=${contract_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the owners of the NFT collection

Chainbase API [Get NFT owners by collection](/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection) takes the chain id and NFT contract address as parameters, and returns the holders’ address and the corresponding total. You can also get the total holder number in the `count` column of the returned data.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the `data` column of the returned data looks as follows.

```jsx
{
  "address": "0xd46c8648f2ac4ce1a1aace620460fbd24f640853",
  "total": 374
},
{
  "address": "0xff3879b8a363aed92a6eaba8f61f1a96a9ec3c1e",
  "total": 290
},
{
  "address": "0x29469395eaf6f95920e59f858042f0e28d98a20b",
  "total": 224
},
{
  "address": "0x8e0788650afeedfb26f26bee874aed02688b2108",
  "total": 117
},
{
  "address": "0x54be3a794282c030b15e43ae2bb182e14c409c5e",
  "total": 113
},
{
  "address": "0x2ae6b0630ebb4d155c6e04fcb16840ffa77760aa",
  "total": 112
},
{
  "address": "0x0377aa308c44855217a1d900f39828d5d9def153",
  "total": 101
},
{
  "address": "0xb9330e17d30c57b4b192ae58140a72e0bfd3b718",
  "total": 91
},
{
  "address": "0x5d7aaa862681920ea4f350a670816b0977c80b37",
  "total": 91
},
{
  "address": "0x071b1116cc023763885865cfcc2e1daccc277419",
  "total": 90
},
{
  "address": "0x1e1936adba1d18be91694727086e40647decf375",
  "total": 71
},
{
  "address": "0x5e850e5a673dc4c9ce7790a0b2790937b11c8008",
  "total": 70
},
{
  "address": "0xa8189c566c8b602e23b016da819c11dae50160d6",
  "total": 69
},
{
  "address": "0xf6fe23577bd0e7a70421706ee1a4c526cadcbaf3",
  "total": 63
},
{
  "address": "0x96d3b7f663ed680f316781680464045f3458440b",
  "total": 59
},
{
  "address": "0x72695c2af4193029e0669f2c01d84b619d8c25e7",
  "total": 49
},
{
  "address": "0x04d7c2ee4cdbac9a0fc46d3e35e79aba5cca471d",
  "total": 47
},
{
  "address": "0xb0e59b0cf8f705f94c3d523aebbf8d4703a24fad",
  "total": 44
},
{
  "address": "0xd4f072b18c7a31d50bbf1df729b68e9ace7bc0d9",
  "total": 41
},
{
  "address": "0x3d9623f9f8c682d949be2bcaf3f692ab9c40b1d4",
  "total": 40
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get NFT owners by collection](/api-reference/web3-api/nft/nft-ownership/get-nft-owners-by-collection)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get ERC20 tokens owned by address
Source: https://docs.chainbase.com/platform/usecases/token-api/get-erc20-tokens-by-address



If you’re into cryptocurrency, you might want to use Chainbase API [Get ERC20 token balances](/api-reference/web3-api/balance/token-balances/get-erc20-token-balances) to build a simple wallet to check the balances! This API returns all ERC20 token balances that an address owns. You can also use this API to automate the process of checking your token balances, and save yourself a lot of time and effort.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A known wallet address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/1db103d-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

fetch(`https://api.chainbase.online/v1/account/tokens?chain_id=${network_id}&address=${wallet_addr}&limit=5&page=1`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
wallet_addr = '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045'; // Take Vitalik's wallet address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/account/tokens?chain_id=${network_id}&address=${wallet_addr}&limit=5&page=1`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the ERC20 token balances

Chainbase API [Get ERC20 token balances](/api-reference/web3-api/balance/token-balances/get-erc20-token-balances) takes the chain id and wallet address as parameters, and returns all ERC20 token balances that this wallet owns. You can also specify a certain token by feeding an address in the `contract_address` field.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the balances of some ERC20 tokens owned by Vitalik on Ethereum are as follows.

```jsx
{
  "balance": "0x2386f26fc10000",
  "contract_address": "0x954b7997b8bfa9b3d642c477549e284551012f05",
  "decimals": 9,
  "name": "Eterium",
  "symbol": "ETE"
},
{
  "balance": "0x97e328b058fe88019f7b",
  "contract_address": "0xff58ece2d4584139e3f136e18cae27deda947d3b",
  "decimals": 18,
  "name": "Uniswap V2",
  "symbol": "UNI-V2"
},
{
  "balance": "0x186a0",
  "contract_address": "0xa6de609807c7258a0d34f5307c1808f062a59794",
  "decimals": 0,
  "name": "$ USDCDrop.com",
  "symbol": "$ USDCDrop.com <- Visit to claim"
},
{
  "balance": "0x36f4bc072a511af5",
  "contract_address": "0x92d6c1e31e14520e676a687f0a93788b716beff5",
  "decimals": 18,
  "name": "dYdX",
  "symbol": "DYDX"
},
{
  "balance": "0x4700c3e20f38dcc",
  "contract_address": "0xa0a85f43c5e286187266833a5e986cb8a1a8b9f9",
  "decimals": 9,
  "name": "Apollo 11",
  "symbol": "APOLLO"
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get ERC20 token balances](/api-reference/web3-api/balance/token-balances/get-erc20-token-balances)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get all ERC20 transfers by contract
Source: https://docs.chainbase.com/platform/usecases/token-api/get-erc20-transfers-by-contract



If you want to automatically get all the transfers of an ERC20 token, try Chainbase API [Get token transfers by contract](/api-reference/web3-api/token/token-transfers/get-token-transfers-by-contract). You can easily retrieve all the transfers for any ERC20 token with its contract address by using Chainbase API.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A contract address of an ERC20 token as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/3bcb41a-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take Matic Token's contract address as an example.

fetch(`https://api.chainbase.online/v1/token/transfers?chain_id=${network_id}&contract_address=${contract_addr}&page=1&limit=5`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take Matic Token's contract address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/transfers?chain_id=${network_id}&contract_address=${contract_addr}&page=1&limit=5`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print metadata of an ERC20 token

Chainbase API [Get token transfers by contract](/api-reference/web3-api/token/token-transfers/get-token-transfers-by-contract) takes the chain id and token contract address as parameters, and returns all the transfers of that ERC20 token. If you want to know transfers related to one specific address, input the address information in the `address` field. You can also know the total transfer times through the `count` field in the returned data.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the data returned looks as follows.

```jsx
{
  "block_number": 17182749,
  "block_timestamp": "2023-05-03T21:06:23Z",
  "from_address": "0x25feaf3f5f36b44d0cb5a9c735d205e66f94437c",
  "log_index": 292,
  "to_address": "0xa3fd5a303020f2eeee79d9fc4ae468bca6bccc56",
  "transaction_hash": "0x443b17a0ea6418b4b0e467dd7c495034bf13c2be65dc8fca958f4a8ec7c53513",
  "transaction_index": 137,
  "tx_fee": 3918874072581520,
  "tx_type": 2,
  "value": "188992828092557071964"
},
{
  "block_number": 17182747,
  "block_timestamp": "2023-05-03T21:05:59Z",
  "from_address": "0x0979850acd0133fbf330e3d2f2540e111b77e969",
  "log_index": 329,
  "to_address": "0x1522900b6dafac587d499a862861c0869be6e428",
  "transaction_hash": "0xf1208710548fe0ac4ad9d6e3a2157adc741f8eeca0914d2cb680a18cb7ac42fd",
  "transaction_index": 139,
  "tx_fee": 4530117915638504,
  "tx_type": 2,
  "value": "2178406783020000000000"
},
{
  "block_number": 17182742,
  "block_timestamp": "2023-05-03T21:04:59Z",
  "from_address": "0xd9a506404e71e1f461a1d532a1f748aa1a52c437",
  "log_index": 259,
  "to_address": "0x51a9f80cdfe9c6996d95e5f6b6d029ed7ddd5001",
  "transaction_hash": "0x0d823b7261b741474d7635913abc315c4f188756b0e793b2eb5276f463efcb63",
  "transaction_index": 95,
  "tx_fee": 4091630857640924,
  "tx_type": 2,
  "value": "419123260000000000000"
},
{
  "block_number": 17182734,
  "block_timestamp": "2023-05-03T21:03:11Z",
  "from_address": "0x21a31ee1afc51d94c2efccaa2092ad1028285549",
  "log_index": 169,
  "to_address": "0x0979850acd0133fbf330e3d2f2540e111b77e969",
  "transaction_hash": "0x5b08286a38964c59925019f1f57b9b49270481cc97875bcc866d3eadb1f6a5cc",
  "transaction_index": 66,
  "tx_fee": 4178649496106592,
  "tx_type": 2,
  "value": "2178406783020000000000"
},
{
  "block_number": 17182733,
  "block_timestamp": "2023-05-03T21:02:59Z",
  "from_address": "0x28c6c06298d514db089934071355e5743bf21d60",
  "log_index": 216,
  "to_address": "0xf23500fec72b26535a2d61383a665439919f287f",
  "transaction_hash": "0xa135997a18e3aa2413b1e2cf262db44fa0418758c57dc0b5b1e8456fcedfba32",
  "transaction_index": 72,
  "tx_fee": 4095379462808136,
  "tx_type": 2,
  "value": "4133504000000000000000"
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get token transfers by contract](/api-reference/web3-api/token/token-transfers/get-token-transfers-by-contract)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get holders of an ERC20 token
Source: https://docs.chainbase.com/platform/usecases/token-api/get-holders-of-a-token



Chainbase offers an ability to get all the holders of a certain token. With one single API call, you can get a list of all the holders’ addresses of the token. In this tutorial, we will showcase how to use Chainbase API [Get token holders](/api-reference/web3-api/token/token-holders/get-token-holders) to get the holders of a cryptocurrency deployed on chains. With this information, you can develop strategies to collaborate with these holders and improve the overall value of your cryptocurrency.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A token address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take MATIC token address as an example.

fetch(`https://api.chainbase.online/v1/token/holders?chain_id=${network_id}&contract_address=${token_addr}&page=1&limit=20`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take MATIC token address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/holders?chain_id=${network_id}&contract_address=${token_addr}&page=1&limit=20`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print token holders

Chainbase API [getTokenHolders](/reference/gettokenholders) takes the chain id and the contract address of a certain ERC20 token as parameters, and returns the holders of that token. You can also set the parameters `page` and `limit` to do the pagination and set the limitation.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the return data looks as follows. Note that since this API only returns unsorted token holders, query result may vary every time. If you want to get the top token holders, you can try another API called [getTopTokenHolders](/reference/gettoptokenholders).

```json
[
  "0xe31fcac26fccf1fda8a99b033bfae82c8c44df63",
  "0xf60328d7eabe4196a7d530721d4da5316c435fc5",
  "0x38a0c3aaaac2736915f0e5e7044aa6fd90c22f7e",
  "0xfa79dcccb2c4c8eaaf21de271020919e1a4b093e",
  "0x00e4487f5b43540614ddcb835b5afdabe19f1ed4",
  "0x2f13499c1e391896762b8c1a6c88390113ca54c4",
  "0xcad779f8b51f1043efbd365f6b7353670633415c",
  "0x880e295d5fabc24340b547146b29119a7aa3ce9f",
  "0xc75b46aea8538e6f1269d2fe73d1ca92002b1c37",
  "0x6067aedebf0704d178674b16dbf0d7c6c5d5d03e",
  "0xcd97b55b07d2a4f397ea513c0fd9f899fa01fbe1",
  "0xed6425f466ebd178fc3060a0d60eb1a609cf5558",
  "0x8c372e79195f0113942012e7e52dfe30c5606962",
  "0xbdc034c242e4ef08e56539bc6141c1e3847b60b9",
  "0x28c497c274bfae45bcadd2f19a941d346fc741ab",
  "0x1ad9a52e8d1f1e957415d3407ab9a8bdcf5decd1",
  "0x73c4eb25fadf7edb6087f130fea23a90aab88a65",
  "0xad270298f03ae7ed9f211fe25f4b90a2c711262d",
  "0xde85dfd2e53d0f01852a4a64d0e3ab644fb0e965",
  "0x51edc446851a6063c6489f575602e4482e9a0bff"
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get token holders](/api-reference/web3-api/token/token-holders/get-token-holders)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get Token Metadata
Source: https://docs.chainbase.com/platform/usecases/token-api/get-token-metadata



If you want to automatically get the metadata of some ERC20 tokens, definitely check out Chainbase API [Get token metadata](/api-reference/web3-api/token/token-metadata/get-token-metadata). You can easily retrieve the metadata for any ERC20 token with its contract address by using Chainbase API.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A contract address of an ERC20 token as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/f7e1816-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take Matic Token's contract address as an example.

fetch(`https://api.chainbase.online/v1/token/metadata?chain_id=${network_id}&contract_address=${contract_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
contract_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take Matic Token's contract address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/metadata?chain_id=${network_id}&contract_address=${contract_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print metadata of an ERC20 token

Chainbase API [Get token metadata](/api-reference/web3-api/token/token-metadata/get-token-metadata) takes the chain id and token contract address as parameters, and returns the metadata of the ERC20 token.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the data returned looks as follows.

```jsx
{
	"contract_address": "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
	"name": "Matic Token",
	"symbol": "MATIC",
	"decimals": 18,
	"total_supply": "0x204fce5e3e25026110000000"
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get token metadata](/api-reference/web3-api/token/token-metadata/get-token-metadata)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get the price of a token
Source: https://docs.chainbase.com/platform/usecases/token-api/get-token-price



ERC20 tokens are one of the most popular types of cryptocurrencies in the market. These tokens are built on the Ethereum blockchain and are used for a variety of purposes, ranging from utility tokens for decentralized applications to security tokens for fractional ownership of assets.

As an investor or trader, it is important to keep track of the price of ERC20 tokens to make informed decisions about buying, selling or holding them. Fortunately, Chainbase provides a direct API [Get token price](/api-reference/web3-api/token/market-data/get-token-price) to get the price of different ERC20 tokens.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A token address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/a219134-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0xdAC17F958D2ee523a2206206994597C13D831ec7'; // Take USDT as an example.

fetch(`https://api.chainbase.online/v1/token/price?chain_id=${network_id}&contract_address=${token_addr}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0xdAC17F958D2ee523a2206206994597C13D831ec7'; // Take USDT as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/price?chain_id=${network_id}&contract_address=${token_addr}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print the token price

Chainbase API [Get token price](/api-reference/web3-api/token/market-data/get-token-price) takes the chain id and the contract address of a certain ERC20 token as parameters, and returns the price of that token.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the return data looks as follows. Note that `updated_at` indicates the GMT time when you query the data, which may vary accordingly.

```json
{
  price: 1.001497299920505,
  symbol: 'usd',
  source: 'coinmarketcap',
  updated_at: '2023-03-21T19:37:49.249213Z'
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get token price](/api-reference/web3-api/token/market-data/get-token-price)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get the historical price of a token
Source: https://docs.chainbase.com/platform/usecases/token-api/get-token-price-history



ERC20 tokens are one of the most popular types of cryptocurrencies in the market. These tokens are built on the Ethereum blockchain and are used for a variety of purposes, ranging from utility tokens for decentralized applications to security tokens for fractional ownership of assets.

Getting the price of ERC20 tokens is important for anyone interested in investing, trading or using these tokens. By using Chainbase Web3 API [Get token price history](/api-reference/web3-api/token/market-data/get-token-price-history), you can easily get the historical price of any ERC20 token and make informed decisions about your investments.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A token address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/4add7fc-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'; // Take Uniswap as an example.
start_time = '1675209600'; // 2023-02-01 00:00:00 GMT in the format of epoch time.
end_time = '1677628800'; // 2023-03-01 00:00:00 GMT in the format of epoch time.

fetch(`https://api.chainbase.online/v1/token/price/history?chain_id=${network_id}&contract_address=${token_addr}&from_timestamp=${start_time}&end_timestamp=${end_time}`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'; // Take Uniswap as an example.
start_time = '1675209600'; // 2023-02-01 00:00:00 GMT in the format of epoch time.
end_time = '1677628800'; // 2023-03-01 00:00:00 GMT in the format of epoch time.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/price/history?chain_id=${network_id}&contract_address=${token_addr}&from_timestamp=${start_time}&end_timestamp=${end_time}`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print historical ERC20 token price

Chainbase API [Get token price history](/api-reference/web3-api/token/market-data/get-token-price-history) takes the chain id, the contract address of a certain ERC20 token, start time and end time as parameters, and returns the historical price of that token during that time period.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the return data looks as follows:

```jsx
[
  {
    price: 6.6237146793,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-01T23:59:59.999Z'
  },
  {
    price: 7.1550444184,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-02T23:59:59.999Z'
  },
  {
    price: 7.1167093251499995,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-03T23:59:59.999Z'
  },
  {
    price: 7.1834694101,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-04T23:59:59.999Z'
  },
  {
    price: 7.049937684650001,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-05T23:59:59.999Z'
  },
  {
    price: 6.7917602634000005,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-06T23:59:59.999Z'
  },
  {
    price: 6.82329800405,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-07T23:59:59.999Z'
  },
  {
    price: 6.83219219495,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-08T23:59:59.999Z'
  },
  {
    price: 6.5479483018,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-09T23:59:59.999Z'
  },
  {
    price: 6.36619272515,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-10T23:59:59.999Z'
  },
  {
    price: 6.419106789800001,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-11T23:59:59.999Z'
  },
  {
    price: 6.4317005003,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-12T23:59:59.999Z'
  },
  {
    price: 6.2416657869,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-13T23:59:59.999Z'
  },
  {
    price: 6.40747352395,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-14T23:59:59.999Z'
  },
  {
    price: 6.72155940455,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-15T23:59:59.999Z'
  },
  {
    price: 6.7466053510999995,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-16T23:59:59.999Z'
  },
  {
    price: 6.643339516199999,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-17T23:59:59.999Z'
  },
  {
    price: 6.9235315568,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-18T23:59:59.999Z'
  },
  {
    price: 7.26405054115,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-19T23:59:59.999Z'
  },
  {
    price: 7.2201725397,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-20T23:59:59.999Z'
  },
  {
    price: 7.176846230000001,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-21T23:59:59.999Z'
  },
  {
    price: 6.887425031,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-22T23:59:59.999Z'
  },
  {
    price: 6.9424512611499996,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-23T23:59:59.999Z'
  },
  {
    price: 6.769519020000001,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-24T23:59:59.999Z'
  },
  {
    price: 6.46331101405,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-25T23:59:59.999Z'
  },
  {
    price: 6.5404623576,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-26T23:59:59.999Z'
  },
  {
    price: 6.5136950666,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-27T23:59:59.999Z'
  },
  {
    price: 6.5167469885,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-02-28T23:59:59.999Z'
  },
  {
    price: 6.66707470645,
    symbol: 'usd',
    source: 'coinmarketcap',
    updated_at: '2023-03-01T23:59:59.999Z'
  }
]
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get token price history](/api-reference/web3-api/token/market-data/get-token-price-history)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Get top token holders
Source: https://docs.chainbase.com/platform/usecases/token-api/get-top-token-holders



In this tutorial, we will showcase how to use Chainbase API [Get top token holders](/api-reference/web3-api/token/token-holders/get-top-token-holders) to get the top holders of a cryptocurrency deployed on Ethereum. You can use this information to contact the tope token holders and propose collaborations, partnerships, or other mutually beneficial arrangements.

## Overview - Tools you need to work with Chainbase

1. A free account at [Chainbase](https://www.chainbase.com) with an API key.
2. An IDE. Our examples are shown in JavaScript, you can use [VS Code](https://code.visualstudio.com/) as your IDE for example.
3. A token address as your input.

## Step 1: Set up a free account at Chainbase

To better leverage the ability that Chainbase provides, you can register [here](http://www.chainbase.com/register) for a free account and access to different APIs and data cloud.

After logging into Chainbase, visit the [dashboard](https://console.chainbase.com/) to get an overview. Create a new project in the console and get an API key.

![](https://files.readme.io/e5fe064-image.png)

## Step 2: Write script using Chainbase API

1. Using `fetch` in JavaScript.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take MATIC token address as an example.

fetch(`https://api.chainbase.online/v1/token/top-holders?chain_id=${network_id}&contract_address=${token_addr}&page=1&limit=5`, {
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
}).then(response => response.json())
    .then(data => console.log(data.data))
    .catch(error => console.error(error));
```

2. Using `axios` in JavaScript. You need to install `axios` using `npm install axios --save` in the terminal first.

```jsx
network_id = '1'; // See https://docs.chainbase.com/reference/supported-chains to get the id of different chains.
token_addr = '0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0'; // Take MATIC token address as an example.

const axios = require('axios');
const options = {
    url: `https://api.chainbase.online/v1/token/top-holders?chain_id=${network_id}&contract_address=${token_addr}&page=1&limit=5`,
    method: 'GET',
    headers: {
        'x-api-key': CHAINBASE_API_KEY, // Replace the field with your API key.
        'accept': 'application/json'
    }
};
axios(options)
    .then(response => console.log(response.data.data))
    .catch(error => console.log(error));
```

## Step 3: Print token holders

Chainbase API [Get top token holders](/api-reference/web3-api/token/token-holders/get-top-token-holders) takes the chain id and the contract address of a certain ERC20 token as parameters, and returns the top holders of that token. You can also set the parameters `page` and `limit` to do the pagination and get top holders.

To get data printed, run command `node <filename>.js` in the terminal. In this case, the return data looks as follows by Apr. 4th, 2023.

```json
{
  "count": 593525,
  "holders": [
    {
      "wallet_address": "0x5e3ef299fddf15eaa0432e6e66473ace8c13d908",
      "amount": "3814264335.329752",
      "usd_value": "4167560569.389670"
    },
    {
      "wallet_address": "0x401f6c983ea34274ec46f84d70b31c151321188b",
      "amount": "910440417.955799",
      "usd_value": "994769961.668955"
    },
    {
      "wallet_address": "0xcd6507d87f605f5e95c12f7c4b1fc3279dc944ab",
      "amount": "590639315.000000",
      "usd_value": "645347281.551875"
    },
    {
      "wallet_address": "0xb316fa9fa91700d7084d377bfdc81eb9f232f5ff",
      "amount": "434226114.715070",
      "usd_value": "474446308.590553"
    },
    {
      "wallet_address": "0xcbfe11b78c2e6cb25c6eda2c6ff46cd4755c8fca",
      "amount": "273304816.000000",
      "usd_value": "298619674.582000"
    }
  ]
}
```

## API Reference

If you want to know more details on the endpoint and optional parameters, check out:

* [Get top token holders](/api-reference/web3-api/token/token-holders/get-top-token-holders)

## Support

If you meet any trouble following the tutorial, feel free to reach out to us in our [Discord](https://chainbase.com/discord) to get 24/7 community support.


# Decentralized DORA Tuning
Source: https://docs.chainbase.com/theia/Developers/Glossary/D2ORA



### Abstract

$D^2ORA$ (Decentralized Weight-Decomposed Low-Rank Adaptation) extends the DoRA algorithm to a decentralized environment, enabling distributed training across multiple servers.

### $D^2ORA$ Algorithm

#### Step 1: Initialization

We first initialize the parameter matrices of Theia and the low-rank matrices.

* **Magnitude Vector Initialization**:
  Initialize the magnitude vector $m$ using the column-wise norm of the pre-trained weight matrix $W_0$:
  $$
  m = ||W_0||_c
  $$

* **Directional Matrix Initialization**:
  Set the directional matrix $V$ to the pre-trained weight matrix $W_0$:
  $$
  V = W_0
  $$

* **Low-Rank Matrices Initialization**:
  Initialize the low-rank matrices $B$ and $A$ for the LoRA method.

#### Step 2: Decomposition

Decompose the pre-trained weight matrix $W_0$ into its magnitude and direction components. The pre-trained weight is directly derived from the NLP model.

* **Magnitude Decomposition**:
  $$
  m = ||W_0||_c
  $$

* **Directional Decomposition**:
  $$
  V = W_0 / ||W_0||_c
  $$

#### Step 3: Distributed Training

For each server in the decentralized network, perform the following:

* **Distribution**:
  Distribute the initialized $m$, $V$, $B$, and $A$ to all servers.

* **Iterations**:
  For each iteration $t$ from 1 to $T$:

  * **Weight Update Calculation**:
    Compute the weight update $\Delta W$ using the low-rank adaptation method:
    $$
    \Delta W = BA
    $$

  * **Magnitude Vector Update**:
    Update the magnitude vector $m$:
    $$
    m = m - \eta \nabla_m L(m, V)
    $$

  * **Directional Matrix Update**:
    Update the low-rank matrices $B$ and $A$ with gradient descent:
    $$
    B = B - \eta \nabla_B L(B, A)
    $$
    $$
    A = A - \eta \nabla_A L(B, A)
    $$

#### Step 4: Aggregation

After all iterations are completed, collect updates from all servers and aggregate them:

* **Magnitude Vector Aggregation**:
  $$
  m' = \text{aggregate}(m)
  $$

* **Directional Matrix Aggregation**:
  $$
  V' = \text{aggregate}(V)
  $$

* **Low-Rank Matrices Aggregation**:
  $$
  B' = \text{aggregate}(B)
  $$
  $$
  A' = \text{aggregate}(A)
  $$

#### Step 5: Merging

Merge the updated components to form the final weight matrix:

* **Final Weights Calculation**:
  $$
  W' = m' \frac{V'}{||V'||_c} + B'A'
  $$

#### Step 6: Return Updated Weights

Return the updated weights $W'$ as the final output of the algorithm. We use it as the weight parameters of Theia.

### Summary

D^2ORA enhances the capabilities of DoRA by enabling decentralized training across multiple servers. This approach leverages blockchain technology to ensure trustworthiness, making it suitable for training AI models in a distributed and secure environment.


# Generate to Defend (G2D)
Source: https://docs.chainbase.com/theia/Developers/Glossary/G2D



## Necessity

For any AI models, adversarial attacks occur because attackers exploit vulnerabilities in the model's parameters by crafting inputs that cause the model to make incorrect predictions. These attacks are particularly effective when the model parameters remain static, allowing attackers ample time to probe and understand the model's weaknesses. The necessity of the Generate to Defend (G2D) algorithm arises from the need to counteract these attacks by periodically regenerating model parameters, thereby preventing attackers from gaining prolonged access to a consistent set of parameters. By continually altering the model parameters while maintaining performance, G2D disrupts the attackers' ability to reliably exploit the model, thus enhancing its robustness against adversarial threats, similar to frequently changing passwords to increase security.

### Generate to Defend (G2D) Algorithm

The G2D algorithm periodically generates new model parameters to prevent adversarial attacks by ensuring that the model parameters are not exposed for extended periods. The key idea is to tailor a diffusion model to create new parameters that maintain the model's performance while being sufficiently different from the original parameters. This is achieved by adding a regularizer to the diffusion process that maximizes the L1 distance between the generated parameters and the original parameters.

**1. Preliminaries of Diffusion Models:**

Diffusion models consist of forward and reverse processes indexed by timesteps. We summarize these processes below:

**Forward Process:**
Given a sample $x_0 \sim q(x)$, Gaussian noise is progressively added for $T$ steps to obtain $x_1, x_2, \ldots, x_T$. This process is described by:

$$
q(x_t | x_{t-1}) = \mathcal{N}(x_t; \sqrt{1 - \beta_t} x_{t-1}, \beta_t I)
$$

**Reverse Process:**
The reverse process aims to train a denoising network to remove the noise from $x_t$, moving backward from $x_T$ to $x_0$:

$$
p_\theta(x_{t-1} | x_t) = \mathcal{N}(x_{t-1}; \mu_\theta(x_t, t), \Sigma_\theta(x_t, t))
$$

The denoising network is optimized using the negative log-likelihood:

$$
L_{dm} = \text{KL}(q(x_{t-1} | x_t, x_0) \parallel p_\theta(x_{t-1} | x_t))
$$

**2. Embedding Model into Compact Space:**

To prepare the data, we train an autoencoder to extract latent representations of the model parameters. The encoding and decoding processes are formulated as:

$$
Z = f_{\text{encoder}}(V + \xi_V, \sigma)
V' = f_{\text{decoder}}(Z + \xi_Z, \rho)
$$

where $V$ is the set of model parameters, $Z$ is the latent representation, $\xi_V$ and $\xi_Z$ are added Gaussian noise, and $\sigma$ and $\rho$ are parameters of the encoder and decoder, respectively. The autoencoder is trained by minimizing the mean square error (MSE) loss:

$$
L_{MSE} = \frac{1}{K} \sum_{k=1}^K \| v_k - v'_k \|^2
$$

**3. Training Diffusion Models with Regularizer:**

We modify the diffusion process to include a regularizer that maximizes the L1 distance between the generated parameters and the original parameters. The training objective for the diffusion model with the additional regularizer is given by:

$$
\theta \leftarrow \theta - \nabla_\theta \left( \| \epsilon - \epsilon_\theta (\sqrt{\bar{\alpha}_t} z_k^0 + \sqrt{1 - \bar{\alpha}_t} \epsilon, t) \|^2 + \lambda \| \theta_{\text{gen}} - \theta_{\text{orig}} \|_1 \right)
$$

where $\lambda$ is a hyperparameter that controls the importance of the regularizer, $\theta_{\text{gen}}$ are the generated parameters, and $\theta_{\text{orig}}$ are the original parameters.

**4. Model Generation:**

During inference, random noise is fed into the trained diffusion model and decoder to generate new sets of model parameters:

$$
\theta_{\text{gen}} = f_{\text{decoder}}( \text{ReverseProcess}(\text{Random Noise}))
$$

These generated parameters are then used to replace the existing model parameters, ensuring the model's resilience against adversarial attacks by frequently updating its parameters. This modified diffusion process ensures that the new parameters are significantly different from the original ones, thereby enhancing the model's defense against adversarial attacks while maintaining its performance.

After the model is trained, the Step 4 is executed periodically to randomize AI model parameters, so that the cost of attack is significantly increased. The more frequent we generate, the safer our AI model become. To generate a new parameter, only a diffusion process is inferenced in a cost-effective manner.


# Open APIs
Source: https://docs.chainbase.com/theia/Developers/Open-APIs



*This model is currently in its early stages and is not yet open to the public. If you want to experience it, please [click here](https://chainbase.com/contact) to apply and contact us.*


# FAQs
Source: https://docs.chainbase.com/theia/Resources/FAQs



## Coming soon


# Roadmap
Source: https://docs.chainbase.com/theia/Resources/Roadmap



Theia is the next-generation crypto world model that provides foundation knowledge and AI capability for the web3 era. To achieve this goal, the roadmap details the path to more intelligent, secure and transparent Theia model.

## Phase 1: Theia Demo Online

📅 June 20, 2024, 12:25:00 PM +UTC

To let every crypto participator touch the crypto intelligence of Theia, we first open the interactive demo for Theia. It connects users with crypto knowledge in an exciting way - talk to Theia and get what you want.

## Phase 2: Theia Agent Ecosystem

📅 August 1, 2024, 12:25:00 PM +UTC

**1. Knowledge Construction and Theia Expert Model (Agent)**

We will create and expand the "Crypto Patterns" (i.e., expert and AI knowledge database) with community contributions and provide an interface to build Theia Agent Expert and any users can upload their own prompts (expert experiences) through this interface. Once reviewed by us, the agent can run on our model and interact with the Chainbase Network.

**2. Marketplace**

Open the marketplace for the agents built in Phase Two, allowing any Chainbase user to select specific agents from the marketplace to serve specific goals.

## Phase 3: Continuous Model Tuning and Patterns Accumulation

To continuously increase the Theia intelligence, we will fine-tune our model periodically, and encourage the community to enrich the "crypto patterns".


# Thesis
Source: https://docs.chainbase.com/theia/Resources/Whitepaper



## Coming soon


# How to Create Task Models
Source: https://docs.chainbase.com/theia/TheiaChat/create-task-models



## Methodology

Theia Task Models is constructed using prompt and data engineering. We introduce these novel concepts including prompt engineering, RAG, and model self-tuning, which is used to build Theia Task Models.

### 1. Prompt Engineering

Prompt engineering refers to a series of instruction for Theia. It can trigger Theia to wake up specific capability in some field and work as a task model as instructed. The instruction should be clear and the output format can be defined. To build a good task model, we normally tell Theia three important messages: role, hint for reasoning and generation, and goal.

For example, to build a crypto investment advisor, we can write the prompt including the three messages:

* **Role:** Theia, you are an investment advisor.
* **Hint:** Whenever I provide you a whitepaper of a project, please analyze the whitepaper and search the news of this project.
* **Goal:** Then generate an investment advisory report.

Thus, the complete prompt is "Theia, you are an investment advisor. Whenever I provide you a whitepaper of a project, please analyze the whitepaper and news of this project. Then generate an investment advisory report."

### 2. Retrieval-Augmented Generation (RAG)

RAG is a method to integrates retrieval-based models with AI models, utilizing the intelligence of AI to analyze data and generate results according to specific objectives. It mainly consists of three steps:

* **Data Retrieval:** Retrieve relevant information from external datasets, e.g., the price variation of BTC in the past 3 months.
* **Task Objective:** Define the objective of RAG by prompt engineering, e.g., "find the buying and selling signals according to the MACD".
* **Augmented Generation:** Input the retrieved data into the Theia Task Model to get the augmented results.

Note that the data quality is one of the keys that decides the success of RAG. However, to obtain high-quality on-chain data, developers usually spent lots of time on extracting and aggregating data from blockchain. In Theia ecosystem, we are supported by Chainbase omnichain datanetwork, therefore providing massive high-quality data for users to build Theia task model in a cost-ffective and efficient fashion.

### 3. Model Self-Tuning

Though prompt engineering and RAG can utilize the capabilities of Theia, the intelligence of Theia is actually not improved in the parameter level, e.g., the intrinsic IQ of Theia. To really increase the IQ of Theia for higher-level task, model self-tuning is proposed. As our community uses Theia and its task models, many dialogues data are generated. They are the new "courses and books" Theia needs to read and learn. Furthermore, the developers are encouraged to upload manually labelled data that is also valuable to increase the Theia intelligence. The more data Theia sees, the higher intelligence it has.

The model self-tuning is based on the **Decentralized Weight-Decomposed Low-Rank Adaptation ($D^2ORA$)** algorithm that fine-tunes Theia periodically. The $D^2ORA$ algorithm focuses on updating the crypto-specific parameter matrix, ensuring that Theia Task Models continually enhance their expertise in the crypto domain as more and more users build task models upon Theia.

## How to create Theia Task Models in Theia?

Coming soon (Phase 3)


# Overview
Source: https://docs.chainbase.com/theia/TheiaChat/overview



TheiaChat is an AI agent built by Chainabse Labs based on Theia, the first crypto world model. TheiaChat provides an interface through which non-expert users can interact with the Chainbase Network, opening up the ability to obtain on-chain data intelligence to everyone for the first time.

Users can enhance the Chainabse Network when interacting with TheiaChat and benefit from it. This mainly involves two types of users:

1. **Non-Expert Users:** people without blockchain knowledge and skills, such as blockchain beginners. They can enhance the Chainbase Network by having conversations with TheiaChat and providing feedback on the results of the conversations, and the network rewards serious and honest users.
2. **Expert Users:** People with blockchain knowledge and skills, such as professional traders and security experts. They can enhance the Chainbase Network by building Theia Task Models in TheiaChat, and the network will reward Task Model builders with high adoption.

Chainbase Labs built the **Theia Security Model (TSM)** as an example to show the ability to build a Task Model based on the crypto world model Theia in TheiaChat. It is a security expert to offer advice in the crypto world, e.g., how to protect my wallet and money. It is constructed by training Theia with security books and community advice.

## How do interactions with TheiaChat enhance the Chainbase Network?

Every user interaction with TheiaChat and every task model built are enhancements to the under hood chainbase network. The basic logic is that these actions will directly trigger **Change Data Captures (CDCs, aka Changelog)**, and these contents are permanently stored on Arweave.

These are powerful complement to the Chainbase Network. It is also the first time that users can contribute data to enhance the Chainbase Network. Before this, only developers could enhance the network by building Manuscripts in the network. **This is the historical transformation of Chainbase Network from targeting 300,000 developers to targeting 30 million to 300 million users.**

In addition, every Changelog is a transaction on the Chainbase Network, which is permanently recorded on the Chainbase Network, and is public, censorship-resistant and cannot be manipulated. Its traceability guarantees the data income rights of every data producer.


# Task Models
Source: https://docs.chainbase.com/theia/TheiaChat/task-models



To trigger the versatile capabilities of Theia in the crypto world, we propose Theia Task Model built upon Theia model. Theia Task Model is designed to serve various needs within the crypto world, and is open to developer community that maximizes its value. Briefly speaking, developers can leverage prompt engineering, Retrieval-Augmented Generation (RAG) and real-time on-chain data, to provide specialized functions such as trading Task Model, security Task Model, and public opinion monitoring Task Model. Moreover, integrated with Chainbase omnichain data network, Theia Task Models are capable of interpreting these complex data and offering actionable insights, making them invaluable tools for users navigating the crypto ecosystem.

## Potential Applications of Theia Task Model

### 1. Theia Security Task Model

Theia Security Task Model could be focused on enhancing the security of wallets, projects, and overall blockchain infrastructure. Possible capabilities include:

* **Vulnerability Assessment:** Conduct thorough security assessments of wallets and blockchain projects, identifying potential vulnerabilities and recommending mitigation strategies.
* **Real-Time Threat Monitoring:** Utilize real-time data to detect and respond to security threats, ensuring timely intervention and protection against attacks.
* **Compliance and Audits:** Assist in ensuring compliance with security standards and conducting regular security audits to maintain robust security postures.

### 2. Theia Trading Task Model

Theia Trading Task Model could be developed to assist users in creating and optimizing trading strategies. Potential features include:

* **Market Trend Analysis:** Monitor and analyze market movements, historical data, and emerging trends to provide actionable insights.
* **Strategy Optimization:** Suggest and optimize trading strategies based on the latest data and patterns, improving decision-making and potential returns.
* **Risk Management:** Evaluate and manage trading risks by assessing market volatility and other risk factors, offering tailored advice to mitigate potential losses.

### 3. Theia Opinion Task Model

Theia Opinion Task Model could specialize in monitoring and analyzing public opinions across social networks and other platforms. Key functionalities might include:

* **Sentiment Analysis:** Track and analyze sentiment around specific topics, projects, or cryptocurrencies, providing valuable insights into public perception.
* **Trend Detection:** Identify emerging trends and shifts in public opinion, helping users stay ahead of market sentiment and community dynamics.
* **Influence Measurement:** Evaluate the impact of key influencers and events on public opinion, offering insights into how these factors shape market and community behavior.

## Summary

Theia Task Model is a powerful and adaptable system designed to meet the diverse needs of the crypto world. By leveraging advanced technologies like RAG and real-time on-chain data, Theia Task Models provide users with actionable insights and specialized functions. Potential applications such as trading strategy development, security analysis, and public opinion monitoring illustrate the wide-ranging capabilities of Theia Task Model, making it an invaluable partner in navigating the complex and rapidly evolving crypto ecosystem.


# Features
Source: https://docs.chainbase.com/theia/World_model/features



In Web3, Theia excels with its native high performance, robust security measures, and transparent reasoning, making it a next-generation Crypto World Model tailored for the Web3 community.

#### 1. Crypto Native with High Performance

Theia is a native World Model for the crypto ecosystem, trained using the on-chain data from Chainbase omnichain data network and off-chain data from the Internet. It leverages a unique **Decentralized Weight-Decomposed Low-Rank Adaptation ($D^2ORA$) algorithm**, which allows for training a specialized crypto parameter matrix without modifying the parameters of the base natural language processing (NLP) model. By combining these parameters, Theia integrates the robust natural language capabilities of large language models (LLMs) with expert-level knowledge of both on-chain and off-chain crypto data. This results in superior Web3 attributes and performance compared to models like ChatGPT.

#### 2. Security

To enhance security, Theia employs generative AI to periodically update its digital persona. AI models are susceptible to attacks where adversaries can exploit model parameters to induce errors or generate targeted results. This vulnerability arises from the ability to reverse-engineer gradients from the model's parameters. Theia addresses this issue with an innovative **Generate to Defend (G2D)** algorithm, which uses generative diffusion models to capture and randomize the parameter space. This approach periodically refreshes Theia's parameters, preventing exhaustive attacks and model leaks with minimal cost.

#### 3. Transparency

Theia is built to be transparent through the extensive learning and summarization of crypto patterns from both on-chain and off-chain data. These patterns represent explicit rules inherent in the Web3 world. When users interact with Theia, they can transparently observe its reasoning process, ensuring reliability. Additionally, users have the ability to manually modify or add new patterns, allowing them to contribute their own crypto insights and perspectives, further enhancing Theia's intelligence.

<CardGroup cols={2}>
  <Card title="D2oRA" icon="binary" href="../Developers/Glossary/D2ORA">
    $D^2ORA$ extends the DoRA algorithm to a decentralized environment, enabling distributed training across multiple servers.
  </Card>

  <Card title="G2D" icon="code" href="../Developers/Glossary/G2D">
    G2D disrupts the attackers' ability to reliably exploit the model, thus enhancing its robustness against adversarial threats
  </Card>
</CardGroup>


# Theia
Source: https://docs.chainbase.com/theia/World_model/theia



We have developed a foundational **Crypto World Model (Theia)** on the Chainbase omnichain data network. Theia aims to transform vast amounts of on-chain dark knowledge into comprehensive intelligence for humans in a trustworthy manner. This is accomplished by distilling knowledge from both language models and the Chainbase omnichain data network through model training.

## How do we build Theia?

We propose a model tuning algorithm for Theia, **Decentralized Weight-Decomposed Low-Rank Adaptation ($D^2ORA$)** technique by revamping the [$DORA$ by NVIDIA](https://research.nvidia.com/publication/2024-07_dora-weight-decomposed-low-rank-adaptation), which decomposes a large language model into magnitude and direction components in a trustworthy manner. By feeding the model with on-chain data, we derive the crypto magnitude vector ($M_c$) and the directional matrix ($D_c$). The product of these components represents a crypto-oriented parameter matrix that encapsulates the extensive knowledge within the crypto space. The decentralized training approach ensures data security, model robustness, and result transparency. Consequently, the crypto knowledge is condensed into the crypto-oriented matrix, independent of the large language model (LLM), allowing it to be enhanced with future data or on-chain activities, thus evolving into an all-in-one expert in crypto.

## Capabilities of Theia

Unlike existing crypto AI projects, Theia offers a complete reasoning chain for question answering, providing transparent and trustworthy results. It learns crypto patterns from extensive on-chain and off-chain data and spatial-temporal activities, and its responses are based on causal reasoning with these crypto patterns. Ultimately, Theia consists of a powerful LLM parameter matrix operating with the crypto-oriented parameter matrix and crypto patterns. To ensure up-to-date intelligence with reliable arguments, we integrate Theia with the real-time omnichain data network and an Internet AI reader via Retrieval-Augmented Generation (RAG). Leveraging Theia's intelligence, users can also build task-specific AI models on top of it.

## Summary

Theia represents the next generation of Crypto World Models, derived from model training using the novel $D^2ORA$ algorithm and crypto patterns identified by machine intelligence. It offers transparent and trustworthy knowledge to the web3 community, illuminating the hidden knowledge within the crypto world.


# Welcome
Source: https://docs.chainbase.com/theia/World_model/welcome



Chainbase is building an crypto world model, Theia, which is designed to learn blockchain data and realize simulation and reasoning of the native blockchain environment. Agents built based on it can effectively understand, predict and interact with the blockchain.

Chainbase assembled a team led by a professor in the field of AI to build the model to support native crypto applications, including AI crypto games, DeFi, security, social, asset management, and more.

## What is Crypto World Model?

The crypto world is built on massive and rapidly growing blockchain data, which contains an abundance of knowledge and underlying opportunities. Chainbase continually extracts, records, and organizes this data, summarizing it for downstream users. However, a significant and persistent challenge is that the vast "dark knowledge" within crypto data cannot be effectively organized solely through traditional databases and limited human effort. Accessing and interpreting this knowledge easily and conveniently remains a challenge for crypto participants.


