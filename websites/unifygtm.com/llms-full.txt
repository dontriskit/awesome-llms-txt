# Best Practices: Optimizing Your Email Outreach
Source: https://docs.unifygtm.com/best-practices/deliverability



## Sequence Copy

1. **Keep an individual sequence to 4 email touches max -** Within a four-touch sequence, we recommend alternating the structure between 2 new threads and 2 follow-up replies. The copy of these follow-up replies can be short and limited to 1-2 sentences. Example: "Any thoughts on my previous note?"

2. **Alternate case studies and value props between new threads -** You should vary the copy and angle you're approaching to pitch your product in email steps 1 and 3. For example, you can highlight different customer case studies or statistics across both emails.

3. **Shorten subject line and use personalization -** Keep subject titles concise and add custom variables to increase variability. This approach will also help improve deliverability. Example: "Unify x (Your Company Name)"

4. **Include statistics and case studies for social proof -** Incorporating very numbers-driven, concise impact statements can catch your prospect's attention. We recommend adding concise blurbs from customer case studies into your sequence copy.

5. **Add personalization with snippets -** You can use Unify's smart snippets to personalize copy based on relevant value prop, job title, work description, industry, and more. This will make your sequence copy more compelling with targeted pain points, use cases, or case studies. More variance in email copy will also help with deliverability.

6. **Keep it concise, focus on a single product or pain point -** Don't try to fit too many points into your email - you want to be decisive and mention the most relevant product or pain point to that individual to capture their attention! Keep the language simple and avoid business jargon. We generally recommend keeping each email between 50-200 words.

7. **End with a compelling call to action (CTA) -** Conclude each email with a clear, specific, and actionable request. This could include scheduling a call, booking a demo, or asking the prospect to reply with a specific piece of information relevant to their needs.

## Deliverability

1. **Limit the links -** Try not to overload your emails with multiple or duplicate links. Too many links can set off spam alarms - we generally recommend limiting the email touch to include 1-2 links maximum.

2. **Check link safety -** Ensure the links you include are secure and no warnings are displayed by the browser when visiting them.

3. **Mix up subject lines -** Don't stick with the same old subject lines, use template variables to keep them dynamic and interesting.

4. **No all caps -** Using all caps anywhere in your email can make it look spammy, so stick to normal capitalization.

5. **Easy on the exclamation -** Too many exclamation points can trigger spam filters, especially in the subject line. Use them sparingly!

6. **Send from multiple email addresses -** Sending emails from multiple mailboxes improves deliverability by distributing volume across different IP addresses and domains. This approach reduces the risk of being flagged as spam and increases overall sending capacity.

7. **Proofread for Typos**: Typos can make your email look unprofessional, especially when you're emailing multiple contacts at a company. Make sure to proofread and catch any errors.


# Best Practices
Source: https://docs.unifygtm.com/best-practices/introduction

Unify's recommendations for high-performance GTM.

<CardGroup cols={2}>
  <Card title="Book Meetings with Plays" icon="arrow-progress" href="/best-practices/plays">
    Learn how to use plays effectively to automate your outbound.
  </Card>

  <Card title="Optimizing Outreach" icon="envelopes" href="/best-practices/deliverability">
    Design your sequences to maximize response rates and deliverability.
  </Card>
</CardGroup>


# Best Practices: Plays to Book You Meetings
Source: https://docs.unifygtm.com/best-practices/plays



## Section 1: Best Practices

Unify is a sales engagement platform designed to help you generate pipeline. To ensure that you see the best results, we recommend a few general principles:

* **Act Quickly:** Act on intent signals within 24-48 hours to catch prospects before they make their decision. Intent gets stale quickly.
* **Engage with Every Lead:** Once you define your ICP in Unify, avoid selective outreach. Avoid introducing bias into how you prospect.
* **Multiple Touchpoints:** If you’ve found that a channel works best for your team, use Unify to lean into that. Unify excels at email - if that’s your preferred channel, great. If not, use email in addition to LinkedIn or phone outreach. See section 4 below to see our recommendations for email and LinkedIn outreach.

## Section 2: Actioning on Intent

There are two primary ways to act on intent data in Unify:

### Automatic Plays

* **When to use:** Both for low and high volume signals. Plays automate prospecting, qualifying, sequencing, and syncing leads to your CRM.
* **Benefits:** Reduce friction and improve intent to meeting booked conversion by immediately actioning on leads.
* Learn more about how to build Plays in [How to Create a Play](/tutorials/how-to-create-a-play).

### Manual Alerts

* **When to use:** Ideal for low volume, high value signals. It's important to ensure the sales team is accountable for acting on alerts to ensure hot leads don’t slip through the cracks.
* **Benefits:** Immediate and contextual information delivered to where your team is working.
* Most reps use Slack alerts or custom Zaps to trigger manual workflows. Learn how to set these up in our [Slack Integration Guide](/tutorials/how-to-set-up-slack-alerts) and [Zapier Integration Guide](/reference/integrations/zapier).

## Section 3: Intent-Based Plays

Intent signals are indicators that there’s an opportunity to sell your product or book an intro meeting. Our customers have seen success with these intent-based Plays:

1. **Pricing Page Visits:** Checking out pricing pages indicates that prospects are seriously considering a purchase decision.
2. **[Repeat Buyers](https://www.unifygtm.com/plays/champion-tracking---outbound-to-past-customers-who-have-moved-jobs):** When someone you’ve sold to before is back on the website demonstrating high intent. This works well for businesses that have more transactional sales.
3. **[Inbound Form Submissions](https://www.unifygtm.com/plays/outbound-to-website-form-submitters):** A form submission is one of the strongest signs of intent. Convert those leads immediately by automating outreach as soon as they submit.
4. **[New Hires](https://www.unifygtm.com/plays/outbound-to-people-who-have-started-jobs-at-a-new-company):** People are more likely to purchase new tools in their first few months on a job. Targeting your ICPs that have just changed jobs can convert better.
5. **[Support Docs](https://www.unifygtm.com/plays/outbound-to-contacts-viewing-your-technical-docs):** Interest in support docs (e.g., integration details), suggests prospects are trying to understand how your product works and if it would work for them.
6. **[Social Content Engagement](https://www.unifygtm.com/plays/automate-outbound-to-linkedin-likers-commenters)**: Liking or commenting on your social posts signals that a prospect is interested in your company.
7. **[Product Tour Visits](https://www.unifygtm.com/plays/outbound-to-people-who-view-your-product-demo):** Interest in demo videos or product tours indicates a desire to understand specific product offerings in more granularity.
8. **[Retarget Paid Traffic](https://www.unifygtm.com/plays/retarget-paid-traffic):** Get more out of your spend on paid traffic by retargeting people based on UTM filters.
9. **[Closed-Lost Opportunities](https://www.unifygtm.com/plays/retarget-closed-lost-opportunities-when-they-revisit-website):** A revisit to your site by a closed-lost opportunities signals the prospect might be interested in re-engaging.

## Section 4: Section 4: Nailing Email or Linkedin Outreach

Nailing email and LinkedIn messages is key to booking the most possible meetings from Unify. A few guiding principles:

1. **Use Soft Messaging:** Use your judgement, but we typically recommend against direct mentions of website activity. Instead, tailor messages to address the pain points related to the product or service they showed interest in.
2. **Keep It Short:** Many senior leaders at your target accounts read emails on their phones, concise messages under 100 words are more likely to be read and understood. Remember that people are skimming emails.
3. **Persona-Specific Messaging:** Address specific pain points and perspectives of the different personas you sell to (e.g., sales and marketing for us). Avoid generic messages that try to cater to multiple personas, as they may resonate with none.
4. **Focus on One Product:** If you sell multiple products, pitch one per email. This approach minimizes the chances that your prospect gets confused about what you solve.
5. **Highlight Relevant Pain Points:** Rather than pitching your product, focus on speaking to a specific challenge or pain point that your prospect has. Educate the prospect on your product once you’re on the phone with them.


# Intent Client Usage
Source: https://docs.unifygtm.com/developers/intent-client/client-spec

Learn how to send events using the Unify Intent Client.

<Tip>
  The Unify Intent Client can be used to log user activity across multiple subdomains of the
  same top-level domain. For example, if a user visits your marketing website at `www.yoursite.com`
  and then logs into your production web application at `app.yoursite.com`, the activity in both
  places will be attributed to the same person.
</Tip>

## Page View Events

Website page views are an indicator of buyer intent. You can log this information to the Unify platform
for usage with the `page` method.

There are two ways to collect page data with the Unify intent client:

1. Automatic monitoring of the current page
2. Manually via the client `page` method

Utilizing both of these methods when appropriate is recommended to take full advantage of intent data
within Unify.

### Automatic Page Monitoring

The Unify intent client is capable of automatically monitoring the user's current page to trigger
page events. This will happen by default when the client is installed via the [Unify Website tag](./website-tag).
If the client is installed via a package manager, you must pass the `autoPage` configuration option
when instantiating the client. See [Configuration](#configuration) below for more details.

<Check>Automatic page monitoring works in Single Page Apps, too!</Check>

In either case, this behavior can be enabled or disabled programmatically via the `startAutoPage`
and `stopAutoPage` methods on the client:

```ts
// Initialize the client and tell it to automatically monitor pages
const unify = new UnifyIntentClient(
  'YOUR_PUBLIC_WRITE_KEY',
  { autoPage: true },
);
unify.mount();

// Tell the client to stop monitoring pages
unify.stopAutoPage();

// Tell the client to start monitoring pages again
unify.startAutoPage();
```

### Manual Page Logging

You can also manually trigger a page event with the `page` method on the client. This is useful
when you do not want to trigger page events for every page.

```ts
const unify = new UnifyIntentClient('YOUR_PUBLIC_WRITE_KEY');
unify.mount();

// Trigger a page event for whatever page the user is currently on
unify.page();

// Trigger a page event for a custom page other than the current page
unify.page({ pathname: '/some-custom-page' });
```

## Identify Events

All intent data collected for users by Unify is anonymous by default. When intent events are
logged, Unify will attempt to automatically de-anonymize the IP address of a user to associate
them with a specific company, but their personal identity will remain anonymous until an
identify event is triggered for them.

There are two ways to collect identity data with the Unify intent client:

1. Automatic monitoring of email input elements
2. Manually via the client `identify` method

Utilizing both of these methods when appropriate is recommended to take full advantage of intent
data within Unify.

### Automatic Input Monitoring

The Unify intent client is capable of automatically monitoring text and email input elements on
the page to collect user identity. This will happen by default when the client is installed via
the Unify JavaScript tag. If the client is installed via a package manager, you must pass the
`autoIdentify` configuration option when instantiating the client. See [Configuration](#configuration)
below for more details.

In either case, this behavior can be enabled or disabled programmatically via the `startAutoIdentify`
and `stopAutoIdentify` methods on the client:

```ts
// Initialize the client and tell it to automatically monitor inputs
const unify = new UnifyIntentClient(
  'YOUR_PUBLIC_WRITE_KEY',
  { autoIdentify: true },
);
unify.mount();

// Tell the client to stop monitoring inputs for now
unify.stopAutoIdentify();

// Tell the client to start monitoring inputs again
unify.startAutoIdentify();
```

### Manual Identification

You can also manually trigger an identify event with the identify method on the client. This is
useful when users log-in with OAuth or SSO, for example, because they do not enter their email
into an input on the page.

```ts
const unify = new UnifyIntentClient('YOUR_PUBLIC_WRITE_KEY');
unify.mount();

// However you determine the currently logged-in user
const currentUser = getCurrentUser();

// Identify the current user
unify.identify(currentUser.emailAddress);
```

## Configuration

The following configuration options can be passed when initializing the client:

<ParamField body="autoPage" type="boolean" default={false}>
  <Note>If installed via the [Unify Website tag](./website-tag) then the `autoPage` config will default to `true`.</Note>

  Tells the client to automatically log page events whenever the current page changes.
  Works for static websites and Single Page Apps. Also logs a page event for the initial page.
</ParamField>

<ParamField body="autoIdentify" type="boolean" default={false}>
  <Note>If installed via the [Unify Website tag](./website-tag) then the `autoIdentify` config will default to `true`.</Note>

  Tells the client to automatically monitor text and email input elements on the
  page for changes. When the current user enters a valid email address into an input, the client
  will log an identify event for that email address.
</ParamField>


# JavaScript Client
Source: https://docs.unifygtm.com/developers/intent-client/js-client

Install the Unify Intent client in a frontend web application framework.

<CardGroup cols={2}>
  <Card title="Github" icon="github" iconType="solid" href="https://github.com/unifygtm/intent-js-client" />

  <Card title="npm" icon="npm" iconType="solid" color="#BD0005" href="https://www.npmjs.com/package/@unifygtm/intent-client" />
</CardGroup>

## Installation

You can install the Unify Intent JS Client with your preferred package manager:

<CodeGroup>
  ```shell npm
  npm install @unifygtm/intent-client
  ```

  ```shell yarn
  yarn add @unifygtm/intent-client
  ```

  ```shell pnpm
  pnpm add @unifygtm/intent-client
  ```
</CodeGroup>

## Usage

After installing the client, you must initialize it in your application code:

<Warning>You should only initialize the client one time in your application.</Warning>

```ts index.ts
import { UnifyIntentClient, UnifyIntentClientConfig } from '@unifygtm/intent-client';

const writeKey = 'YOUR_PUBLIC_API_KEY';

const config: UnifyIntentClientConfig = {
  autoPage: true,
  autoIdentify: false,
};

const unify = new UnifyIntentClient(writeKey, config);

// Do not call mount during server side rendering. Only call it in a browser context.
unify.mount();
```

You can then use the resulting client instance to log intent data. See the
[Client Spec](./client-spec) for more details on how to use the client.

## Cleanup

When you are done using the client, if you wish to clean up the side effects
generated by it, you can do so with the `unmount` method:

```ts cleanup.ts
import { UnifyIntentClient, UnifyIntentClientConfig } from '@unifygtm/intent-client';

const writeKey = 'YOUR_PUBLIC_API_KEY';

const unify = new UnifyIntentClient(writeKey);
unify.mount();

// Use the client for some time, then later...

unify.unmount();
```


# Intent Client Overview
Source: https://docs.unifygtm.com/developers/intent-client/overview

Learn how to start collecting website intent data in Unify.

Buyer intent data is at the core of what makes Unify tick. The easiest way to
start collecting this data is by installing the Unify Intent client on your
marketing website or web app.

# How it works

The Unify Intent client is a JavaScript library that allows you to collect
events from your website and send them to Unify. It supports collecting three
types of events:

<CardGroup cols={3}>
  <Card title="Page Events" icon="memo-pad" iconType="duotone" color="#3378B8">
    e.g. a user visits the pricing page of your marketing website
  </Card>

  <Card title="Identify Events" icon="user-check" iconType="duotone" color="#22811A">
    e.g. a user logs into your web application with their email address
  </Card>

  <Card title="Track Events" icon="bullseye-pointer" iconType="duotone" color="#D23434">
    e.g. a user clicks a button to open a pricing calculator modal
  </Card>
</CardGroup>

When you install the Unify Intent client on your website, it can automatically
start collecting these events and sending them to Unify. You can also customize
this behavior by sending events manually using the client's API.

The Unify Intent client is fully open source and available on [GitHub](https://github.com/unifygtm/intent-js-client).

# Installation

There are several different ways to install the Unify Intent client on your
website. Choose the one that best suits your use case:

<CardGroup cols={1}>
  <Card title="Website Tag" icon="code" iconType="duotone" href="website-tag" horizontal>
    Quickly set up the Unify Intent client on a static marketing website.
  </Card>

  <Card title="React Library" icon="react" iconType="solid" color="#4AB8D4" href="react" horizontal>
    Install the Unify Intent client in a React app.
  </Card>

  <Card title="JavaScript Client" icon="square-js" iconType="solid" color="#E2CD3E" href="js-client" horizontal>
    Install the Unify Intent client in a different frontend web application
    framework.
  </Card>
</CardGroup>

If you aren't sure, we recommend starting with the **Website Tag** installation
method. This is the simplest way to get started and all you need for most
marketing websites.

# Usage

If you install the client using the **React Library** or **JavaScript Client**
methods, see our [Usage Guide](/developers/intent-client/client-spec) to learn
how to use the client and start adding events.


# React
Source: https://docs.unifygtm.com/developers/intent-client/react

Install the Unify Intent client in a React app.

<CardGroup cols={2}>
  <Card title="Github" icon="github" iconType="solid" href="https://github.com/unifygtm/intent-react" />

  <Card title="npm" icon="npm" iconType="solid" color="#BD0005" href="https://www.npmjs.com/package/@unifygtm/intent-react" />
</CardGroup>

## Installation

You can install the Unify Intent React library with your preferred package manager:

<CodeGroup>
  ```shell npm
  npm install @unifygtm/intent-react
  ```

  ```shell yarn
  yarn add @unifygtm/intent-react
  ```

  ```shell pnpm
  pnpm add @unifygtm/intent-react
  ```
</CodeGroup>

## Usage

First, wrap your React app in a `UnifyIntentProvider`:

```tsx index.tsx
import {
  UnifyIntentClient,
  UnifyIntentClientConfig,
  UnifyIntentProvider,
} from '@unifygtm/intent-react';

const writeKey = 'YOUR_PUBLIC_API_KEY';

const config: UnifyIntentClientConfig = {
  autoPage: true,
  autoIdentify: false,
};

const intentClient = new UnifyIntentClient(writeKey, config);

const root = ReactDOM.createRoot(
  document.getElementById('root') as HTMLElement,
);

root.render(
  <UnifyIntentProvider intentClient={intentClient}>
    <App />
  </UnifyIntentProvider>
);
```

The `UnifyIntentProvider` automatically takes care of mounting and unmounting the client
for you whenever the component mounts and unmounts. So any components rendered in your app
can freely access and use the intent client using the `useUnifyIntent` hook:

```tsx Example.tsx
import { useUnifyIntent } from '@unifygtm/intent-react';

const Example = () => {
  // Get the Unify Intent Client
  const unify = useUnifyIntent();

  // However you access the current user...
  const currentUser = useCurrentUser();

  useEffect(() => {
    if (currentUser?.emailAddress) {
      // Log an identify event for the current user
      unify.identify(currentUser.emailAddress);
    }
  }, [currentUser, unify]);

  ...
};

export default Example;
```

You can then use the resulting client instance to log intent data. See the
[Usage](./client-spec) page for more details on how to use the client.


# Website Tag
Source: https://docs.unifygtm.com/developers/intent-client/website-tag

Quickly set up the Unify Intent client on a static marketing website.

# Installation

You can automatically load and install the client by placing a `<script>` tag in the `<head>`
or `<body>` of your website's HTML. The minified script can be found [here](https://app.unifygtm.com/dashboard/settings/integrations/website-tag)
in Unify.

```html index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <!-- Your Unify JavaScript tag here -->
  </head>
  <body>
    <!-- Or here... -->
  </body>
</html>
```

Once added, there's nothing else you need to do to start collecting intent data.
The website tag will automatically start collecting both page views and user
identifications.

<Warning>
  Be sure to only initialize the client one time on your website.
</Warning>

If you'd like to manually trigger events in specific places on your website, you
can do so by calling the client directly. When you include the tag in your HTML,
you will immediately be able to access the client at `window.unify` (or simply
`unify` since `window` is global).

```js Console
// Trigger a `page` event
window.unify.page();
unify.page();

// Trigger an `identify` event
window.unify.identify("user@email.com");
unify.identify("user@email.com");
```

## Additional instructions

If you're using one of the tools below, you can follow the provider-specific
instructions for that tool to install the website tag.

<AccordionGroup>
  <Accordion title="Google Tag Manager">
    The Unify Intent website tag can be added using Google Tag Manager. This can
    be useful in certain situations, such as if you have lots of scripts on your
    website and prefer to manage them all in one place.

    Start by opening the Google Tag Manager console. Add a new tag by selecting
    **Tags -> New**. Click on the **Tag Configuration** section and choose the
    **Custom HTML** tag type.

    Copy the website tag script from the Unify settings page [here](https://app.unifygtm.com/dashboard/settings/integrations/website-tag)
    and paste it into the HTML field. Once it's added, click **Save**.

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/developers/intent-client/google-tag-manager-install.png" />
    </Frame>

    Lastly, be sure to enable support for `document.write` in the tag settings.
    This is required for the website tag to work correctly.

    For more information, see the official Google Tag Manager support docs
    [here](https://support.google.com/tagmanager/answer/6107167).
  </Accordion>

  <Accordion title="Webflow">
    Webflow has a dedicated section for adding custom code to your website. From
    the Webflow dashboard, navigate to the settings for your website and then
    select the **Custom code** tab in the sidebar.

    Under **Head code**, paste the website tag script from the Unify settings
    page [here](https://app.unifygtm.com/dashboard/settings/integrations/website-tag)
    in the text area. Be sure to create a new line between any existing code and
    the Unify script.

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/developers/intent-client/webflow-install.png" />
    </Frame>

    When you're done, click **Save** and then publish your changes by selecting
    **Publish -> Publish to selected domains** in the top right corner.
  </Accordion>
</AccordionGroup>

# Usage

Once the website tag is installed, the Unify Intent client will automatically
start collecting events on your website. Most of the time, there is nothing else
you need to do.

For details on how this works and the available options, see [Configuration](/developers/intent-client/client-spec#configuration).


# Onboarding Guide
Source: https://docs.unifygtm.com/getting-started/onboarding-guide

Complete a few key steps to fully activate on Unify.

export const UnifyLogoLight = () => <svg className="block dark:hidden" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1.00985 11.8422C1.00985 10.6279 1.00985 9.41364 1.00985 8.19937C1.00985 7.70467 1.03983 7.19498 1.17475 6.71526C1.39961 5.93574 1.84934 5.30611 2.52393 4.8414C3.39341 4.25675 4.30786 3.73206 5.26728 3.29733C6.45157 2.74266 7.62086 2.83261 8.74518 3.44724C10.2293 4.25675 11.6984 5.09624 13.1675 5.92074C14.1119 6.46042 15.0564 6.9851 16.0158 7.52478C16.6604 7.89955 17.2001 8.37926 17.5599 9.03886C17.8447 9.54856 17.9796 10.1032 18.0246 10.6879C18.0396 10.8977 18.0396 11.1226 18.0396 11.3325C18.0396 13.806 18.0396 16.2795 18.0396 18.768C18.0396 19.3077 17.9946 19.8473 17.7997 20.357C17.5149 21.1516 17.0052 21.7962 16.2706 22.2309C15.4911 22.6956 14.7116 23.1603 13.9021 23.5651C12.7328 24.1647 11.5485 24.1348 10.3792 23.5351C9.97444 23.3252 9.58467 23.1004 9.19491 22.8755C7.18612 21.7362 5.17733 20.6119 3.15355 19.4726C2.5839 19.1578 2.0892 18.768 1.71442 18.2433C1.27968 17.6437 1.05482 16.9691 1.03983 16.2345C1.02484 15.5449 1.02484 14.8554 1.02484 14.1508C0.994856 13.3862 0.994856 12.6067 1.00985 11.8422ZM14.6666 22.3658C14.8165 22.3209 14.8615 22.2309 14.8615 22.096C14.8615 21.5863 14.8615 21.0616 14.8615 20.5519C14.8615 20.2071 14.7116 19.9523 14.3968 19.7724C12.5979 18.753 10.784 17.7336 8.98504 16.7292C8.74518 16.5943 8.50533 16.4744 8.26547 16.3245C7.50093 15.8448 6.91628 15.1852 6.58648 14.3307C6.37661 13.776 6.31665 13.2064 6.31665 12.6217C6.31665 10.6579 6.31665 8.67908 6.31665 6.71526C6.31665 6.4904 6.31665 6.26554 6.31665 6.02568C6.31665 5.72586 6.16674 5.51599 5.8969 5.36608C5.44717 5.11123 4.99744 4.87138 4.54771 4.61653C4.42779 4.55657 4.30786 4.51159 4.15795 4.43664C4.15795 4.55657 4.15795 4.64651 4.15795 4.73646C4.15795 7.34489 4.15795 9.95331 4.17294 12.5617C4.17294 13.2813 4.18793 14.0009 4.24789 14.7204C4.32285 15.6049 4.7276 16.3545 5.38721 16.9691C5.74699 17.2989 6.15175 17.5537 6.57149 17.7936C8.92507 19.1278 11.2787 20.462 13.6322 21.7962C13.977 21.9911 14.3368 22.1859 14.6666 22.3658ZM14.7715 16.3395C14.8015 16.1746 14.8315 16.0546 14.8315 15.9347C14.8315 14.8254 14.8465 13.716 14.8315 12.5917C14.8165 11.6773 14.4867 10.8528 13.8571 10.1632C13.4673 9.72845 12.9876 9.39865 12.4779 9.11382C11.5635 8.60413 10.649 8.07944 9.73458 7.56975C9.68961 7.53977 9.62965 7.52478 9.55469 7.4798C9.5397 7.77962 9.50972 8.03447 9.50972 8.30431C9.50972 9.02387 9.50972 9.74344 9.52471 10.463C9.52471 10.9877 9.52471 11.5274 9.65963 12.0371C9.92947 13.1464 10.5891 13.9859 11.5785 14.5705C12.4929 15.1102 13.4224 15.6199 14.3518 16.1446C14.4717 16.2195 14.6066 16.2645 14.7715 16.3395Z" fill="black" />
    <path d="M8.14551 1.67818C8.17549 1.66318 8.20547 1.64819 8.23545 1.6332C8.985 1.22845 9.70457 0.793708 10.4691 0.418935C11.5485 -0.12074 12.6578 -0.12074 13.7671 0.313998C13.887 0.358971 13.992 0.418935 14.1119 0.478898C16.5554 1.84308 18.984 3.20725 21.4275 4.57143C21.8173 4.79629 22.177 5.05114 22.4769 5.38094C22.9566 5.92062 23.2264 6.56523 23.3164 7.2698C23.3463 7.53964 23.3613 7.80948 23.3613 8.07931C23.3613 10.7027 23.3613 13.3262 23.3613 15.9496C23.3613 16.864 23.1065 17.6885 22.4919 18.3931C22.237 18.6929 21.9522 18.9478 21.6074 19.1426C20.8428 19.5924 20.0783 20.0271 19.2988 20.4768C19.2838 20.4918 19.2538 20.4918 19.2388 20.5068C19.2238 20.4918 19.2238 20.4918 19.2088 20.4768C19.2388 20.4169 19.2838 20.3719 19.3138 20.3119C19.8834 19.5774 20.1683 18.7529 20.1683 17.8234C20.1683 15.0651 20.1832 12.3068 20.1533 9.54843C20.1383 8.13928 19.4937 7.04494 18.2644 6.31038C17.0801 5.60581 15.8659 4.91622 14.6666 4.24163C13.4223 3.53705 12.1631 2.84747 10.9188 2.15789C10.0943 1.70816 9.20987 1.57324 8.28043 1.67818" fill="black" />
  </svg>;

export const UnifyLogoDark = () => <svg className="hidden dark:block" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1.00985 11.8422C1.00985 10.6279 1.00985 9.41364 1.00985 8.19937C1.00985 7.70467 1.03983 7.19498 1.17475 6.71526C1.39961 5.93574 1.84934 5.30611 2.52393 4.8414C3.39341 4.25675 4.30786 3.73206 5.26728 3.29733C6.45157 2.74266 7.62086 2.83261 8.74518 3.44724C10.2293 4.25675 11.6984 5.09624 13.1675 5.92074C14.1119 6.46042 15.0564 6.9851 16.0158 7.52478C16.6604 7.89955 17.2001 8.37926 17.5599 9.03886C17.8447 9.54856 17.9796 10.1032 18.0246 10.6879C18.0396 10.8977 18.0396 11.1226 18.0396 11.3325C18.0396 13.806 18.0396 16.2795 18.0396 18.768C18.0396 19.3077 17.9946 19.8473 17.7997 20.357C17.5149 21.1516 17.0052 21.7962 16.2706 22.2309C15.4911 22.6956 14.7116 23.1603 13.9021 23.5651C12.7328 24.1647 11.5485 24.1348 10.3792 23.5351C9.97444 23.3252 9.58467 23.1004 9.19491 22.8755C7.18612 21.7362 5.17733 20.6119 3.15355 19.4726C2.5839 19.1578 2.0892 18.768 1.71442 18.2433C1.27968 17.6437 1.05482 16.9691 1.03983 16.2345C1.02484 15.5449 1.02484 14.8554 1.02484 14.1508C0.994856 13.3862 0.994856 12.6067 1.00985 11.8422ZM14.6666 22.3658C14.8165 22.3209 14.8615 22.2309 14.8615 22.096C14.8615 21.5863 14.8615 21.0616 14.8615 20.5519C14.8615 20.2071 14.7116 19.9523 14.3968 19.7724C12.5979 18.753 10.784 17.7336 8.98504 16.7292C8.74518 16.5943 8.50533 16.4744 8.26547 16.3245C7.50093 15.8448 6.91628 15.1852 6.58648 14.3307C6.37661 13.776 6.31665 13.2064 6.31665 12.6217C6.31665 10.6579 6.31665 8.67908 6.31665 6.71526C6.31665 6.4904 6.31665 6.26554 6.31665 6.02568C6.31665 5.72586 6.16674 5.51599 5.8969 5.36608C5.44717 5.11123 4.99744 4.87138 4.54771 4.61653C4.42779 4.55657 4.30786 4.51159 4.15795 4.43664C4.15795 4.55657 4.15795 4.64651 4.15795 4.73646C4.15795 7.34489 4.15795 9.95331 4.17294 12.5617C4.17294 13.2813 4.18793 14.0009 4.24789 14.7204C4.32285 15.6049 4.7276 16.3545 5.38721 16.9691C5.74699 17.2989 6.15175 17.5537 6.57149 17.7936C8.92507 19.1278 11.2787 20.462 13.6322 21.7962C13.977 21.9911 14.3368 22.1859 14.6666 22.3658ZM14.7715 16.3395C14.8015 16.1746 14.8315 16.0546 14.8315 15.9347C14.8315 14.8254 14.8465 13.716 14.8315 12.5917C14.8165 11.6773 14.4867 10.8528 13.8571 10.1632C13.4673 9.72845 12.9876 9.39865 12.4779 9.11382C11.5635 8.60413 10.649 8.07944 9.73458 7.56975C9.68961 7.53977 9.62965 7.52478 9.55469 7.4798C9.5397 7.77962 9.50972 8.03447 9.50972 8.30431C9.50972 9.02387 9.50972 9.74344 9.52471 10.463C9.52471 10.9877 9.52471 11.5274 9.65963 12.0371C9.92947 13.1464 10.5891 13.9859 11.5785 14.5705C12.4929 15.1102 13.4224 15.6199 14.3518 16.1446C14.4717 16.2195 14.6066 16.2645 14.7715 16.3395Z" fill="white" />
    <path d="M8.14551 1.67818C8.17549 1.66318 8.20547 1.64819 8.23545 1.6332C8.985 1.22845 9.70457 0.793708 10.4691 0.418935C11.5485 -0.12074 12.6578 -0.12074 13.7671 0.313998C13.887 0.358971 13.992 0.418935 14.1119 0.478898C16.5554 1.84308 18.984 3.20725 21.4275 4.57143C21.8173 4.79629 22.177 5.05114 22.4769 5.38094C22.9566 5.92062 23.2264 6.56523 23.3164 7.2698C23.3463 7.53964 23.3613 7.80948 23.3613 8.07931C23.3613 10.7027 23.3613 13.3262 23.3613 15.9496C23.3613 16.864 23.1065 17.6885 22.4919 18.3931C22.237 18.6929 21.9522 18.9478 21.6074 19.1426C20.8429 19.5924 20.0783 20.0271 19.2988 20.4768C19.2838 20.4918 19.2538 20.4918 19.2388 20.5068C19.2238 20.4918 19.2238 20.4918 19.2088 20.4768C19.2388 20.4169 19.2838 20.3719 19.3138 20.3119C19.8834 19.5774 20.1683 18.7529 20.1683 17.8234C20.1683 15.0651 20.1833 12.3068 20.1533 9.54843C20.1383 8.13928 19.4937 7.04494 18.2644 6.31038C17.0801 5.60581 15.8659 4.91622 14.6666 4.24163C13.4223 3.53705 12.1631 2.84747 10.9188 2.15789C10.0943 1.70816 9.20987 1.57324 8.28043 1.67818" fill="white" />
  </svg>;

export const SixsenseLogoLight = () => <svg className="block dark:hidden" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M13.603 8.31196C14.5316 8.50714 15.4351 8.87062 16.2661 9.40665L13.5118 12.6791C12.0197 11.9955 10.1959 12.3568 9.08921 13.6715C7.98258 14.9851 7.94215 16.8377 8.87688 18.1833L6.1215 21.4558C3.42843 18.5695 3.25322 14.0681 5.86045 10.971L15.0982 0L18.3271 2.7004L13.603 8.31196Z" fill="#13BBB2" />
    <path d="M18.0446 21.1689C15.4365 24.2659 10.959 24.8762 7.63892 22.7335L10.3942 19.4609C11.8864 20.1445 13.7101 19.7841 14.8157 18.4695C15.9225 17.1548 15.9628 15.3024 15.0282 13.9567L17.7834 10.6841C20.4766 13.5704 20.6528 18.0718 18.0446 21.1689Z" fill="#192232" />
  </svg>;

export const SixsenseLogoDark = () => <svg className="hidden dark:block" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M13.603 8.31196C14.5316 8.50714 15.4351 8.87062 16.2661 9.40665L13.5118 12.6791C12.0197 11.9955 10.1959 12.3568 9.08921 13.6715C7.98258 14.9851 7.94215 16.8377 8.87688 18.1833L6.1215 21.4558C3.42843 18.5695 3.25322 14.0681 5.86045 10.971L15.0982 0L18.3271 2.7004L13.603 8.31196Z" fill="#13BBB2" />
    <path d="M18.0446 21.1689C15.4365 24.2659 10.959 24.8762 7.63892 22.7335L10.3942 19.4609C11.8864 20.1445 13.7101 19.7841 14.8157 18.4695C15.9225 17.1548 15.9628 15.3024 15.0282 13.9567L17.7834 10.6841C20.4766 13.5704 20.6528 18.0718 18.0446 21.1689Z" fill="white" />
  </svg>;

export const SegmentIcon = () => <svg className="h-6 w-6" xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 64 64">
      <g transform="matrix(.768307 0 0 .768307 0 2.304922)">
        <path d="M51.9 52.8H4c-2.2 0-4-1.8-4-4s1.8-4 4-4h47.9c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#99cfac" />
        <path d="M41.7 77.3c-3.9 0-7.8-.6-11.5-1.7-2.1-.7-3.3-2.9-2.6-5s2.9-3.3 5-2.6c2.9.9 6 1.4 9.1 1.4 13.6 0 25.4-8.7 29.3-21.7.6-2.1 2.9-3.3 5-2.7s3.3 2.9 2.7 5c-5.1 16.3-19.9 27.3-37 27.3z" fill="#49b881" />
        <path d="M79.3 32.5H31.4c-2.2 0-4-1.8-4-4s1.8-4 4-4h47.9c2.2 0 4 1.8 4 4s-1.8 4-4 4z" fill="#99cfac" />
        <path d="M8.5 32.5c-.4 0-.8-.1-1.2-.2-2.1-.6-3.3-2.9-2.7-5C9.7 11 24.5 0 41.7 0c3.9 0 7.8.6 11.5 1.7 2.1.7 3.3 2.9 2.6 5s-2.9 3.3-5 2.6c-2.9-.9-6-1.4-9.1-1.4-13.6 0-25.4 8.7-29.3 21.7-.6 1.8-2.2 2.9-3.9 2.9z" fill="#49b881" />
        <g fill="#99cfac">
          <circle r="4" cy="13.3" cx="65.4" />
          <circle r="4" cy="64.1" cx="17.9" />
        </g>
      </g>
    </svg>;

export const SalesforceLogo = () => <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M9.98736 5.83214C10.7614 5.02566 11.839 4.52545 13.0308 4.52545C14.6151 4.52545 15.9973 5.40886 16.7334 6.72031C17.373 6.43452 18.0811 6.27553 18.826 6.27553C21.6834 6.27553 24 8.6123 24 11.4947C24 14.3774 21.6834 16.7142 18.826 16.7142C18.4837 16.7144 18.1423 16.6803 17.8068 16.6126C17.1587 17.7688 15.9234 18.5501 14.5057 18.5501C13.9121 18.5501 13.3508 18.413 12.851 18.1692C12.1939 19.7148 10.6629 20.7986 8.87863 20.7986C7.02052 20.7986 5.43692 19.6229 4.82907 17.974C4.56344 18.0304 4.28822 18.0598 4.00581 18.0598C1.79351 18.0598 0 16.2479 0 14.0123C0 12.5142 0.805814 11.2061 2.00308 10.5063C1.75659 9.93915 1.61948 9.31315 1.61948 8.65502C1.61948 6.08408 3.70667 4 6.28103 4C7.79248 4 9.13574 4.71863 9.98736 5.83214Z" fill="#00A1E0" />
  </svg>;

export const OutlookLogo = () => <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 1831.085 1703.335" enable-background="new 0 0 1831.085 1703.335" xml:space="preserve">
    <path fill="#0A2767" d="M1831.083,894.25c0.1-14.318-7.298-27.644-19.503-35.131h-0.213l-0.767-0.426l-634.492-375.585  c-2.74-1.851-5.583-3.543-8.517-5.067c-24.498-12.639-53.599-12.639-78.098,0c-2.934,1.525-5.777,3.216-8.517,5.067L446.486,858.693  l-0.766,0.426c-19.392,12.059-25.337,37.556-13.278,56.948c3.553,5.714,8.447,10.474,14.257,13.868l634.492,375.585  c2.749,1.835,5.592,3.527,8.517,5.068c24.498,12.639,53.599,12.639,78.098,0c2.925-1.541,5.767-3.232,8.517-5.068l634.492-375.585  C1823.49,922.545,1831.228,908.923,1831.083,894.25z" />
    <path fill="#0364B8" d="M520.453,643.477h416.38v381.674h-416.38V643.477z M1745.917,255.5V80.908  c1-43.652-33.552-79.862-77.203-80.908H588.204C544.552,1.046,510,37.256,511,80.908V255.5l638.75,170.333L1745.917,255.5z" />
    <path fill="#0078D4" d="M511,255.5h425.833v383.25H511V255.5z" />
    <path fill="#28A8EA" d="M1362.667,255.5H936.833v383.25L1362.667,1022h383.25V638.75L1362.667,255.5z" />
    <path fill="#0078D4" d="M936.833,638.75h425.833V1022H936.833V638.75z" />
    <path fill="#0364B8" d="M936.833,1022h425.833v383.25H936.833V1022z" />
    <path fill="#14447D" d="M520.453,1025.151h416.38v346.969h-416.38V1025.151z" />
    <path fill="#0078D4" d="M1362.667,1022h383.25v383.25h-383.25V1022z" />
    <linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="1128.4584" y1="811.0833" x2="1128.4584" y2="1.9982" gradientTransform="matrix(1 0 0 -1 0 1705.3334)">
      <stop offset="0" style={{
  "stop-color": "#35B8F1"
}} />
      <stop offset="1" style={{
  "stop-color": "#28A8EA"
}} />
    </linearGradient>
    <path fill="url(#SVGID_1_)" d="M1811.58,927.593l-0.809,0.426l-634.492,356.848c-2.768,1.703-5.578,3.321-8.517,4.769  c-10.777,5.132-22.481,8.029-34.407,8.517l-34.663-20.27c-2.929-1.47-5.773-3.105-8.517-4.897L447.167,906.003h-0.298  l-21.036-11.753v722.384c0.328,48.196,39.653,87.006,87.849,86.7h1230.914c0.724,0,1.363-0.341,2.129-0.341  c10.18-0.651,20.216-2.745,29.808-6.217c4.145-1.756,8.146-3.835,11.966-6.217c2.853-1.618,7.75-5.152,7.75-5.152  c21.814-16.142,34.726-41.635,34.833-68.772V894.25C1831.068,908.067,1823.616,920.807,1811.58,927.593z" />
    <path opacity="0.5" fill="#0A2767" enable-background="new    " d="M1797.017,891.397v44.287l-663.448,456.791L446.699,906.301  c0-0.235-0.191-0.426-0.426-0.426l0,0l-63.023-37.899v-31.938l25.976-0.426l54.932,31.512l1.277,0.426l4.684,2.981  c0,0,645.563,368.346,647.267,369.197l24.698,14.478c2.129-0.852,4.258-1.703,6.813-2.555  c1.278-0.852,640.879-360.681,640.879-360.681L1797.017,891.397z" />
    <path fill="#1490DF" d="M1811.58,927.593l-0.809,0.468l-634.492,356.848c-2.768,1.703-5.578,3.321-8.517,4.769  c-24.641,12.038-53.457,12.038-78.098,0c-2.918-1.445-5.76-3.037-8.517-4.769L446.657,928.061l-0.766-0.468  c-12.25-6.642-19.93-19.409-20.057-33.343v722.384c0.305,48.188,39.616,87.004,87.803,86.7c0.001,0,0.002,0,0.004,0h1229.636  c48.188,0.307,87.5-38.509,87.807-86.696c0-0.001,0-0.002,0-0.004V894.25C1831.068,908.067,1823.616,920.807,1811.58,927.593z" />
    <path opacity="0.1" enable-background="new    " d="M1185.52,1279.629l-9.496,5.323c-2.752,1.752-5.595,3.359-8.517,4.812  c-10.462,5.135-21.838,8.146-33.47,8.857l241.405,285.479l421.107,101.476c11.539-8.716,20.717-20.178,26.7-33.343L1185.52,1279.629  z" />
    <path opacity="0.05" enable-background="new    " d="M1228.529,1255.442l-52.505,29.51c-2.752,1.752-5.595,3.359-8.517,4.812  c-10.462,5.135-21.838,8.146-33.47,8.857l113.101,311.838l549.538,74.989c21.649-16.254,34.394-41.743,34.407-68.815v-9.326  L1228.529,1255.442z" />
    <path fill="#28A8EA" d="M514.833,1703.333h1228.316c18.901,0.096,37.335-5.874,52.59-17.033l-697.089-408.331  c-2.929-1.47-5.773-3.105-8.517-4.897L447.125,906.088h-0.298l-20.993-11.838v719.914  C425.786,1663.364,465.632,1703.286,514.833,1703.333C514.832,1703.333,514.832,1703.333,514.833,1703.333z" />
    <path opacity="0.1" enable-background="new    " d="M1022,418.722v908.303c-0.076,31.846-19.44,60.471-48.971,72.392  c-9.148,3.931-19,5.96-28.957,5.962H425.833V383.25H511v-42.583h433.073C987.092,340.83,1021.907,375.702,1022,418.722z" />
    <path opacity="0.2" enable-background="new    " d="M979.417,461.305v908.302c0.107,10.287-2.074,20.469-6.388,29.808  c-11.826,29.149-40.083,48.273-71.54,48.417H425.833V383.25h475.656c12.356-0.124,24.533,2.958,35.344,8.943  C962.937,405.344,979.407,432.076,979.417,461.305z" />
    <path opacity="0.2" enable-background="new    " d="M979.417,461.305v823.136c-0.208,43-34.928,77.853-77.927,78.225H425.833V383.25  h475.656c12.356-0.124,24.533,2.958,35.344,8.943C962.937,405.344,979.407,432.076,979.417,461.305z" />
    <path opacity="0.2" enable-background="new    " d="M936.833,461.305v823.136c-0.046,43.067-34.861,78.015-77.927,78.225H425.833  V383.25h433.072c43.062,0.023,77.951,34.951,77.927,78.013C936.833,461.277,936.833,461.291,936.833,461.305z" />
    <linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="162.7469" y1="1383.0741" x2="774.0864" y2="324.2592" gradientTransform="matrix(1 0 0 -1 0 1705.3334)">
      <stop offset="0" style={{
  "stop-color": "#1784D9"
}} />
      <stop offset="0.5" style={{
  "stop-color": "#107AD5"
}} />
      <stop offset="1" style={{
  "stop-color": "#0A63C9"
}} />
    </linearGradient>
    <path fill="url(#SVGID_2_)" d="M78.055,383.25h780.723c43.109,0,78.055,34.947,78.055,78.055v780.723  c0,43.109-34.946,78.055-78.055,78.055H78.055c-43.109,0-78.055-34.947-78.055-78.055V461.305  C0,418.197,34.947,383.25,78.055,383.25z" />
    <path fill="#FFFFFF" d="M243.96,710.631c19.238-40.988,50.29-75.289,89.17-98.495c43.057-24.651,92.081-36.94,141.675-35.515  c45.965-0.997,91.321,10.655,131.114,33.683c37.414,22.312,67.547,55.004,86.742,94.109c20.904,43.09,31.322,90.512,30.405,138.396  c1.013,50.043-9.706,99.628-31.299,144.783c-19.652,40.503-50.741,74.36-89.425,97.388c-41.327,23.734-88.367,35.692-136.011,34.578  c-46.947,1.133-93.303-10.651-134.01-34.067c-37.738-22.341-68.249-55.07-87.892-94.28c-21.028-42.467-31.57-89.355-30.745-136.735  C212.808,804.859,223.158,755.686,243.96,710.631z M339.006,941.858c10.257,25.912,27.651,48.385,50.163,64.812  c22.93,16.026,50.387,24.294,78.353,23.591c29.783,1.178,59.14-7.372,83.634-24.358c22.227-16.375,39.164-38.909,48.715-64.812  c10.677-28.928,15.946-59.572,15.543-90.404c0.33-31.127-4.623-62.084-14.649-91.554c-8.855-26.607-25.246-50.069-47.182-67.537  c-23.88-17.79-53.158-26.813-82.91-25.55c-28.572-0.74-56.644,7.593-80.184,23.804c-22.893,16.496-40.617,39.168-51.1,65.365  c-23.255,60.049-23.376,126.595-0.341,186.728L339.006,941.858z" />
    <path fill="#50D9FF" d="M1362.667,255.5h383.25v383.25h-383.25V255.5z" />
  </svg>;

export const HubspotLogo = () => <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M17.2421 17.2947C15.4495 17.2947 13.9963 15.8566 13.9963 14.0829C13.9963 12.3088 15.4495 10.8707 17.2421 10.8707C19.0348 10.8707 20.488 12.3088 20.488 14.0829C20.488 15.8566 19.0348 17.2947 17.2421 17.2947ZM18.2138 7.89901V5.04163C18.9675 4.68936 19.4954 3.93487 19.4954 3.05925V2.9933C19.4954 1.78482 18.4963 0.796098 17.2751 0.796098H17.2088C15.9876 0.796098 14.9885 1.78482 14.9885 2.9933V3.05925C14.9885 3.93487 15.5164 4.68966 16.2701 5.04194V7.89901C15.148 8.07068 14.1227 8.52868 13.2772 9.20272L5.34945 3.09994C5.40177 2.90114 5.43852 2.6965 5.43884 2.48137C5.44008 1.11293 4.32076 0.00185084 2.93734 1.60552e-06C1.55455 -0.00153942 0.43149 1.10646 0.429933 2.4752C0.428376 3.84395 1.54769 4.95503 2.93111 4.95657C3.38177 4.95719 3.7991 4.83051 4.16473 4.62463L11.9629 10.6282C11.2998 11.6188 10.9112 12.8053 10.9112 14.0829C10.9112 15.4202 11.3381 16.6573 12.0594 17.6747L9.68813 20.0217C9.50065 19.9659 9.30631 19.9271 9.10013 19.9271C7.96369 19.9271 7.04213 20.8387 7.04213 21.9634C7.04213 23.0883 7.96369 24 9.10013 24C10.2369 24 11.1581 23.0883 11.1581 21.9634C11.1581 21.76 11.1189 21.5673 11.0625 21.3818L13.4083 19.0604C14.4731 19.8645 15.7992 20.3478 17.2421 20.3478C20.7387 20.3478 23.5728 17.5428 23.5728 14.0829C23.5728 10.9506 21.2476 8.36286 18.2138 7.89901Z" fill="#FF7A59" />
  </svg>;

export const GoogleWorkspaceLogo = () => <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
    <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4" />
    <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853" />
    <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05" />
    <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335" />
    <path d="M1 1h22v22H1z" fill="none" />
  </svg>;

export const GmailLogo = () => <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1.64075 21.0162H5.46917V11.7508L0 7.63281V19.3754C0 20.2762 0.739946 21.0162 1.64075 21.0162Z" fill="#4285F4" />
    <path d="M18.563 21.0162H22.3914C23.2922 21.0162 24.0322 20.2762 24.0322 19.3754V7.63281L18.563 11.7186" fill="#34A853" />
    <path d="M18.563 4.64079V11.7507L24.0322 7.66492V5.44508C24.0322 3.41827 21.7158 2.2601 20.1072 3.48262" fill="#FBBC04" />
    <path d="M5.46924 11.7505V4.64062L12.0322 9.56288L18.5631 4.64062V11.7505L12.0001 16.6406" fill="#EA4335" />
    <path d="M0 5.44515V7.63282L5.46917 11.7186V4.64086L3.92493 3.48268C2.31635 2.29233 0 3.45051 0 5.44515Z" fill="#C5221F" />
  </svg>;

export const ClearbitLogo = () => <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M17.5703 23.9994H6.43997H5.97931C4.10691 23.9697 3.34903 23.7467 2.60602 23.3307C1.7887 22.8997 1.16457 22.2607 0.718762 21.4434L0.6296 21.2651C0.272953 20.5369 0.0649091 19.7196 0.0500488 17.8175V6.40478C0.0500488 4.17574 0.287813 3.37329 0.718762 2.55597C1.14971 1.73865 1.7887 1.09966 2.60602 0.668713L2.78434 0.579553C3.5125 0.222906 4.31495 0.0148603 6.21707 0H17.5703C19.7845 0 20.587 0.237765 21.4043 0.668713C22.2216 1.09966 22.8457 1.73865 23.2915 2.55597L23.3807 2.7343C23.7374 3.46245 23.9454 4.27976 23.9603 6.18188V17.5946V18.0553C23.9305 19.9425 23.7076 20.6855 23.3064 21.4434C22.8755 22.2607 22.2365 22.8997 21.4191 23.3307L21.2408 23.4198C20.4681 23.8062 19.6359 23.9994 17.5703 23.9994Z" fill="#C4D3E0" fill-opacity="0.2" />
    <path d="M23.9452 12.0078V17.5953C23.9452 19.8243 23.7075 20.6268 23.2765 21.4441C22.8456 22.2614 22.2066 22.9004 21.3893 23.3314C20.5719 23.7623 19.7695 24.0001 17.5553 24.0001H11.9976V12.0078H23.9452Z" fill="url(#paint0_linear_239_59)" />
    <path d="M11.9976 0.0146484H17.5553C19.7695 0.0146484 20.5719 0.252413 21.3893 0.683362C22.2066 1.11431 22.8307 1.7533 23.2765 2.57062C23.7075 3.38793 23.9452 4.19039 23.9452 6.41943V12.0069H11.9976V0.0146484Z" fill="url(#paint1_linear_239_59)" />
    <path d="M6.43997 0.0146484H11.9977V23.9992H6.43997C4.22579 23.9992 3.42333 23.7614 2.60602 23.3304C1.7887 22.8995 1.16457 22.2605 0.718762 21.4432C0.287813 20.6259 0.0500488 19.8234 0.0500488 17.5944V6.41943C0.0500488 4.19039 0.287813 3.38793 0.718762 2.57062C1.14971 1.7533 1.7887 1.11431 2.60602 0.683362C3.42333 0.252413 4.22579 0.0146484 6.43997 0.0146484Z" fill="url(#paint2_linear_239_59)" />
    <defs>
      <linearGradient id="paint0_linear_239_59" x1="15.5715" y1="13.2151" x2="21.5827" y2="25.188" gradientUnits="userSpaceOnUse">
        <stop stop-color="#DEF2FE" />
        <stop offset="1" stop-color="#DBF1FE" />
      </linearGradient>
      <linearGradient id="paint1_linear_239_59" x1="13.5922" y1="-0.783111" x2="19.6034" y2="11.1898" gradientUnits="userSpaceOnUse">
        <stop stop-color="#57BCFD" />
        <stop offset="1" stop-color="#51B5FD" />
      </linearGradient>
      <linearGradient id="paint2_linear_239_59" x1="1.70069" y1="1.43981" x2="11.9197" y2="21.7937" gradientUnits="userSpaceOnUse">
        <stop stop-color="#1CA7FD" />
        <stop offset="1" stop-color="#148CFC" />
      </linearGradient>
    </defs>
  </svg>;

## Step 1: Integrate your website

Connect Unify to your website traffic to start revealing visitors. There are several supported methods of integrating your website with Unify:

<CardGroup cols={1}>
  <Card title="Website Tag (Recommended)" href="/developers/intent-client/website-tag" icon="code" horizontal>
    Add the Unify JavaScript snippet to your website with minimal setup.
  </Card>

  <Card title="Intent Client" href="/developers/intent-client/overview#installation" icon="brackets-curly" horizontal>
    For full customizability, install the Unify Intent client in your web app.
  </Card>

  <Card title="Segment" href="/reference/integrations/segment" icon={<SegmentIcon />} horizontal>
    Connect your existing Segment subscription to send traffic to Unify.
  </Card>
</CardGroup>

Typically this integration is owned by engineering or marketing.

## Step 2: Turn on website intent data

Turn on website intent data so that you start revealing the companies behind anonymous website traffic. Unify provides intent data out of the box with no configuration required:

<Card
  title="Unify Intent (Powered by 6sense)"
  href="https://app.unifygtm.com/dashboard/settings/integrations/unify-intent"
  icon={
<>
  <UnifyLogoDark />
  <UnifyLogoLight />
</>
}
  horizontal
>
  Enable high-coverage website identification in just a few clicks. Unify Intent
  combines multiple data sources to achieve best-in-class coverage.
</Card>

If you already subscribe to another intent data provider, you can also bring your own API key and connect it in seconds:

<CardGroup cols={2}>
  <Card title="Clearbit Reveal" href="/reference/integrations/clearbit" icon={<ClearbitLogo />} horizontal>
    Connect your existing account to leverage Clearbit Reveal data in Unify.
  </Card>

  <Card
    title="6sense"
    href="/reference/integrations/6sense"
    icon={
  <>
    <SixsenseLogoDark />
    <SixsenseLogoLight />
  </>
}
    horizontal
  >
    Connect your existing account to leverage 6sense data in Unify.
  </Card>
</CardGroup>

## Step 3: Integrate your CRM

Connect your CRM of choice to begin running plays on your existing data, finding new prospects, tracking champions, and more:

<CardGroup cols={2}>
  <Card title="Salesforce" href="/reference/integrations/salesforce/overview" icon={<SalesforceLogo />} horizontal>
    Connect your Salesforce instance.
  </Card>

  <Card title="HubSpot" href="/reference/integrations/hubspot/overview" icon={<HubspotLogo />} horizontal>
    Connect your HubSpot CRM.
  </Card>
</CardGroup>

Typically this integration is owned by a sales leader or sales/revenue operations team.

## Step 4: Connect mailboxes

Unify provides several ways of setting up mailboxes to start sending emails. If
you have existing mailboxes, you can connect them in only a few clicks.

<CardGroup cols={2}>
  <Card title="Gmail" href="/reference/integrations/gmail" icon={<GoogleWorkspaceLogo />} horizontal>
    Connect Gmail mailboxes.
  </Card>

  <Card title="Outlook (Coming Soon)" icon={<OutlookLogo />} horizontal>
    Connect Outlook mailboxes.
  </Card>
</CardGroup>

If you plan on using Unify-managed mailboxes with, you'll need to add domain
names and create new email addresses. See the [Deliverability](/reference/deliverability/overview)
guide for setup instructions.

## Step 5: Browse tutorials

You're ready to start using Unify! We recommend checking out some of the [Tutorials](/tutorials).
Here are a few of the most popular starting points:

<CardGroup cols={3}>
  <Card title="Create an Exclusion" icon="ban" href="/tutorials/how-to-create-an-exclusion">
    Prevent Unify from actioning on specific companies or people.
  </Card>

  <Card title="Define Personas" icon="briefcase" href="/tutorials/how-to-use-personas">
    Create personas to prospect and reach out to your ideal buyers.
  </Card>

  <Card title="Create a Play" icon="arrow-progress" href="/tutorials/how-to-create-a-play">
    Learn the fundamentals and build a Unify Play from start to finish.
  </Card>
</CardGroup>

You can also check out the [official YouTube channel](https://www.youtube.com/@Unifygtm)
where there are a number of video tutorials covering everything from the basics
to sophisticated growth campaigns.


# Welcome to Unify
Source: https://docs.unifygtm.com/getting-started/welcome

Unify is the all-in-one solution for sales, marketing, and go-to-market teams.

Whether you're new to Unify and looking to get started or an experienced user
aiming to get the most out of the platform, we have the resources you need to
succeed.

<CardGroup cols={2}>
  <Card title="Onboarding Guide (<30 min)" icon="forward-fast" iconType="sharp-regular" href="/getting-started/onboarding-guide">
    Complete a few key steps to fully activate on Unify. For new customers
    looking to get up and running quickly, this is the place to start.
  </Card>

  <Card title="Tutorials" icon="rocket-launch" iconType="sharp-regular" href="/tutorials/welcome">
    Hit the ground running with our most popular plays and best practices.
  </Card>

  <Card title="Reference" icon="book" iconType="sharp-regular" href="/reference/overview">
    Explore the full range of features available in Unify with our in-depth
    reference guide.
  </Card>

  <Card title="Knowledge Base" icon="circle-question" iconType="sharp-regular" href="https://support.unifygtm.com/">
    Find answers to common questions and troubleshooting tips in our help
    center.
  </Card>
</CardGroup>

<Tip>
  For Pro and Enterprise customers, Unify offers white glove onboarding and
  support. For more information, [book an intro
  call](https://www.unifygtm.com/get-started) or reach out to
  [support@unifygtm.com](mailto:support@unifygtm.com).
</Tip>


# Building an Agent
Source: https://docs.unifygtm.com/reference/agents/building-an-agent

Learn the fundamentals of building Agents in Unify.

## Agent configuration

Every Agent has three components:

1. **Record Type**: Specify whether this agent will run on Company records or Person records.
2. **Questions**: Define research questions for the agent to answer.
3. (Optional) **Guidance**: Provide additional context or advice to the agent to improve the results.

Once you've configured your Agent, test it by running it on example Companies or People.

<Frame caption="An empty Agent modal.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/agents/empty-agent-modal.png" />
</Frame>

### Record type

Agents can run on Companies or People. Data from Unify for the underlying records will be made
available to the Agent as it performs research to answer your questions.

For example, an agent intended to perform account qualification will run on company records.
On the other hand, an agent that researches individual people for lead qualification will run on person records.

<Warning>Once you save an Agent, you cannot change its record type.</Warning>

### Questions

Define a set of questions that the Agent will answer for you.
Every question has an expected response type. The available response types are:

* **True / False**
* **Number**
* **Select**

View the [response types documentation](/reference/agents/response-types.mdx) for more details and examples.
Try to keep your questions straightforward and concise.
Use a [guidance prompt](#guidance-prompt) to guide define any special
terms or concepts that the Agent should know.

### Guidance prompt

Optionally, you may provide a prompt to help guide your Agent's thought process.
If there is any context the Agent needs to answer your question, this is the place to include it.

In most cases, providing guidance for the Agent is unnecessary.
The Agent already knows that it will be answering questions about a company or person,
so you do not need to include that information in the prompt.

Examples of things to include in a guidance prompt:

* What your company does
* Where to find specific information about the Person or Company to research
* Definitions for specialized terms and concepts

<Tip>
  Unify provides deep customization of and visibility into Agents' thought processes.
  You can take advantage of this to tweak questions or guidance and dial in the accuracy.
</Tip>

## Testing your Agent

Unify gives you best-in-class visibility into an AI's chain-of-thought.
Leverage this to test your Agent, diagnose any issues, and iterate on your
questions and guidance prompts.

Upon providing a valid Agent configuration, an extension will appear and prompt
you to test your Agent. Use the search bar to find a specific Company or Person to test your Agent on,
or use the shuffle button to randomly select a Company or Person. The Agent will run,
explain its reasoning, and provide responses to your questions.

<Tip>
  Generate multiple examples simultaneously to speed up your workflow.
  Navigate through these examples using the arrows at the top of the screen.
</Tip>

<Frame caption="Run the Agent on multiple records concurrently and navigate using the arrows.">
  <video autoPlay muted loop playsInline src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/agents/navigate-agent-examples.mp4" />
</Frame>


# Unify Agents
Source: https://docs.unifygtm.com/reference/agents/overview

Learn what Unify Agents are and how to use them.

## What are Agents?

Agents are tools that research and answer questions about Companies and People in Unify.
You provide questions, and Unify will provide answers.

Agents use state-of-the-art LLMs to automate research on your prospects.
If the answer to your question exists on the internet, Unify
Agents will find it for you.

<Frame caption="An example of an Agent answering questions about Unify.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/agents/agent-overview.png" />
</Frame>

## Use cases

Agents are new to the Unify platform, and their range of use cases is quickly expanding.

* **Account qualification**: Agents can be used to qualify Companies that run
  through your [Plays](/reference/plays/overview).
* **Lead qualification**: Agents can be used to qualify People that run through
  your [Plays](/reference/plays/overview).

<Tip>Check out the [Agent qualification action](/reference/plays/actions#agent-qualification) to use Agents in your Plays.</Tip>


# Agent Response Types
Source: https://docs.unifygtm.com/reference/agents/response-types

Control how Unify Agents respond to your questions.

## Overview

A single Agent can answer multiple questions, each with different response types.
Unify ensures that Agents adhere to the response types you specify to give
you fine-grained control over AI.

<Tip>Unify Agents know what they don't know. If the Agent cannot find an
answer to your question, it will respond accordingly.</Tip>

<Frame caption="An example of an Agent using various response types.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/agents/agent-response-types.png" />
</Frame>

## Response types

### True / False

Agents will respond with either `True` or `False` to a question of this type. This is best for simple questions:

* *Does this company have an office in San Francisco?*
* *Is there a pricing page on this company's website?*

### Number

Agents will respond with a number to a question of this type. This is best for questions that require a numerical answer:

* *What was the revenue for this company last year?*
* *How many years of full-time experience does this person have?*

### Select

Agents will respond with a *single* option from a list that you specify.
This is best for multiple-choice questions:

* *Is this company B2B, B2C, or B2G?*
  * Options: `B2B`, `B2C`, `B2G`
  * Answer: `B2B`

In some cases, you may want the Agent to respond with *multiple* options from the list you provided.
Click the `Allow multiple options` checkbox to enable this.
When enabled, the Agent will respond with zero, one, or multiple options.

* *Which of the following funding rounds has this company completed?*
  * Options: `Seed`, `Series A`, `Series B`, `Series C`, `Series D`, `Series E`
  * Answer: `Seed`, `Series A`


# Domain Configuration
Source: https://docs.unifygtm.com/reference/deliverability/domain-configuration

Set up domain names for Unify-managed mailboxes.

## Overview

In order to send emails through Unify Managed Email Deliverability, you need to add one or more sending domain to
the platform. We recommend adding multiple sending domains in order to distribute volume and create redundancy.

## What domains can I use?

* **YES** — Secondary domains: The reputation of these secondary domains are isolated from your primary domain. You want to follow best practices when naming these secondary domains to ensure they don't get flagged as spam.
* **NO** — Domains installed on other ESPs: The product cannot be used with domains that are used on e.g. Google Workspace because MX records can only be installed for one ESP at a time. You would need to remove certain existing DNS records to ensure we can register the domain succesfully on Unify.
* **NO** — Primary domains: We do not recommend using your primary domain for high-volume sending. The reason for this is to ensure your primary domain reputation is always kept pristine.

## How should I name my domain?

We generally recommend aiming for a .com or .io name and avoiding hyphens if possible. Common naming conventions include mybusiness.io, trymybusiness.com, getmybusiness.com.

We do not recommend using misspelt variations of your domain like mybuziness.com, even if these domain names are only a few letters off from your primary domain or company name. Your email provder will potentially show spam warnings on these emails because they look like phishing attempts.

## Best practices

* `SPF`, `DKIM`, `DMARC` - Unify enforces and monitors email authentication to ensure that your emails pass the tests conducted by the ESPs.
* `Branded links` - Unify will automatically generate branded links with your domain. E.g. links.mybusiness.io. These are used for unsubscribe links and open tracking.
* `Primary Domain Forwarding` - Secondary domains and subdomains should forward the user to the primary domain. This improves deliverability as users can investigate the secondary domain and as it creates a link between your primary domain and secondary domain.
* `WHOIS` - WHOIS information should be provided on the domain.
  Privacy Policy - The primary domain should have an easily accessible privacy policy.
* `Domain monitoring` - Unify will continuously monitor your domain health. For example by monitoring domain blocklists. If there is a problem you will be notified and sending can be paused.

## Purchasing a domain

The first step is to purchase a domain. This can be done through domain providers like CloudFlare, Google Domains, Squarespace, GoDaddy or Namecheap.

## Registering the domain in Unify

Navigate to the [domain settings page](https://app.unifygtm.com/dashboard/settings/deliverability/domains) and press "Add domain". Type in your domain name in the text box and press register. This process can take a few seconds, please wait for the registration to finish.

## DNS record overview

The screen will refresh showing you 7 DNS records to add. Below is an explanation of why we require each record:

<Frame>![domain-details-unverified](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/domain-details-unverified.png)</Frame>

* `SPF` - The SPF record authorizes Unify to send emails on your behalf. The SPF record must be exclusive to Unify as no other email providers can be used in conjunction.,
* `DKIM` - The DKIM record allows Unify to digitally sign your emails, enabling recipients to verify their authenticity and integrity.,
* `DMARC` - The DMARC record instructs recipient mail servers on how to handle emails from your domain that fail SPF or DKIM checks, enhancing your email security.,
* `MX` - Use priority 10. The MX record allows Unify to receive email messages on your behalf. The MX records must be exclusive to Unify as no other email providers can be used in conjunction. There are two MX records to create redundancy.
* `CNAME` - There are two CNAME records. The first CNAME record is an alias to Unify servers which allows branded links to be used for unsubscribes and open tracking. The second CNAME record is a validation record which authorizes Unify to accept HTTPS requests for the branded links.

## Adding the DNS records

1. Go to your domain provider (e.g. Squarespace or GoDaddy).
2. Navigate to the DNS settings.
3. Copy paste the DNS records. In order for the DNS records to propagate quickly you can use a TTL of 600 seconds.
4. Certain providers will ask you not to include the domain in the host name field. For example, `mybusiness.io` becomes `@` or sometimes just an empty string and `links.mybusiness.io` becomes just `links`.
5. It can take multiple minutes if not hours for the DNS records to propagate. You can use the refresh button in Unify to refresh the status.
6. Once the records are verified they will light up green with the text "Verified".

## Domain activation

Once the domain is verified we will automatically activate the domain which will enable you to register mailboxes under it. This process can take up to an hour.

<Frame>![domain-details-active](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/domain-details-active.png)</Frame>

#


# Mailbox Configuration
Source: https://docs.unifygtm.com/reference/deliverability/mailbox-configuration

Provision Unify-managed mailboxes for your team to send from.

## Mailbox registration and ownership

Once your domain is verified and activated you can start setting up mailboxes in Unify. When setting up a mailbox you will provider the names of your senders to your CSM. Unify will choose then create email mailboxes for you (e.g. `jane@mybusiness.io`).&#x20;

#### Sending emails

Through the Unify Sequencing product you will be able to send emails using your Unify managed mailboxes. The email signature and display name will be pulled from the owning user. Unify will automatically schedule your emails and manage the sending volume across your mailboxes.

#### Receiving emails

Replies to [`jane@mybusiness.io`](mailto:jane@mybusiness.io) will be forwarded to the user that owns the mailbox. For example, email replies sent to the Unify managed mailbox [`jane@mybusiness.io`](mailto:jane@mybusiness.io) will be forwarded to `Jane Doe's` primary email [`jane@mybusiness.com`](mailto:jane@mybusiness.com).

## Mailbox warmup

When a mailbox is created we will automatically start warming the mailbox to ensure high deliverability. Warming works by automatically sending emails to emails in a “warming network”. These emails will be automatically opened and replied to. If the warming emails land in the spam folder they will be taken out of the spam folder (a so called "spam rescue"). This tells the email service providers that your emails are high-quality and thus your deliverability improves. We continuously monitor the warmup process and after 3 weeks it will complete and your mailboxes will be ready to send. Once your mailboxes are warmed, we will send up to 65 emails per mailbox per day. By default, our send times are set to 9 AM - 4 PM PT on business days.

## Secondary forward

There are situations (such as vacation cover) where you need a second user to monitor an inbox of another user. You can set up a "Secondary forward" user. This user will receive a copy of all the replies sent to the mailbox. For example, if `John Doe` is helping `Jane Doe` out during her vacation, all emails sent to [`jane@mybusiness.io`](mailto:jane@mybusiness.io) will be forwarded to [`john@mybusiness.com`](mailto:john@mybusiness.com) (John's primary email). If you would like a secondary forwarding user set up on your Unify managed Gmail mailboxes, please contact [support@unifygtm.com](mailto:support@unifygtm.com) or your CSM.&#x20;


# Unify Deliverability
Source: https://docs.unifygtm.com/reference/deliverability/overview

Safeguard your deliverability while sending emails at scale.

## Overview

Unify's suite of deliverability features enable you to send large volumes of
emails without needing to manage your own infrastructure.

Maintaining high deliverability typically requires continuous, tedious work,
such as mailbox warming, IP rotation, and engagement monitoring. Unify takes
care of that for you by provisioning and managing mailboxes on your behalf.

Unify's deliverability capabilities integrate with Unify sequences and the rest
of the Unify product. Unify will automatically adjust sending patterns and
limits as needed.

## Setup

To get started, you'll first need to configure your domain and mailboxes. See
the next sections for more information.

<CardGroup cols={1}>
  <Card title="Domain Configuration" icon="globe" href="/reference/deliverability/domain-configuration" horizontal>
    Add domains to use for Unify-managed mailboxes.
  </Card>

  <Card title="Mailbox Configuration" icon="mailbox" href="/reference/deliverability/mailbox-configuration" horizontal>
    Provision Unify-managed mailboxes for your team to send emails from.
  </Card>
</CardGroup>


# 6sense Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/6sense

This guide outlines how start revealing anonymous visitors on your website using 6sense. If you already purchase a 6sense plan, this document is for you.

<Info>
  Prior to integrating intent data, please ensure that Unify is receiving website data by checking either [Settings -> Website Tag](https://app.unifygtm.com/dashboard/settings/integrations/website-tag) or [Settings -> Segment](https://app.unifygtm.com/dashboard/settings/integrations/segment), depending on which you configured.

  If you haven't done so yet, see [this guide](/tutorials/integrate-unify-to-your-website) for more information about setting up your website integration.
</Info>

## How to integrate 6sense

Navigate to [Settings -> 6sense](https://app.unifygtm.com/dashboard/settings/integrations/6sense) in Unify and complete the flow to connect your 6sense account. You will need your 6sense API key which can be found [here](https://abm.6sense.com/login?redirect=%2Fsettings%2Fintegration%2Fapitokenmanagement) in the 6sense dashboard.

<Warning>
  Some customers do not have their 6sense API token enabled by default. If that’s the case, you can reach out to either [support@6sense.com](mailto:support@6sense.com) or your dedicated CSM with the following email:

  > Hi there,
  >
  > We need an API token to hit the reveal ([https://epsilon.6sense.com/v3/company/details](https://epsilon.6sense.com/v3/company/details)) API in a server to server (not from the browser) mode.
  >
  > Could you please provide the API key?
  >
  > Thanks,
</Warning>


# Clearbit Reveal Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/clearbit

This guide outlines how start revealing anonymous visitors on your website using Clearbit Reveal. If you already purchase a Clearbit Reveal plan, this document is for you.

<Info>
  Prior to integrating intent data, please ensure that Unify is receiving website data by checking either [Settings -> Website Tag](https://app.unifygtm.com/dashboard/settings/integrations/website-tag) or [Settings -> Segment](https://app.unifygtm.com/dashboard/settings/integrations/segment), depending on which you configured.

  If you haven't done so yet, see [this guide](/tutorials/integrate-unify-to-your-website) for more information about setting up your website integration.
</Info>

## How to integrate Clearbit Reveal

Navigate to [Settings -> Clearbit](https://app.unifygtm.com/dashboard/settings/integrations/clearbit) in Unify and complete the flow to connect your 6sense account. You will need your 6sense API key which can be found [here](https://dashboard.clearbit.com/api) in the Clearbit dashboard.


# Gmail Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/gmail

This guide outlines how start sending and receiving emails via Gmail in Unify.

## Overview

Unify integrates with Gmail in order to send and receive emails in sequences. Once your mailbox is connected, you can start enrolling people in sequences and sending outbound emails.

## Connecting to Gmail

1. Go to [Settings -> Integrations -> Mailboxes](https://app.unifygtm.com/dashboard/settings/deliverability/mailboxes) in Unify and click **New Mailbox**

2. After being redirected to Gmail's authorization page, select the mailbox you want to connect and choose **Allow** to proceed

<Frame>![gmail-integration-step-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/gmail-integration-step-2.png)</Frame>

3. You will be redirected back to the mailbox settings page, where you can view the status of your mailboxes


# Google Tag Manager Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/google-tag-manager

This guide outlines how to install the Unify website tag using Google Tag Manager.

## Overview

Unify provides several different ways to start collecting intent data from your
website. The quickest way to get started is by installing the Unify website tag
directly on your website.

If you're using Google Tag Manager, you can add the website tag as a custom HTML
tag. This allows you to manage all of your scripts in one place and easily
control when and where they are loaded.

## Installation

For instructions, see the [Website Tag](/developers/intent-client/website-tag)
installation guide.


# HubSpot Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/hubspot/overview

This guide outlines how to connect your HubSpot CRM to Unify.

## Overview

In just a few steps, you can integrate Unify with HubSpot and start syncing data:

1. Add additional Unify fields as HubSpot properties
2. Connect your HubSpot account via OAuth
3. Create or update field mappings between HubSpot and Unify objects
4. Enable read and write syncs

## 1. Add additional Unify fields as HubSpot properties

In order to track actions that Unify is taking in your HubSpot instance with easy-to-create reports, you can add additional Unify fields as HubSpot properties. Prior to creating additional properties, it is recommended that you create a dedicated property group (recommended title "Unify information").

Below are some of the properties you might wish to create and map from Unify.

### Contact Properties

| Property label                     | Description                                                                                                                                              | Field type           |
| ---------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- |
| Unify Created At                   | Date and time that a record was created by Unify.                                                                                                        | Date and time picker |
| Unify Updated At                   | Date and time that a record was last updated by Unify.                                                                                                   | Date and time picker |
| Unify First Written At             | Date and time that a record was first created or updated by Unify.                                                                                       | Date and time picker |
| Unify Initial Play                 | Name of the play that initially ran on this record.                                                                                                      | Single-line text     |
| Unify Most Recent Play             | Name of the play that most recently ran on this record.                                                                                                  | Single-line text     |
| Unify Initial Sequence             | Name of the sequence that this record was initially enrolled in.                                                                                         | Single-line text     |
| Unify Initial Sequence At          | Date and time this person was first enrolled in a Unify Sequence.                                                                                        | Date and time picker |
| Unify Initial Sequence Step At     | Date and time this person first completed a step in a Unify Sequence.                                                                                    | Date and time picker |
| Unify Most Recent Sequence         | Name of the sequence that this record was most recently enrolled in.                                                                                     | Single-line text     |
| Unify Most Recent Sequence At      | Date and time this person was most recently enrolled in a Unify Sequence.                                                                                | Date and time picker |
| Unify Most Recent Sequence Step At | Date and time this person most recently completed a step in a Unify Sequence.                                                                            | Date and time picker |
| Unify Most Recent Sequence Status  | Status of the most recent enrollment for this person. The statuses shown on enrollments in Unify are the same values that will be written to Salesforce. | Single-line text     |

### Company Properties

| Property label         | Description                                                                                                                                                                 | Field type           |
| ---------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- |
| Unify Created At       | Date and time that a record was created by Unify.                                                                                                                           | Date and time picker |
| Unify Updated At       | Date and time that a record was last updated by Unify.                                                                                                                      | Date and time picker |
| Unify First Written At | Date and time that a record was first created or updated by Unify.                                                                                                          | Date and time picker |
| Unify Initial Play     | Name of the play that initially ran on this record.                                                                                                                         | Single-line text     |
| Unify Most Recent Play | Name of the play that most recently ran on this record.                                                                                                                     | Single-line text     |
| Unify Intent Level     | The intent that this Company has shown, between 'None', 'Low', 'Medium', and 'High'. Records may be written without this field if the company has shown no intent in Unify. | Single-line text     |

Here is what this process would look like for adding **Contact** properties:

First, in HubSpot, navigate to **CRM -> Contacts**.

<Frame>![HubSpot Home](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-7.png)</Frame>

Next, select **Actions -> Edit properties**.

<Frame>![HubSpot Contacts](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-8.png)</Frame>

You'll want to navigate to **Groups -> Create group**.

<Frame>![HubSpot Contact Property Groups](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-9.png)</Frame>

You'll then type in the name of the group (recommended title "Unify information") and click **Create**.

<Frame>![HubSpot Contact Create Property Group](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-10.png)</Frame>

Next, navigate to **Properties -> Create property**.

<Frame>![HubSpot Contact Properties](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-11.png)</Frame>

When editing the property details, make sure the **Object type** is set properly (in this case, to **Contact**) and the **Group** is set to whatever group you created earlier. You can fill in the **Label** and **Description** as you see fit (perhaps from the above table).

<Frame>![HubSpot Contact Create Property](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-12.png)</Frame>

Lastly, select the **Field type** and click **Create**.

<Frame>![HubSpot Contact Select Property Type](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-13.png)</Frame>

This is what your **Contact** properties filtered to your new group might look like after you've added them:

<Frame>![HubSpot Contact New Properties](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-14.png)</Frame>

You can repeat this process for **Company** properties as well. Later, you'll be able to map Unify fields to these properties.

## 2. Connect your HubSpot account via OAuth

You can connect your HubSpot account to Unify in the [HubSpot Settings](https://app.unifygtm.com/dashboard/settings/integrations/hubspot) page. Click on the **Setup HubSpot** button and log in using the HubSpot user you want to use.

<Frame>![HubSpot integration page](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-1.png)</Frame>

## 3. Create or update field mappings between HubSpot and Unify objects

Unify allows you to select which HubSpot properties map to which Unify fields. For each Unify object type, click on **Create Mapping** or, if you already have one, **Update Mapping** and choose which fields you want Unify to read and write to.

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-2.png)</Frame>

Once your field mappings are set, press **Confirm** if it is a new mapping or **Save** if it is an existing one.

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-3.png)</Frame>

In most cases, the default options will be a good starting point. You can always return to change these mappings later.

## 4. Enable read and write syncs

#### Reading from HubSpot

By default when you first connect HubSpot to Unify, syncs are paused. You can unpause them and begin syncing data into Unify by clicking **Resume**.

<Frame>![Before you've hit Resume](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-4.png)</Frame>

If at any point you want to pause syncs again, you can return to this page and click **Pause**.

<Frame>![After hitting resume](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-5.png)</Frame>

#### Writing to HubSpot

To start writing new records to HubSpot, simply activate the toggle next to **Enable writing to HubSpot** and Unify will be able to sync records back to HubSpot.

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-6.png)</Frame>

You can stop writing records any time by deactivating this toggle.


# Property Options
Source: https://docs.unifygtm.com/reference/integrations/hubspot/property-options

Find the options for a property in HubSpot not available in the Unify UI

## Explanation

Properties in HubSpot have a different name displayed in the UI from the value used on the backend. Most properties with
dropdown options will automatically have the UI value available for selection in Unify the same way it appears in HubSpot.
However, certain properties in HubSpot have options which are in fact not able to be fetched programmatically, and there
is nothing Unify can do to access them. This is a known limitation in HubSpot's API discussed [here](https://community.hubspot.com/t5/APIs-Integrations/External-Options-from-API/m-p/784158).
We at Unify have asked HubSpot's Co-Founder/CTO about it in [this thread](https://community.hubspot.com/t5/APIs-Integrations/Enumeration-property-has-no-options/td-p/757786)
as well, and will support the best available option for the time being.

## Workaround

In order to support using these options for filtering in audiences and/or exclusions, you can do the following workaround.
We will assume that the property you want to filter on is **Lifecycle Stage** on **Company** for the purpose of this
example.

First, in HubSpot, navigate to **CRM -> Companies**. Select **Actions -> Edit properties**.

<Frame>![Properties](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-15.png)</Frame>

Search for the property by its name (**Lifecycle Stage**).

<Frame>![Properties](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-16.png)</Frame>

Select the property.

<Frame>![Lifecycle Stage](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-17.png)</Frame>

Navigate to **Field type**. You will see a list of options, with **LABEL** and **INTERNAL NAME** values alongside
the number of records that have that value. You may want to copy these values to a secure separate location for easy
future reference. If you wish to filter records in Unify to a specific **LABEL** value, you can do so by using the
corresponding **INTERNAL NAME** value.

<Frame>![Property Options](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-18.png)</Frame>

Here is what that would look like in Unify for the **LABEL** value "Lead" and therefore **INTERNAL NAME** value "lead":

<Frame>![Filtering in Unify](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/hubspot-19.png)</Frame>


# How Bidirectional Syncs Work
Source: https://docs.unifygtm.com/reference/integrations/salesforce/bidirectional-syncs

This guide explains in depth how syncs work between Salesforce and Unify.

## Overview

Unify can create and update Salesforce records in response to Play runs and
sequence enrollments. This page summarizes the rules used to determine when and
how to create or update records in Salesforce.

## Configurable Settings

There are a few settings you can change in Unify to control whether and how
Unify data is written back to Salesforce. All of these settings can be found in
the [Salesforce integration settings](https://app.unifygtm.com/dashboard/settings/integrations/salesforce).

### Enable Writing to Salesforce

By default, writing to Salesforce is disabled. You need to enable it by toggling
the **Enable writing to Salesforce** option on:

<Frame caption="Enable the toggle to allow Unify to write to Salesforce.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/enable-writing-to-salesforce.png" />
</Frame>

### Use Contacts or Leads

Person records in Unify can be written back to Salesforce as either *contacts*
or *leads*.

When writing contacts, the associated company is written as an account linked to
the contact. When writing leads, however, the company information is stored
directly on the lead object in the **Company** and **Website** fields.

By default, Unify writes contacts and accounts. You can change this by selecting
an option in the settings dropdown:

<Frame caption="Choose between creating contacts or leads in Salesforce.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/create-records-as.png" />
</Frame>

### Customize Mapping

You can customize the field mapping for each Unify and Salesforce object type.
These mappings describe exactly which fields to read from Salesforce into Unify
and which fields to write back from Unify into Salesforce when creating or
updating records.

<Frame caption="Choose an object type to customize its field mappings.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/customize-mapping-buttons.png" />
</Frame>

<Frame caption="Once selected, customize the settings for each field individually.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/customize-mapping-fields.png" />
</Frame>

Within each mapping, you can choose a mapping direction for each field:

* **Read & Write**: This field will be synced in both directions between Unify and Salesforce
* **Read only**: This Salesforce field will be read from Salesforce to populate records in Unify
* **Write only**: This Unify field will be written when creating or updating records in Salesforce

## Behavior

Duplicates are strictly prevented within Unify. When creating new Salesforce
records, Unify will only ever create one record. If there is already an existing
Salesforce record of the same type, Unify will always update it rather than
creating a new one.

However, duplicates are a common problem in Salesforce and may already exist in
your Salesforce instance. In addition, users or other integrations may
accidentally create new duplicates over time.

In order to accommodate this reality, Unify follows specific rules to ensure
predictable behavior when updating duplicated Salesforce records. While Unify
cannot de-duplicate your Salesforce, it will *never* make the problem worse, and
in some situations may be able to help clarify the “source of truth” record.

### Contacts

Salesforce contacts are written by Unify if **Create new records as Contacts & Accounts**
is selected. In addition, contacts are sometimes created in place of leads if
the person being written to Salesforce *already exists* as a contact. Unify
cannot create a lead in this situation due to Salesforce’s
[contact duplicate rules](https://help.salesforce.com/s/articleView?language=en_US\&id=sf.duplicate_rules_standard_contact_rule.htm\&type=5).

In both situations, if there is an existing contact that matches the Unify
person being written, it will be updated. Matches are determined based on email
address. If there are no matches, a new contact will be created.

If there are multiple contacts that match the Unify person, only one will be
updated. Specifically, the contact that was most recently modified within
Salesforce is the one that will be updated.

### Accounts

Salesforce accounts are written by Unify whenever a contact is created or
updated. They are also written if a Salesforce sync action runs within a Play
that is running on companies.

If there is an existing account that matches the Unify company being written, it
will be updated. Matches are determined based on the domain of the company
website. Domains are normalized, so URLs that redirect to different domains will
not result in duplicates. If there are no matches, a new account will be
created.

If there are multiple accounts that match the Unify company, only one will be
updated. Specifically:

* If one account has more associated contacts than the other(s), that one will
  be updated
* Otherwise, the account that was most recently modified within Salesforce will
  be updated

### Leads

Salesforce leads are written by Unify when **Create new records as Leads** is
selected.

If there is an existing lead that matches the Unify company being written, it
will be updated. Matches are determined based on email address. If there are no
matches, a new lead will be created.

If there are multiple leads that match the Unify person, only one will be
updated. Specifically, the lead that was most recently modified within
Salesforce is the one that will be updated.

### Email Messages

Unify writes to the email message object in Salesforce, which is the recommended
approach for syncing email data to Salesforce. In order to write records of this
object type, the *Enhanced Email* feature must be enabled in Salesforce. This is
typically enabled by default.

Unify includes values for all of the standard fields on the email message object
when writing records:

* **Universal message ID**: A globally unique identifier that exists for all
  email messages.
* **Sender**: A reference to the user, contact, or lead that sent the email.
* **Recipients**: A list of the users, contacts, or leads that received the
  email.
* **Subject**: The subject of the email.
* **Content**: The body of the email.
* **Sent At**: The date and time the email was sent.
* **Is Bounced**: Whether the email bounced.

In addition, Unify supports writing values to custom fields if you
choose to create them:

* **Bounced At**: The date and time the email bounced.
* **Click Count**: The number of times one of the links in the email message was
  clicked by a recipient. Click tracking is powered by the Unify intent client
  installed on your website(s), which means that only links to websites where
  the intent client is installed will be tracked.
* **Clicked At**: The date and time that a link in the email was first clicked.
* **Is Marked as Spam**: Whether the email was marked as spam by a recipient.
  Keep in mind that Unify is not able to track this information consistently due
  to differences in how various email service providers handle spam.
* **Marked As Spam At**: The date and time the email was marked as spam by a
  recipient.
* **Is Opened**: Whether the email has been opened by a recipient.
* **First Opened At**: The date and time the email was first opened by a
  recipient.
* **Last Opened At**: The date and time the email was last opened by a
  recipient.
* **Track Opens**: Whether open tracking was enabled for this email. This
  setting can be configured within the [settings page](https://app.unifygtm.com/dashboard/settings/organization/sequences).
* **Is Opted Out**: Whether the recipient opted out of receiving emails.
* **Opted Out At**: The date and time the recipient opted out of receiving
  emails.
* **Enrolled By Play**: The Play that enrolled the recipient in the sequence.
* **Sequence Name**: The name of the sequence that this email is linked to.

Email messages are written to Salesforce for all emails sent as a part of Unify
sequences if the corresponding person already exists in Salesforce. This means
that in order to write email messages for sequence enrollments, you should
ensure that the person already exists in Salesforce or that you include a Play
action to sync them to Salesforce.


# Bulk Update Records
Source: https://docs.unifygtm.com/reference/integrations/salesforce/bulk-update-records

Use Salesforce reports to quickly update a large number of records in Salesforce.

## Explanation

If you need to update a large number of records in Salesforce, you can use Salesforce reports to simplify the process. A common use case is updating the value of a field across all records created by a Play. However, these steps are generally applicable to any set of Salesforce records.

## Steps

### Export the Records

1. Navigate to the **Reports** page.

<Tip>
  In the top-right corner of the screen, if you click the menu icon and search for “reports”, you should see a link to get there.

  <Frame>![export-the-records-step-1](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-1.png)</Frame>
</Tip>

2. In the top-right corner of the screen, select **New Report**
3. Choose a report type based on which type of records you need to update, and then click **Start Report** on the right

<Frame>![export-the-records-step-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-3.png)</Frame>

4. Be sure to add the `Id` column to your report in the sidebar, which is typically named after the record type you are selecting (e.g., `Account ID`, `Contact ID`, etc.)

<Frame>![export-the-records-step-4](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-4.png)</Frame>

5. Also add any additional columns that you wish to edit on the records
6. Add any filters or sorting options needed to narrow down the records you want to update

<Frame>![export-the-records-step-6](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-6.png)</Frame>

7. When ready, click **Save** in the top-right corner, enter a name, and then click **Save** again

<Frame>![export-the-records-step-7](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-7.png)</Frame>

8. Click **Run** in the top-right corner and verify these are the records you want to update
9. Click the dropdown arrow next to **Edit** in the top-right corner and select **Export**
10. Choose **Details Only** and **Comma Delimited .csv** as the format and then click **Export**

<Frame>![export-the-records-step-10](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/export-the-records-step-10.png)</Frame>

### Make Changes

1. Open the downloaded file and make any desired updates to the values
2. Save the changes as a new file so that the original is available as a backup

### Upload the Changed Records

1. Navigate to the **Setup** page in Salesforce

2. In the sidebar on the left, search for "data import wizard" and select the **Data Import Wizard** integration

3. Follow the on-screen instructions to update existing records and be sure to choose the option to match records by `Salesforce.com ID`

<Frame>![upload-the-changed-records-step-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/upload-the-changed-records-step-3.png)</Frame>

4. Ensure the mapping looks correct and that the ID column is mapped to `Salesforce.com ID`

<Frame>![upload-the-changed-records-step-4](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/upload-the-changed-records-step-4.png)</Frame>

5. Verify the details on the last page and then click **Start Import**

<Frame>![upload-the-changed-records-step-5](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/upload-the-changed-records-step-5.png)</Frame>

6. Once this bulk import is complete you’re all finished!


# Configure Default Values
Source: https://docs.unifygtm.com/reference/integrations/salesforce/default-values

This guide explains how to specify default values that should be used when writing to Salesforce.

## Explanation

When Unify creates or updates records in Salesforce, it will populate each Salesforce field using the value in the corresponding Unify field. However, sometimes Salesforce requires values for fields that are empty in Unify.

To resolve this, you can specify *default values* in Unify that will be used as a fallback when writing to Salesforce. You can specify values for Accounts, Contacts, and Leads in the upper right hand corner of the field mapping pages.

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/28.png)</Frame>

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/29.png)</Frame>


# Toggle Lead Assignment Rules in Salesforce
Source: https://docs.unifygtm.com/reference/integrations/salesforce/lead-assignment-rules

Troubleshoot a common bug in Salesforce related to lead assignment rules.

## Explanation

Salesforce allows you to create "lead assignment rules" that automatically assign different owners to leads depending on custom criteria. However, sometimes these rules don’t work right off the bat due to a specific bug in Salesforce. The steps outlined here should resolve the issue.

## Steps

### Ensure you have an active lead assignment rule

Navigate to the **Setup** page in Salesforce by clicking the settings icon in the top-right corner of any Salesforce page.

<Frame>![active-lead-assignment-rule-step-1](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/active-lead-assignment-rule-step-1.png)</Frame>

Search for **Lead Assignment Rules** in the sidebar.

<Frame>![active-lead-assignment-rule-step-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/active-lead-assignment-rule-step-2.png) </Frame>

You should see at least one rule with a checkmark under the **Active** column.

<Frame>![active-lead-assignment-rule-step-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/active-lead-assignment-rule-step-3.png) </Frame>

### Toggle the rule off and on

In the **Lead Assignment Rules** page from the previous step, click on the name of your rule and then select **Edit**. Uncheck the checkbox next to **Active** to temporarily deactivate the rule.

<Frame>![toggle-rule-off-on-step-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/toggle-rule-off-on-step-2.png) </Frame>

Click **Save**. Then click **Edit** again, re-check the checkbox next to **Active**, and then choose **Save**.

### Test that leads are assigned correctly in the UI

Navigate to the **Leads** page in Salesforce. You can get there via the app launcher.

<Frame>![test-leads-correctly-assigned-step-1](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/test-leads-correctly-assigned-step-1.png) </Frame>

In the top-right corner of the screen, select **New** to create a new lead.

<Frame>![test-leads-correctly-assigned-step-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/test-leads-correctly-assigned-step-2.png) </Frame>

Check the **Assign using active assignment rule** checkbox in the lower-left corner.

<Frame>![test-leads-correctly-assigned-step-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/test-leads-correctly-assigned-step-3.png) </Frame>

Fill out the required lead fields with values that should trigger the lead assignment rule you created and then click **Save** in the bottom-right corner.

Lastly, verify that the lead was assigned to the correct owner.


# Salesforce Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/salesforce/overview

This guide outlines how to connect your Salesforce instance to Unify.

## Overview

In just a few steps, you can integrate Unify with Salesforce and start syncing data:

1. Choose an integration user strategy
2. (Optional) Create custom fields
3. Connect your Salesforce instance

Unify is considered a *connected app* on the Salesforce platform which is a secure process for connecting Salesforce integrations with controllable permissions.

## 1. Choose integration user strategy

We recommend creating a dedicated, Unify-only integration user with a specific
permission set. This enables more robust reporting because it ensures all record
changes by Unify are properly attributed to Unify.

However, any of the approaches below are supported.

| Setup                                                  | Pros                                                                                                                                                                         | Cons                                                                                                                                                                 |
| ------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Dedicated, Unify-only integration user                 | This is best practice and our recommended option. The user is granted specific limited permissions and all updates made within Salesforce are clearly attributable to Unify. | This requires the purchase or use of a dedicated Salesforce user license, which may require time to set up at your company.                                          |
| Shared integration user with other connected apps      | This might be a better choice, because you may already use an integration user with other connected apps. You don't need to provision a new user.                            | Unify must share the permissions and limits of the shared integration user. If this user's access is shut down, all connected apps will be impacted.                 |
| Existing individual user with system admin permissions | This is typically the fastest and most affordable option because you use an individual user that already exists in your Salesforce. There's no need to create anything new.  | Unify is given full system access and edits made within Salesforce are attributed to the individual user. If the user leaves the company, the connection will break. |

You have full control over the permissions assigned to the integration user. However, Unify requires certain permissions for features to work properly. For a full overview of the required permissions and Salesforce settings, see [this guide](/reference/integrations/salesforce/required-permissions).

## 2. (Optional) Create custom fields

Unify can write additional Unify-specific information back to Salesforce, such
as the name of the sequence a person is enrolled in. In order for Unify to write
this data back to Salesforce, you need to create custom fields on the Salesforce
objects you want it written to.

Here are the Unify-specific fields you can map to Salesforce objects:

| Field                                                | Objects                          | Description                                                                                                                                                           |
| ---------------------------------------------------- | -------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Unify Metadata**<br />*(Text)*                     | *Account<br />Contact<br />Lead* | A unique identifier useful for tracking records that Unify writes to.                                                                                                 |
| **Unify Created At**<br />*(Date)*                   | *Account<br />Contact<br />Lead* | The date and time the record was created by Unify. This will only be populated if Unify created the record; otherwise, it will remain empty.                          |
| **Unify Updated At**<br />*(Date)*                   | *Account<br />Contact<br />Lead* | The date and time the record was last updated by Unify.                                                                                                               |
| **Unify First Written At**<br />*(Date)*             | *Account<br />Contact<br />Lead* | The date and time the record was first written to by Unify. This will be populated when Unify first creates or updates the record, and it will not change after that. |
| **Unify Initial Play**<br />*(Text)*                 | *Account<br />Contact<br />Lead* | The name of the first Unify Play that ran on this record.                                                                                                             |
| **Unify Most Recent Play**<br />*(Text)*             | *Account<br />Contact<br />Lead* | The name of the most recent Unify Play that ran on this record.                                                                                                       |
| **Unify Initial Sequence**<br />*(Text)*             | *Contact<br />Lead*              | The name of the first Unify Sequence this person was enrolled in.                                                                                                     |
| **Unify Initial Sequence At**<br />*(Date)*          | *Contact<br />Lead*              | The date and time this person was first enrolled in a Unify Sequence.                                                                                                 |
| **Unify Initial Sequence Step At**<br />*(Date)*     | *Contact<br />Lead*              | The date and time this person first completed a step in a Unify Sequence.                                                                                             |
| **Unify Most Recent Sequence**<br />*(Text)*         | *Contact<br />Lead*              | The name of the most recent Unify Sequence this person was enrolled in.                                                                                               |
| **Unify Most Recent Sequence At**<br />*(Date)*      | *Contact<br />Lead*              | The date and time this person was most recently enrolled in a Unify Sequence.                                                                                         |
| **Unify Most Recent Sequence Step At**<br />*(Date)* | *Contact<br />Lead*              | The date and time this person most recently completed a step in a Unify Sequence.                                                                                     |
| **Unify Most Recent Sequence Status**<br />*(Text)*  | *Contact<br />Lead*              | The status of the most recent enrollment for this person. The statuses shown on enrollments in Unify are the same values that will be written to Salesforce.          |

All of these fields are optional. You can choose to create all of them, some of
them, or none of them. At a minimum, we recommend creating the **Unify Metadata**
field to track records which records Unify touches in Salesforce.

<Info>
  To create a custom field in Salesforce:

  1. In Salesforce, navigate to **Setup -> Objects and Fields -> Object Manager**.
  2. Click on the object you want to create a field on
  3. Choose **Fields & Relationships -> New**
  4. Select the correct data type for the field you want to create
     1. For text fields, choose the **Text** data type and set the length to **255**.
     2. For date fields, choose the **Date/Time** data type.
     3. The field should not be marked as "required" or "unique".

  Once the new field is saved, repeat these steps for each of the other fields.

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/18.png)</Frame>

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/19.png)</Frame>

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/20.png)</Frame>

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/21.png)</Frame>
</Info>

## 3. Connect Salesforce instance

Navigate to [Settings -> Salesforce](https://app.unifygtm.com/dashboard/settings/integrations/salesforce)
and select **Connect**. You will be redirected to the Salesforce authentication
page where you can sign in using the desired Salesforce integration user that
Unify will use.

<Frame caption="This screen will appear before you have connected a Salesforce organization.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/connect-salesforce-instance.png" />
</Frame>

Once connected, syncs will be paused by default. You can look over the settings
and field mappings before resuming syncs.

<Frame caption="Once a connected, you will see the settings available for your Salesforce connection.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/connected-settings.png" />
</Frame>

### Choose which objects to create

Salesforce has two different ways of representing companies and people:

1. **Contacts and Accounts**: Every person has a Contact record, and Contacts are associated with Accounts.
2. **Leads**: Every person has a Lead record which contains information about both the person and their company.

Unify allows you to choose which object strategy you want to use. You should
pick the option that best aligns with how your BDRs or SDRs use Salesforce today.
If you're unsure of which to choose, Unify recommends using Contacts and Accounts
as a best practice.

### Create field mappings

Unify provides granular control over which Salesforce fields map to which Unify
fields. For each Unify object type, click on **Create Mapping** and choose which
fields you want Unify to read and write to.

<Frame caption="The field mappings page allows you to customize which fields Unify can read and write to.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/integrations/salesforce/companies-field-mapping.png" />
</Frame>

For each field, you can choose the read and write behavior. The available options
are:

* **Read Only**: Unify can read this field from Salesforce but will never write to it.
* **Read & Write**: Unify can read this field from Salesforce and write to it if it is currently empty. Unify will never overwrite the value if it is already set.
* **Read, Write & Update**: Unify can read this field from Salesforce and write to it. If the field is already set, Unify will overwrite the value with the new one.

If Unify does not have permission to write to a field, you may not see the
write options for that field.

In most cases, the default options will be a good starting point. You can always
return to change these mappings later by selecting **Update Mapping**.

### Enable read and write syncs

Once you're satisfied with your integration settings and field mappings, you can
begin syncing data into Unify by selecting **Resume**. If at any point you want
to pause syncs again, you can return to this page and select **Pause**.

To enable Unify to write data back to Salesforce, activate the toggle next to
**Enable writing to Salesforce**. This will allow Unify to sync records back to
Salesforce.

## Additional Salesforce resources

<Card icon="shield-check" title="Required Permissions" href="/integrations/salesforce/required-permissions">
  Ensure your Salesforce user has the correct permissions and settings enabled
  for Unify.
</Card>

<Card icon="pen-to-square" title="Configure Default Values" href="/integrations/salesforce/default-values">
  Specify default values that should be used when writing to Salesforce.
</Card>


# Required Permissions and Settings
Source: https://docs.unifygtm.com/reference/integrations/salesforce/required-permissions

Ensure your Salesforce user has the required permissions for Unify.

## Explanation

If you’re using a dedicated Salesforce user to connect your Salesforce instance to Unify, it needs the correct permissions enabled to work properly. Follow these steps to ensure your integration user is ready to use.

## Permissions

This section covers the permissions Unify requires to be enabled for the integration user. Permissions are enabled for the *profile* assigned to the user.

<Tip>
  **How do I modify the user profile permissions?**

  1. Navigate to the **Setup** page in Salesforce by clicking the “gear” icon in the top-right corner of any Salesforce page.

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-1.png)</Frame>

  2. In the sidebar on the left-hand side of the screen, under **Administration** navigate to **Users → Profiles**.

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-2.png)</Frame>

  3. If the user profile does not exist yet, select **New Profile** in the top left, fill in a profile name, and then select **Save**.

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-3.png)</Frame>

  4. Find the profile you want to use and select **Edit**.

  <Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-4.png)</Frame>
</Tip>

### Administrative Permissions

Under **Administrative Permissions**, ensure the following options are selected:

1. **API Enabled** -> Required for Unify to access and interact with Salesforce
2. **View All Users** -> Required to link Salesforce users to Unify users
3. **View Setup and Configuration** -> Required to access object metadata and configuration

Here's what it should look like:

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-5.png)</Frame>
<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-6.png)</Frame>

### General Permissions

Under the **General User Permissions** section, ensure that **Access Activities** is enabled:

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-7.png)</Frame>

### Object Permissions

Under the **Standard Object Permissions** section, ensure that **Read**, **Create**, **Edit**, and **Delete** are enabled for each of the following objects:

1. **Account**
2. **Contact**
3. **Lead**
4. **Opportunity**
5. **Email Message**

Here's what it should look like for accounts:

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/salesforce-permissions-8.png)</Frame>

## Settings

### Enhanced Emails

If you send emails using Unify, Unify can record those sent emails in Salesforce. Unify writes emails to Salesforce using the **Email Message** object type, which requires the *Enhanced Email* feature to be enabled in Salesforce. This is typically enabled by default.

If you don't see the **Email Message** object in your Salesforce instance, follow this guide to enable it:

<Card icon="envelope" title="Set Up Enhanced Email" href="https://help.salesforce.com/s/articleView?id=sf.enable_enhanced_email.htm&type=5">
  Salesforce support article explaining how to enable Enhanced Email.
</Card>

For more information on Enhanced Email, see these articles from Salesforce:

* [Use Enhanced Email for More Email Functionality](https://help.salesforce.com/s/articleView?id=sf.emailadmin_enhanced_email_overview.htm\&type=5)
* [Considerations for Using Enhanced Email](https://help.salesforce.com/s/articleView?id=sf.emailadmin_enhanced_email_considerations.htm\&type=5)


# Segment Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/segment

This guide outlines how to connect your Segment workspace to Unify.

## Overview

If you use Segment to collect website analytics, Unify can be connected to your Segment workspace as a destination in order to reveal web traffic data. This will also let you build audiences and Plays using Segment analytics data.

## Steps

<Note>
  If you’re also using the Unify Tag, make sure that it isn’t running on the same websites as Segment or else events may be double counted.
</Note>

### Generate a key in Unify

1. Log in to Unify

2. Navigate to [Settings -> Integrations -> Segment](https://app.unifygtm.com/dashboard/settings/integrations/segment) and click **Setup**

   <Frame>![Setup.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/53.png)</Frame>

3. Click the **Copy** button to copy the write key to your clipboard

   <Frame>![Write Key.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/54.png)</Frame>

## Add Segment destination

1. Log in to Segment and click on the **Destinations** tab in the sidebar

   <Frame>![Screenshot 2023-08-23 at 8.02.29 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/55.png)</Frame>

2. Click **Add destination** in the top right corner

   <Frame>![Screenshot 2023-08-23 at 7.02.47 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/56.png)</Frame>

3. Search for “webhook” and select the **Webhook (actions)** destination

   <Frame>![Screenshot 2023-08-23 at 7.03.49 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/57.png)</Frame>

4. Click **Add destination** again in the top right corner

   <Frame>![Screenshot 2023-08-23 at 7.05.58 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/58.png)</Frame>

5. Select website source whose data you want to send to Unify and then click **Next**

   <Frame>![Screenshot 2023-08-23 at 7.08.02 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/59.png)</Frame>

6. Give this destination a name, make sure **Fill in settings manually** is selected, and click **Create destination**

   <Frame>![Screenshot 2023-08-23 at 7.13.50 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/60.png)</Frame>

7. Click on the **Mappings** tab on the top and then select **New Mapping**

   <Frame>![Screenshot 2023-08-23 at 7.18.04 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/61.png)</Frame>

8. Choose the **Send** option

   <Frame>![Screenshot 2023-08-23 at 7.21.39 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/62.png)</Frame>

9. Fill in the following mapping values…
   1. Under **Section 1**:

      1. Unify currently supports Page, Track, and Identify event types. You should select **any** and then list all of these types.
      2. If there are specific event types that you know you do not want to forward to Unify, you can safely omit them.

      <Frame>![Screenshot 2023-08-23 at 7.24.38 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/63.png)</Frame>

   2. Under **Section 2**:

      1. Click **Load Sample Event** to populate the box with an example Segment event

      <Frame>![Screenshot 2023-08-23 at 7.29.31 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/64.png)</Frame>

   3. Under **Section 3**:

      1. Next to **URL**, fill in the following value:

         ```
         https://analytics.unifygtm.com/api/v1/webhooks/segment
         ```

      2. List two values under **Headers** (click **Add Mapping Field** to add more boxes):
         1. `<YOUR WRITE KEY` → `X-Write-Key`
         2. `application-json` → `Content-Type`

      3. Be sure to replace `<YOUR WRITE KEY>` with the key you copied earlier

      <Frame>![Screenshot 2023-08-23 at 7.42.22 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/65.png)</Frame>

   4. Under **Section 4**:

      1. Send a test event to verify that it’s working

      <Frame>![Screenshot 2023-08-23 at 7.44.09 PM.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/66.png)</Frame>

That’s it! If you see **Test succeeded**, you’re all set. Traffic should now be flowing into Unify.


# Slack Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/slack

This guide details the process of integrating Unify with your Slack workspace.

<Note>
  To add an app to your Slack workspace, you need the necessary permissions as
  per your organization's policy. Refer to [Slack's roles and
  permissions](https://slack.com/help/articles/201314026-Permissions-by-role-in-Slack)
  or consult with a workspace owner or admin.
</Note>

## Connecting to Slack

Go to [Settings -> Integrations -> Slack](https://app.unifygtm.com/dashboard/settings/integrations/slack) in Unify and press the **Connect** button.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/68.png)</Frame>

You will be redirected to Slack's authorization page. Click **Allow** to proceed.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/69.png)</Frame>

You will be redirected back to the Slack settings page, where you can view the status of your connection.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/70.png)</Frame>


# Zapier Integration Guide
Source: https://docs.unifygtm.com/reference/integrations/zapier

If you use Zapier to run automations, you can connect your account to Unify and run Zaps as a part of Unify sequences.

## 1. Generate an API Key in Unify

1. Log in to Unify and navigate to [Settings -> API Keys](https://app.unifygtm.com/dashboard/settings/integrations/api-keys)

2. Click **Generate new API Key** and optionally enter a name for the API key to specify its intended purpose (e.g. "Zapier")

   <Frame>
     ![zapier-integration-step-1](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-1.png)
   </Frame>

3. When the modal opens, click the **Copy** button to copy the API key to your clipboard. You should store the API key in a secure location (e.g. a password manager). For security reasons, you will not be able to access the value of the API key again after you close the modal.

   <Frame>
     ![zapier-integration-step-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-2.png)
   </Frame>

## 2. Zapier Setup

### Adding a Connection to Unify

1. Log in to Zapier and click on **Apps** in the left navigation bar.

   <Frame>
     ![zapier-integration-step-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-3.png)
   </Frame>

2. Next, click **Add connection**.

   <Frame>
     ![zapier-integration-step-4](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-4.png)
   </Frame>

3. Search for "Unify" and click on the appropriate result.

   <Frame>
     ![zapier-integration-step-5](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-5.png)
   </Frame>

4. Here, you will use the API key that you created in Unify to connect to the Unify API. Optionally, enter a name for the connection.

   <Frame>
     ![zapier-integration-step-6](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-6.png)
   </Frame>

5. You should then see Unify application in your list of applications, possibly under **Other apps**.

   <Frame>
     ![zapier-integration-step-7](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-7.png)
   </Frame>

You can now use Unify Triggers and Actions in your Zaps!

### Creating a Zap with a Unify Trigger

1. Log in to Zapier and click on **Create -> Zaps**. When selecting a Trigger, search for "Unify".

   <Frame>
     ![zapier-integration-step-8](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-8.png)
   </Frame>

2. When choosing an Event, select "Sequence Step".

   <Frame>
     ![zapier-integration-step-9](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-9.png)
   </Frame>

3. Click on **Choose** when prompted to choose an account. You should then see the connection you created in the dropdown.

   <Frame>
     ![zapier-integration-step-10](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-10.png)
   </Frame>

4. Next, you will enter a name for the Zap you are creating that will be used to identify the Zap in Unify.

   <Frame>
     ![zapier-integration-step-11](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-11.png)
   </Frame>

5. You can then test the Trigger you've created to view test data from your application (if you have not used Unify sequences before, you will be shown demo data).

   <Frame>
     ![zapier-integration-step-12](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-12.png)
   </Frame>

6. And now you can use data from the selected record to finish creating your Zap!

   <Frame>
     ![zapier-integration-step-13](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-13.png)
   </Frame>

### Adding a Unify Action to a Zap

If you have created a Zap with a Unify Trigger, you can now add a Unify Action to the Zap. Currently, this is used for prompting the Unify sequence to move to the next step.

<Note>
  Depending on how you configure your Unify sequence, you may not need to add a
  Unify Action to your Zap. If you select the **Proceed Immediately** option in
  the Sequence builder, the sequence will automatically move to the next step
  when the Zap is triggered. Otherwise, it will await a Unify Action from the
  Zap.
</Note>

1. Here, when selecting an Action, you will once again search for "Unify".

   <Frame>
     ![zapier-integration-step-14](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-14.png)
   </Frame>

2. Select an Event: **Move to Next Step**, for example. This event will cause the Unify sequence to move to its next step if there is one, or to the end of the sequence if there isn't. The **End Sequence** event will end the Unify sequence immediately.

   <Frame>
     ![zapier-integration-step-15](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-15.png)
   </Frame>

3. You shouldn't be required to choose an account - it should default to the account with which you created the Trigger.

4. You will map the **Sequence ID** from the Unify Trigger to the **Sequence ID** field required by the Unify Action.

   <Frame>
     ![zapier-integration-step-16](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-16.png)
   </Frame>

5. If you would like, you can test the Action to see that Unify receives the data correctly.

   <Frame>
     ![zapier-integration-step-17](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-17.png)
   </Frame>

## 3. Using Zaps in Unify Sequences

1. Navigate to the [Sequences page](https://app.unifygtm.com/dashboard/sequences) and click **New Sequence**

2. You will now have the option to **Launch a Zap** as part of your sequence. Feel free to include as many or as few Zapier steps in your sequences as you like (you can have multiple Zapier steps in a single sequence).

   <Frame>
     ![zapier-integration-step-18](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-18.png)
   </Frame>

3. When building a Zapier step, you should be able to select the Zap you created earlier from the dropdown (identified by the name you entered into the Unify Trigger).

   <Frame>
     ![zapier-integration-step-19](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-19.png)
   </Frame>

4. Once you have selected the Zap, you will have the choice to proceed with the sequence immediately after the Zap is triggered or to wait for an action back from the Zap. If you did not add a Unify Action to your Zap, you should choose **Proceed to next step immediately**. This is a good option if you would like the sequence to continue moving forward while the Zap is running.

   <Frame>
     ![zapier-integration-step-20](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-20.png)
   </Frame>

5. Alternatively, you can choose to wait for an action back from the Zap. In this case, you will have wanted to create a Unify Action in your Zap to move the sequence to the next step. If you did this, you can select **Wait for Zapier Action to proceed**. You can then specify a **Zapier Action Timeout**, which is the amount of time you are willing to wait for the response from Zapier before moving on to the next step.

   <Frame>
     ![zapier-integration-step-21](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-21.png)
   </Frame>

6. Lastly, you can add up to 10 custom text fields to the data passed to your Zap. This is a good opportunity to use Unify's powerful text editor, with template variables and reusable snippets, including LLM-generated **Smart Snippets**. These custom text fields will be available to you in your Zap as variables, and you can use them to customize your Zap's behavior.

   <Frame>
     ![zapier-integration-step-22](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-22.png)
   </Frame>

7. After you are satisfied with your sequence (including whatever Zapier steps you have added), you can click **Publish** and view the steps in your sequence.

   <Frame>
     ![zapier-integration-step-23](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/zapier-integration-step-23.png)
   </Frame>

Now you can enroll people in your sequence and perform whatever custom logic you want to perform in your Zap!


# Authentication Options
Source: https://docs.unifygtm.com/reference/management/authentication

Learn about the login methods available for your organization in Unify.

## Overview

Unify supports the following forms of authentication:

1. **Username and Password**: Users can log in with an email address and password managed by Unify.

2. **Google Workspace**: Users can log in using a Google account associated with your organization's Google Workspace.

3. **Single Sign-On (SSO) via SAML 2.0**: For enterprise customers, Unify supports SSO through the SAML 2.0 protocol. This allows your organization to use your existing identity provider (IdP), such as Okta or Azure AD, to authenticate your users.

All methods are powered by Auth0, the leading industry standard for secure authentication.

### Single Sign-On (SSO)

Our team will work directly with you to integrate Unify with your identify provider. Below are the steps and information we'll cover during this process.

#### Supported Identity Providers (IdPs)

* Okta
* Azure Active Directory (AD)
* Any SAML 2.0 compliant IdP

#### Information required for SSO setup

* **Sign In URL**: The URL where SAML authentication requests are sent. This is also called the single sign-on (SSO) endpoint.
* **Sign Out URL**: The URL where SAML logout requests are sent. This is also called the single logout (SLO) endpoint.
* **X.509 Certificate**: A certificate used to verify the SAML response.


# Unify Credit System
Source: https://docs.unifygtm.com/reference/management/credit-system

Learn how credits work in Unify.

## Overview

Unify operates on a flexible, usage-based credit system that scales with your
needs. Credits are consumed by various activities such as prospecting,
enrichment, AI Agent runs, and certain intent signals.

## How credits work

Here are the key points to know about the credit system:

* **Credit Value**: Each Unify Credit represents a unit of platform usage.

* **Consumption**: Credits are deducted in real-time as features are used.

* **Replenishment**: Credits reset monthly or annually based on your plan. Add
  credits at anytime on the [Usage](https://app.unifygtm.com/dashboard/settings/organization/usage)
  page or upgrade your plan on the [Plans & Billing](https://app.unifygtm.com/dashboard/settings/billing)
  page.

You can monitor your credit consumption on the [Usage](https://app.unifygtm.com/dashboard/settings/organization/usage)
page.

## Credit consumption

Different features consume credits at different rates. Here's a breakdown of the
credit consumption of each feature:

| Feature                        | Unify Credits | Unit                              | Description                                                                                                                  |
| ------------------------------ | ------------- | --------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |
| Website Reveals                | 0.1           | Per website visitor revealed      | Website reveals are triggered by adding our website tag and turning on Unify Intent.                                         |
| Person Enriched (B2B Email)    | 2             | Per person enriched               | People that are uploaded via CSV without emails or prospected via the prospecting step are enriched when run through a Play. |
| Person Enriched (Phone Number) | 4             | Per person enriched               | Phone number enrichment can be turned on in the prospecting node in Unify.                                                   |
| New Hire Tracking              | 5             | Per new hire found                | A new hire is returned when someone within the customer defined specifications that has moved jobs in the last 90 days.      |
| Champion Tracking              | 1             | Per champion track attempt        | Champions are set up by users and are tracked on a monthly basis.                                                            |
| AI Agent                       | 1             | Per question answered per company | Agents can be configured to answer various per each company or person they are run on.                                       |

## Best practices

* **Use Prospecting Limits**: Set limits on the number of people you want to prospect for at each company, especially when targeting only a couple personas.

* **Create Specific Personas**: Be as specific as possible when listing titles to include or exclude in your buyer persona to make sure you aren't prospecting for unqualified contacts.

* **Set Global Exclusions**: Exclusions are a helpful way to make sure that you are not prospecting, enriching, or tracking people who don't fit your ICP.

## Need Help?

* Contact [billing@unifygtm.com](mailto:billing@unifygtm.com) for credit-related questions

* Visit our [Reference Center](/reference/overview) for detailed guides on each feature


# Organization Settings
Source: https://docs.unifygtm.com/reference/management/organization-settings

Configure your organization within Unify.

Users with suffient permission can configure their organization settings within Unify. There are a variety of available configuration options, including:

* **Company name**: The name of your organization.
* **Managed signature**: A standardized email signature to be included in all outbound emails sent by Unify users. This is a template that will dynamically construct each signature based on the user's profile information.
* **Custom user fields**: Additional fields that can be set for each user profile. These values can then be used with other Unify features, such as email signatures and snippets.

You will find these options within [Settings](https://app.unifygtm.com/dashboard/settings/organization/general).

<Frame caption="This is what the organization settings page looks like.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/management/organization-settings.png" />
</Frame>


# User Management
Source: https://docs.unifygtm.com/reference/management/user-management

Manage users and permissions within Unify.

Admins with suffient permission can invite new users and manage existing users from the [Users](https://app.unifygtm.com/dashboard/settings/organization/users) settings tab. Once invited, new users will receive an email with a link to log in and create their profile.

{/* TODO: Replace this image with a dark mode version when available. */}

<Frame caption="This is what the user management settings page looks like.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/management/user-management.png" />
</Frame>


# Reference Guide
Source: https://docs.unifygtm.com/reference/overview

Bring your most creative go-to-market ideas to life with Unify.

<CardGroup cols={2}>
  <Card title="Plays" icon="arrow-progress" href="/reference/plays/overview">
    Automate your go-to-market motion with repeatable strategies and campaigns.
  </Card>

  <Card title="Signals" icon="fire" href="/reference/signals/overview">
    Identify and engage your target accounts with real-time buying signals.
  </Card>

  <Card title="Sequences" icon="envelopes" href="/reference/sequences/overview">
    Personalize your outreach at scale with dynamic multi-channel outbound.
  </Card>

  <Card title="Deliverability" icon="inboxes" href="/reference/deliverability/overview">
    Safeguard your deliverability and domain reputation as you scale your
    outbound.
  </Card>

  <Card title="Integrations" icon="gear" href="/reference/integrations/salesforce/overview">
    Connect and orchestrate your full stack end-to-end in minutes, not months.
  </Card>

  <Card title="Management" icon="lock" href="/reference/management/user-management">
    Add or remove users, control organization settings, and set up authentication.
  </Card>
</CardGroup>


# Play Actions
Source: https://docs.unifygtm.com/reference/plays/actions

Actions are the building blocks of Unify Plays.

## Overview

Plays chain together actions to perform anything from simple automations to
complex and dynamic outbound campaigns. Below are the actions you can choose
from when creating a Play.

## Core actions

### Agent qualification

AI agents are powerful tools for researching companies or people and answering
questions about them. In Plays, the answers provided by an agent can be used to
determine whether a company or person is qualified or not.

When you select the agent qualification action, you will be able to choose an
existing agent or create a new one. Every agent has a set of questions that it
will answer about the given record. In the action configuration panel, you can
select which answers are required for the record to be considered qualified.

<Frame caption="The configuration for an agent action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/ai-agent-qualification-action.png" />
</Frame>

### Prospect for new People

One of the most common use cases for Plays is to find new people to reach out
to. The prospecting action takes a company record as input and finds new people
at the company matching specific personas and criteria.

When you select the prospecting action, you can specify one or more personas to
search for. The personas are considered in order, so the first persona will be
preferred over the second, and so on.

<Frame caption="The configuration for a prospecting action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/prospect-for-people-action.png" />
</Frame>

You can also specify a limit on the number of people to find per company. If the
**Include existing people** option is enabled, existing people at the company
already in Unify will count towards this limit. This can be useful if you want
to save prospecting credits on companies you already have relevant contacts for.

### Sequence enrollment

The sequence enrollment action makes building automated outbound campaigns
easier than ever. You can choose which sequences to send people to based on
which personas they match.

<Frame caption="The configuration for an sequence enrollment action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/sequence-enrollment-action.png" />
</Frame>

You have the option to set a limit on how many people to enroll per company,
which is generally recommended to avoid overtargeting a single company.

### Slack alert

The Slack alert action allows you to send a customized Slack message at any
point in a Play. You can send messages to any public channels or DM any users in
your workspace.

<Frame caption="The configuration for a Slack alert action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/slack-alert-action.png" />
</Frame>

The contents of the messages can be customized with template variables, so you
can include information about the record that triggered the action.

<Note>
  If the value for a template variable is missing, the message will still be sent,
  but the variable will be replaced with `Unknown`.
</Note>

You may optionally tag the owner of the account (e.g. `@John Doe`), so they can
be easily notified of the alert. You can also include intent signal information
containing recent website visitors, G2 page views, and more.

This action is available when Slack connected to Unify. See the [Slack Integration Guide](/reference/integrations/slack)
for information on integrating Slack with Unify.

### Sync to Salesforce

The Salesforce sync action allows you to create or update a record in Salesforce
based on a company or person record in Unify. This action will use the settings
you've configured for Salesforce in the Unify settings.

You also have the option to specify additional default field values. These will
be written to Salesforce unless a different Unify field is already mapped to the
Salesforce field.

<Frame caption="The configuration for a Salesforce sync action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/sync-to-salesforce-action.png" />
</Frame>

### Sync to HubSpot

The HubSpot sync action allows you to create or update a record in HubSpot based
on a company or person record in Unify. This action will use the settings you've
configured for HubSpot in the Unify settings.

You also have the option to specify additional default field values. These will
be written to HubSpot unless a different Unify field is already mapped to the
HubSpot field.

<Frame caption="The configuration for a HubSpot sync action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/sync-to-hubspot-action.png" />
</Frame>

## Utility actions

### Loop

<Note>
  In order to fully understand the purpose of loops and how to use them
  effectively, it's recommended that you read about action [inputs and outputs](/reference/plays/building-a-play#inputs-and-outputs) first.
</Note>

Most actions run on one record at a time. Loops are a simple way to run one or
more actions on every record in a list.

For example, a **Prospect for new People** action will return a list of people.
You can connect a loop action to the prospecting action and then add actions
within the loop. The first action in the loop will receive one person at a time.

### If / Else

The if-else action creates a branch in a Play, evaluates some conditions for
records, and sends them down one of two paths based on the result. This allows
you to perform different actions on different records based on criteria that you
specify.

<Frame caption="The branch created by an if-else action in a Play.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/if-else-action.png" />
</Frame>

This action enables you to solve a wide variety of more complex use cases using
Plays. For example, you can enroll people into different sequences based on
their company firmographics, exact job title, or custom CRM field values.

### Delay

The Delay action waits for a specified amount of time before continuing to the
next action in a Play. This can be useful for spacing out actions in a Play and
ensuring that actions are performed at the right time.

<Frame caption="You can customize the amount of time to wait before the next action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/delay-action.png" />
</Frame>

This action is particularly useful when combined with if-else actions. For
example, when a person visitors your website, it can be useful to wait a few
minutes before taking action to see which pages they end up visitor or whether
they fill out a form.

### Get Company for Person

If you have a person record, you can use this action to fetch the company that
the person works at. If the person does not have a company associated with them,
this action will not return any result.

### Get People for Company

If you have a company record, you can use this action to fetch people that work
at the company. Unlike the **Prospect for new People** action, this action only
looks for people that already exist in Unify rather than prspect for new people.

## Coming soon

There are lots of additional actions in the works including more powerful AI
features and deep integrations with third-party tools. If you're interested in
an action that isn't available yet, [let us know](mailto:support@unifygtm.com)!
We'll get you in the beta as soon as it's ready.


# Building a Play
Source: https://docs.unifygtm.com/reference/plays/building-a-play

Learn the fundamentals of creating Plays in Unify.

export const PlayBuilderCompanyHandleDark = () => <svg className="hidden dark:block" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#403C2A" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#404040" />
    <g clip-path="url(#clip0_2769_1689)">
      <path d="M5.75 16.25H16.25" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 8.66663H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 11H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 13.3334H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 8.66663H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 11H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 13.3334H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M6.91699 16.25V6.91667C6.91699 6.60725 7.03991 6.3105 7.2587 6.09171C7.47749 5.87292 7.77424 5.75 8.08366 5.75H13.917C14.2264 5.75 14.5232 5.87292 14.7419 6.09171C14.9607 6.3105 15.0837 6.60725 15.0837 6.91667V16.25" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1689">
        <rect width="14" height="14" fill="white" transform="translate(4 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderCompanyHandleLight = () => <svg className="block dark:hidden" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#FFFAE6" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#E2E2E2" />
    <g clip-path="url(#clip0_2769_1689)">
      <path d="M5.75 16.25H16.25" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 8.66663H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 11H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 13.3334H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 8.66663H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 11H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 13.3334H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M6.91699 16.25V6.91667C6.91699 6.60725 7.03991 6.3105 7.2587 6.09171C7.47749 5.87292 7.77424 5.75 8.08366 5.75H13.917C14.2264 5.75 14.5232 5.87292 14.7419 6.09171C14.9607 6.3105 15.0837 6.60725 15.0837 6.91667V16.25" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1689">
        <rect width="14" height="14" fill="white" transform="translate(4 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonListHandleDark = () => <svg className="hidden dark:block" width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" fill="#323F3E" />
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" stroke="#404040" />
    <g clip-path="url(#clip0_2769_1947)">
      <path d="M12.083 12.1667C12.083 10.5558 13.3889 9.25 14.9997 9.25C16.6105 9.25 17.9163 10.5558 17.9163 12.1667V12.4583" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M15 9.25C15.9665 9.25 16.75 8.4665 16.75 7.5C16.75 6.5335 15.9665 5.75 15 5.75C14.0335 5.75 13.25 6.5335 13.25 7.5C13.25 8.4665 14.0335 9.25 15 9.25Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M5.08301 15.6667V15.0833C5.08301 12.8282 6.91118 11 9.16634 11C11.4215 11 13.2497 12.8282 13.2497 15.0833V15.6667" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.16634 11C10.455 11 11.4997 9.95529 11.4997 8.66665C11.4997 7.37798 10.455 6.33331 9.16634 6.33331C7.87768 6.33331 6.83301 7.37798 6.83301 8.66665C6.83301 9.95529 7.87768 11 9.16634 11Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1947">
        <rect width="14" height="14" fill="white" transform="translate(4.5 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonListHandleLight = () => <svg className="block dark:hidden" width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" fill="#F0FBFA" />
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" stroke="#E2E2E2" />
    <g clip-path="url(#clip0_2769_1947)">
      <path d="M12.083 12.1667C12.083 10.5558 13.3889 9.25 14.9997 9.25C16.6105 9.25 17.9163 10.5558 17.9163 12.1667V12.4583" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M15 9.25C15.9665 9.25 16.75 8.4665 16.75 7.5C16.75 6.5335 15.9665 5.75 15 5.75C14.0335 5.75 13.25 6.5335 13.25 7.5C13.25 8.4665 14.0335 9.25 15 9.25Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M5.08301 15.6667V15.0833C5.08301 12.8282 6.91118 11 9.16634 11C11.4215 11 13.2497 12.8282 13.2497 15.0833V15.6667" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.16634 11C10.455 11 11.4997 9.95529 11.4997 8.66665C11.4997 7.37798 10.455 6.33331 9.16634 6.33331C7.87768 6.33331 6.83301 7.37798 6.83301 8.66665C6.83301 9.95529 7.87768 11 9.16634 11Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1947">
        <rect width="14" height="14" fill="white" transform="translate(4.5 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonHandleDark = () => <svg className="hidden dark:block" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#323F3E" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#404040" />
    <path d="M6.91699 15.6667V15.0833C6.91699 12.8282 8.74516 11 11.0003 11C13.2555 11 15.0837 12.8282 15.0837 15.0833V15.6667" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M11.0003 11.0002C12.289 11.0002 13.3337 9.95547 13.3337 8.66683C13.3337 7.37816 12.289 6.3335 11.0003 6.3335C9.71166 6.3335 8.66699 7.37816 8.66699 8.66683C8.66699 9.95547 9.71166 11.0002 11.0003 11.0002Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
  </svg>;

export const PlayBuilderPersonHandleLight = () => <svg className="block dark:hidden" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#F0FBFA" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#E2E2E2" />
    <path d="M6.91699 15.6667V15.0833C6.91699 12.8282 8.74516 11 11.0003 11C13.2555 11 15.0837 12.8282 15.0837 15.0833V15.6667" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M11.0003 11.0002C12.289 11.0002 13.3337 9.95547 13.3337 8.66683C13.3337 7.37816 12.289 6.3335 11.0003 6.3335C9.71166 6.3335 8.66699 7.37816 8.66699 8.66683C8.66699 9.95547 9.71166 11.0002 11.0003 11.0002Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
  </svg>;

## Actions and triggers

The building blocks of Plays are called *actions*. Each action is a different
step of a Play, each representing a different task that can be automated in
Unify.

Every Play stars with a special type of action called a *trigger*. A trigger is
the starting point of your Play which defines when the Play should be executed
and what data should be provided to it.

<Frame caption="An empty Play showing the trigger selection panel.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-trigger.png" />
</Frame>

Here are a few of the triggers you can choose from:

* **Record enters an Audience**: Run a Play once on every company or person that
  "enters" an Audience. Audiences can be reused across multiple Plays.
* **Record matches criteria**: Run a Play once on every company or person that
  matches a set of filters. This trigger is similar to the audience trigger, but
  it doesn't require you to create a separate audience. Useful when you don't
  need to create a reusable audience.
* **Manual**: Only run a Play when it is manually triggered. For example, you
  can send individual companies or people to a Play, or you can send an entire
  audience.

Once the trigger is selected, you can start adding additional actions to the
Play. Each action performs a different task. Actions can be chained together or
perform branching logic based on the results of the previous action.

Here are some of the most commonly used actions:

* **AI Agent Qualification**: Perform AI-powered research to answer qualifying
  questions about a company or person.
* **Prospect for new People**: Find new people at a company matching specific
  personas. You can specify a limit on the number of people to find.
* **Sequence Enrollment**: Enroll a person in a sequence. You can route people
  to different mailboxes and sequences based on their persona.
* **Write to Salesforce or HubSpot**: Sync a company or person to Salesforce or
  HubSpot. This will create or update a record in your CRM.

You can find details about the full set of available triggers and actions in the
reference sections below:

<Card title="Triggers" icon="link" iconType="sharp-regular" href="/reference/plays/triggers" horizontal>
  See the full list of triggers available in Unify and how to use them.
</Card>

<Card title="Actions" icon="link" iconType="sharp-regular" href="/reference/plays/actions" horizontal>
  See the full list of actions available in Unify and how to use them.
</Card>

## Inputs and outputs

Each action receives an input and produces an output. Actions in the Play
Builder have small colored symbols that represent what type of input and output
they expect.

Here's what each symbol represents:

|                                    Symbol                                   |   | Value                                 |
| :-------------------------------------------------------------------------: | - | :------------------------------------ |
|     {<PlayBuilderPersonHandleLight />}{<PlayBuilderPersonHandleDark />}     |   | A single person record.               |
| {<PlayBuilderPersonListHandleLight />}{<PlayBuilderPersonListHandleDark />} |   | A list of one or more person records. |
|    {<PlayBuilderCompanyHandleLight />}{<PlayBuilderCompanyHandleDark />}    |   | A single company record.              |

Plays work by connecting each action's output to a matching input on another
action. This is how data flows through the Play and how each action knows what
to do.

## Connecting actions

To connect two actions, click on the output symbol of the first action and drag
the connection to the input symbol of the second action.

<Frame caption="Connect two actions by dragging a connection line between them.">
  <video autoPlay muted loop playsInline className="w-full aspect-video dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/draw-connection-light.mp4" />

  <video autoPlay muted loop playsInline className="hidden w-full aspect-video dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/draw-connection-dark.mp4" />
</Frame>

When adding a new action to the Play Builder, you can drag and drop it on top of
another action to automatically connect them.

<Frame caption="Drag a new action onto another action to quickly connect them.">
  <video autoPlay muted loop playsInline className="w-full aspect-video dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/drag-and-drop-light.mp4" />

  <video autoPlay muted loop playsInline className="hidden w-full aspect-video dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/drag-and-drop-dark.mp4" />
</Frame>

Another shortcut for connecting actions is to move any action near to another
action. Once the input and output symbols are close enough, they will
automatically be connected.

<Frame caption="Move an action near another action to automatically connect them.">
  <video autoPlay muted loop playsInline className="w-full aspect-video dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/drag-to-connect-light.mp4" />

  <video autoPlay muted loop playsInline className="hidden w-full aspect-video dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/drag-to-connect-dark.mp4" />
</Frame>

To delete a connection, click on the connection line and press the **Backspace**
or **Delete** key.

<Frame caption="Delete a connection by clicking on it and pressing the backspace key.">
  <video autoPlay muted loop playsInline className="w-full aspect-video dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/delete-connection-light.mp4" />

  <video autoPlay muted loop playsInline className="hidden w-full aspect-video dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/delete-connection-dark.mp4" />
</Frame>

## Save and publish

When you first create a Play, it is automatically saved as a draft. You can
leave and return later to finish building the Play without losing your progress.

Once you're ready to start running the Play, you can publish it. Published Plays
will run automatically based on the trigger you've selected. To publish a Play,
click the **Publish** button in the top right corner of the Play Builder.

<Frame caption="The confirmation shown when publishing a Play.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-publish-modal.png" />
</Frame>

After publishing a Play, you can still make changes to it. Any changes you make
will be saved as a new draft. You can publish the new draft at any time by
clicking the **Publish** button again. You can also discard the draft and revert
to the last published version.

If you want to temporarily stop a Play from running, you can pause it by
toggling the pause button to the left of the **Publish** button. Pausing a Play
will prevent it from running until you resume it.

## View logs

Once a Play starts running, you can view the logs to see which companies and
people the Play has run on. In the top left corner of the Play Builder, click
on **Logs** to see the full history of Play executions.

<Frame caption="The logs view showing the history of Play executions.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-logs-table.png" />
</Frame>

Within the logs view, you can see the status of each Play execution, including
in-progress, completed, and failed executions. You can click on any row of the
logs table to see more details about that specific execution.

<Frame caption="The details view showing the results of a single Play run.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-logs-details.png" />
</Frame>

The exact path this record took through the Play is highlighted on the right
side of the details view. You can see exactly which actions ran and what the
results were at each step.

## View metrics

In addition to logs, you can view metrics for each Play to see how it's
performing over time. In the top left corner of the Play Builder, click on
**Metrics** to see overview metrics and charts for the Play and each of its
actions.

<Frame caption="Overview metrics for the play.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-metrics-overview.png" />
</Frame>

You can click on any action to see detailed information about how it's
performing. For example, clicking  on an agent qualification action will let
you measure how many records are being qualified over time and why.

<Frame caption="Detailed metrics about an AI Agent Qualification action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-metrics-agent-qualification.png" />
</Frame>

The action-specific metrics pages will also show you the records that have
passed through that action and their results.


# Unify Plays
Source: https://docs.unifygtm.com/reference/plays/overview

Learn what Unify Plays are and how to use them.

## What are Plays?

Plays are automated workflows that let you build and execute repeatable
strategies. Unify manages the logistics of coordinating and scaling all of the
details.

<Frame>
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-log-details.png" />
</Frame>

Building scalable and effective sales, marketing, and GTM strategies requires
successfully coordinating two key components:

* **Data**: Countless data sources go into building scalable automations. This
  data is traditionally scattered across tools and databases, but Unify
  centralizes it in one place.
* **Actions**: Researching companies, identifying decision-makers, executing
  multi-channel outreach, and more. Taking the right action at the right time
  is crucial to success.

Unify is a purpose-built system of action that solves this problem. Plays let
you define a series of actions that will be taken on companies or people at
exactly the right moment.

## Use cases

Plays are a versatile tool that can be used to build out anything from standard,
reliable outbound strategies to complex and innovative growth campaigns. Here
are some of the most popular use cases for Plays:

* **Warm Outbound**: Find prospects at companies matching intent signals and
  reach out to them with personalized messaging at just the right time.
* **Champion tracking**: Keep tabs on champions of your business and reach out
  to them when they take a role at a new company.
* **List building**: Take a list of companies and turn it into high-quality
  leads by enriching the data and finding new contacts in relevant roles.

These are just a few of the most common ways Plays are used. Plays provide the
flexibility to build arbitrarily complex automations tailored to your goals.

<Tip>Check out the tutorial [How to Create a Play](/tutorials/how-to-create-a-play) for a hands-on introduction to Plays!</Tip>


# Play Triggers
Source: https://docs.unifygtm.com/reference/plays/triggers

Triggers represent the events and data sources that a Play runs on.

## Overview

Plays run on invidiual records, such as companies or people. Triggers define
when a Play should run and what data should be provided to it. Below are the
triggers you can choose from when creating a Play.

## Available triggers

### Record enters an Audience

This trigger runs a Play once on every company or person that "enters" an
audience. A record enters an audience when it meets the criteria of the audience
for the first time.

<Frame caption="The configuration panel for an audience trigger.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/audience-trigger.png" />
</Frame>

When you select an audience trigger, you will be prompted to select an audience
from the list of audiences you have created. Audiences are reusable in Unify,
which means you can use the same audience in multiple Plays.

You also have the choice to run the Play on either companies that enter the
audience or people that enter the audience. If you select companies, the output
of this trigger will be a company record. Otherwise, the output will be a person
record.

### Record matches criteria

This trigger runs a Play once on every company or person that matches a set of
filters. This trigger behaves the same as the audience trigger, but it doesn't
require that you already have an audience created. Instead, you can define the
filters directly in the Play.

<Frame caption="The configuration panel for a record match trigger.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/record-match-trigger.png" />
</Frame>

When you select a criteria trigger, you will be prompted to add filters to
select the companies or people that the Play should run on. Just like building
audiences, you can add as many filters as you like and preview the records that
match the filters before saving the trigger.

As with audience triggers, you can choose to run the Play on either companies or
people. This will determine what type of record the trigger outputs.

### Website visitors

This trigger is a shortcut for running a Play on companies that visit your
website. Once selected, you can customize the matching criteria similar to the
record match trigger. This trigger always returns Companies.

<Frame caption="The configuration panel for a website visitors trigger.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/website-visitors-trigger.png" />
</Frame>

### Champions

This trigger is a shortcut for running a Play on champions that Unify has
tracked for your business. Once selected, you can customize the matching
criteria similar to the record match trigger. This trigger always returns
People.

<Frame caption="The configuration panel for a champions trigger.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/champions-trigger.png" />
</Frame>

In order to use this trigger, you must have enabled and configured champion
tracking in your settings. For more information, see [Champion Tracking](/reference/signals/champions).

### Coming soon

There are lots of additional triggers in the works including webhooks, third-party
events, schedules, and more. If you're interested in one that isn't available
yet, [let us know](mailto:support@unifygtm.com)! We'll get you in the beta as
soon as it's ready.

## FAQ

<AccordionGroup>
  <Accordion title="Should I use an Audience trigger or a record match trigger?">
    Audience triggers and record match triggers can both be used to accomplish
    the same goal. The main difference is that audience triggers require you to
    create an audience ahead of time, while record match triggers allow you to
    define the filters directly in the Play.

    Audiences can be reused in multiple Plays, which is useful if you have a set
    of filters that you use frequently. Audiences can also be viewed, edited,
    and exported from the **Audiences** tab.

    Record match triggers are a great option for quickly iterating on a Play or
    if you don't want to create an audience for a one-off Play. You can always
    come back later, convert the filters into an audience, and then swap the
    trigger out for an audience trigger.
  </Accordion>

  <Accordion title="Is an Audience trigger the same as sending an Audience to a manual trigger?">
    Audiences are dynamic lists of companies and people that can change over
    time according to the filters you specify. For example, an audience might
    capture all companies that have visited your website in the last 30 days.

    When you send an audience to a manual trigger, you are sending the current
    list of companies or people that are in the audience at that moment. This
    is useful if you want to run a Play on a snapshot of the audience but not on
    a recurring basis.

    By contrast, an audience trigger will run a Play on every company or person
    that enters the audience in the future. This is useful if you want to run a
    Play on every company or person that meets the audience criteria now and in
    the future.
  </Accordion>
</AccordionGroup>


# Unify Sequences
Source: https://docs.unifygtm.com/reference/sequences/overview

Learn what Unify sequences are and how to use them.

## What are Sequences?

A sequence is a series of automated outreach steps that let you scale your
outbound and measure its effectiveness. Sequences are purpose-built for modern
outbound sales with native AI capabilities and deep integration with the Unify
platform.

Once you've created a sequence, you can enroll people in it to automate your
outreach. Sequence enrollments can be performed automatically from Plays, but
you can also enroll people manually. Enrollments can then be monitored from the
sequence details page to track their progress.

<Frame caption="Manage and monitor sequence enrollments within Unify.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/sequences/sequence-enrollments.png" />
</Frame>

Unify sequences come equipped with comprehensive analytics that let you measure
their effectiveness and compare performance across different sequences with
ease. Unify also provides an unparalleled suite of features for maintaining high
deliverability and ensuring your domain reputation is being handled with care.


# Smart Snippets
Source: https://docs.unifygtm.com/reference/sequences/smart-snippets

Personalize your outreach with AI-powered email copy generation.

## Overview

Smart snippets allow you to personalize messages with AI-generated copy that's
unique to each recipient. You can use smart snippets to enhance your messaging,
improve deliverability, and increase engagement.

Smart snippets are concise, self-contained pieces of text that serve a clear
communicative purpose. Each snippet should be laser-focused on the parts of your
outbound message that change the most to fit each recipient differently.

## Creating a smart snippet

Navigate to the [Snippets](https://app.unifygtm.com/dashboard/snippets) tab in
the sidebar, select **New Snippet** in the top right corner, and choose
**Smart Snippet**. You will see the smart snippet creation screen.

<Frame caption="This is where you enter the prompt for your smart snippet.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/sequences/smart-snippet-create.png" />
</Frame>

To define a smart snippet, you provide a prompt that describes the content you
want to generate. The prompt should include template variables for any data you
want the model to use when writing the snippet. You can click on the quick
prompts to see example prompts for inspiration.

After you've entered your prompt, click **Generate examples** to see what the
smart snippet will generate for a sample of real people from your data. You can
edit the prompt and regenerate examples to iteratively refine your snippet.

<Frame caption="Example snippet generations appear on the left.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/sequences/smart-snippet-previews.png" />
</Frame>

Just like regular snippets, you should also define a fallback value for the case
where some of the template variables in the prompt are missing data. This will
prevent enrollments from being blocked by the missing data.

When you're satisfied with your prompt, click **Create** to save it. You will
now be able to use the snippet in your sequences.

## Recommendations

Here are a few practices we recommend to get the most out of smart snippets:

1. Always include at least one template variable for the model to use to
   personalize the snippet. For example, include some details about the sender,
   the recipient, or their company. This helps the model write more precise and
   personalized copy.
2. Include 2-3 example outputs to guide the model. Examples help the model
   understand the tone and structure you're trying to achieve. The model will
   often pick up on vocabulary and stylistic choices from your examples.
3. Start small. Pick a specific part of the email—such as the salutation or
   hook—and focus on personalizing that part. Smart snippets are most effective
   when they're used to personalize small sections of your email. Remember that
   you can use as many snippets in an email as you want!


# Template Variables
Source: https://docs.unifygtm.com/reference/sequences/template-variables

Use template variables to personalize your emails.

## Overview

Template variables are key to personalizing messages sent through Unify. You can
use template variables to insert dynamic values into your emails, such as a
person's name, company, or job title.

## Inserting variables

You can insert template variables into emails you write when creating sequences in Unify. To open the template variable dropdown, click on the template variable button in the sequence builder.

<Frame>![template-var-1](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-1.png)</Frame>

You can also press **`{`** on your keyboard to open the template variable dropdown. Once open, you can select a variable and insert it into your email.

<Frame>![template-var-2](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-2.png)</Frame>

<Frame>![template-var-3](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-3.png)</Frame>

When a person is enrolled in this sequence, this value will be filled in dynamically.

## Handling missing data

### Enrollment blocking

Sometimes, Unify won’t have data to populate variables used in a sequence email. In these cases, Unify will never send an email with a placeholder or missing value. Instead, Unify will *block* the sequence enrollment.

<Frame>![template-var-4](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-4.png)</Frame>

Blocked enrollments can be seen on the sequence details page. You can click on a blocked enrollment to edit the message and manually fill in any missing values.

<Frame>![template-var-5](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-5.png)</Frame>

The template variables with missing values will appear highlighted in orange. Once you’ve replaced the missing values, click **Save** and the blocked status will disappear.

<Frame>![template-var-6](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/template-var-6.png)</Frame>

The step will then be rescheduled and sent automatically as part of the sequence.

### Snippets

To avoid having to manually unblock enrollments that are missing a value, it's
highly recommended that you take advantage of *snippets*.

Snippets are reusable blocks of copy that can be inserted into messages the same
as template variables. However, snippets also allow you to define fallback text
which is used if any template variables are missing values.

<Frame caption="A basic snippet with a single template variable.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/sequences/snippets.png" />
</Frame>

You can access snippets by navigating to the [Snippets](https://app.unifygtm.com/dashboard/snippets)
tab in the sidebar. When defining a snippet, you can use template variables or
even other snippets in the copy. Underneath the snippet text area, there is a
second text area where you can define a fallback.

<Frame caption="A snippet with fallback text in case the variable value is missing.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/sequences/snippets-fallback.png" />
</Frame>

The fallback will be used in the event that any of the variables used in the
copy are missing. If you use snippets within snippets (which is called
*snippet-ception*), the fallback for the nested snippet will be used in the
top-level snippet.


# Champion Tracking
Source: https://docs.unifygtm.com/reference/signals/champions

Automatically track your champions and take action on them.

## What is a Champion?

Your companies' champions are customers who have used and advocated for the adoption of your product or services.

## What is Champion Tracking?

With Champion Tracking, you can define filters to select your company's champions and automatically follow when they change jobs.
A champion who has changed jobs is indicative of an opportunity with an outsized probability of success.

When enabled, the job statuses of each of your champions will be checked once per month
and their new contact information will be found when they change jobs. This information is extremely
valuable for breaking into new accounts and performing retargeting campaigns.

Unify will automatically create an exclusion for the old contact records of your champions who have changed jobs.
This means that the old records won't appear in audiences nor be sequenced.

You will be charged one credit per champion tracked per month regardless of whether a job change was detected.
You can view the `Tracking` tab in the Champion Tracking Settings page to see who is being tracked.

### Set Up Champion Tracking

Define who your champions are.

#### Enabling

1. In the Unify app, go to [Settings -> Track -> Champions](https://app.unifygtm.com/dashboard/settings/champion-tracking).

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/enable-champ-tracking-1.png)</Frame>

2. Click the toggle at the top of the page to open the Champion Tracking Settings modal.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/enable-champ-tracking-2.png)</Frame>

3. Define filters to identify your champions to track. For example, users commonly filter down to companies with Closed Won opportunities.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/enable-champ-tracking-3.png)</Frame>

4. Click `Enable Champion Tracking`.  Unify will track your champions once per month starting from the moment you enable Champion Tracking.

#### Disabling

1. In the Unify app, go to [Settings -> Track -> Champions](https://app.unifygtm.com/dashboard/settings/champion-tracking).

2. Click the toggle and click `Disable` to disable Champion Tracking. You will still be able to view job changes Unify has already detected throughout the app, but people will stop being tracked monthly.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/disable-champ-tracking-2.png)</Frame>

### Take Action on Champion Job Changes

Take action when Unify detects a champion job change.

#### Champion Tracking Audience Filters

In the audience builder, you can add filters for champion job changes.
Connect these audiences to Plays, sequences, and Slack alerts to automate workflows triggered by these changes.

Here is an example of audience filters that includes all champions for whom Unify has ever detected a job change:

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/audience-champ-tracking.png)</Frame>

### Frequently Asked Questions

#### How can I be notified in Slack whenever a champion changes jobs?

Create an audience containing champions who have changed jobs and enable Slack alerts on the audience.


# New Hire Tracking
Source: https://docs.unifygtm.com/reference/signals/new-hires

Automatically track new hires at companies and take action.

## What is New Hire Tracking?

A new hire is someone who has recently started a job at a new company within the past 90 days.

New Hire Tracking helps you identify and monitor individuals who have recently joined companies that align with your target profile. These new hires often play pivotal roles in shaping change within their organizations, making them valuable opportunities for outreach.

These are not people in your current Unify instance, they are net new prospects, meaning that they have not already been sourced through CRM integration, website intent, or uploaded manually.

By using New Hire Tracking, you can apply specific filters to define your target companies and personas, automatically keeping track of new hires at these organizations.

### Why is this a valuable signal?

New hires signify organizational shifts and often catalyze new purchasing decisions, presenting valuable opportunities for strategic outreach.

### How does New Hire Tracking work?

Once activated, Unify scans for new hires that match your selected personas at your target companies, delivering their contact details to you daily. Your target personas and companies can be customized to include or exclude specific job titles, industries, company size, and location. This enables you to build a dynamic, up-to-date list of key contacts for your team to engage through Audiences.

New hires will not track existing contacts synced over from your CRM today. If enabled, Champion Tracking will be tracking when contacts from existing customers change jobs. For more information, see the [Champion Tracking section](/reference/signals/champions).

Each tracked new hire costs two credits, regardless of whether the lead has been routed or engaged.

To view tracked new hires, navigate to the “New Hires” tab in the New Hire Tracking Settings.

### Setting Up New Hire Tracking

Define the personas and companies you want to track, then follow the steps below to get started.

#### How to Enable

1. In the Unify app, go to [Settings -> Track -> New Hires](https://app.unifygtm.com/dashboard/settings/new-hire-tracking).

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-1-blank.png)</Frame>

2. Click the toggle at the top of the page to open the New Hire Tracking Settings.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-2-settings.png)</Frame>

3. Apply filters to fine-tune your new hire tracking. For best results, use all available filters to narrow down the most relevant target companies and personas.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-3-enable.png)</Frame>

4. Click `Enable New Hire Tracking`. Unify will begin tracking new hires daily from this point forward.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-4-enabled.png)</Frame>

#### How to Disable

1. In the Unify app, go to [Settings -> Track -> New Hires](https://app.unifygtm.com/dashboard/settings/new-hire-tracking).

2. Click the toggle and select `Disable` to stop tracking new hires. Previously detected job changes will remain visible, but new hires will no longer be tracked.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-5-disable.png)</Frame>

### Acting on New Hires

When Unify identifies a new hire, you can immediately add these contacts to audiences and run Plays on them. Similar to setting up Plays to capture website intent or retarget CRM opportunities as they’re added, you can create Plays that consistently capture and engage with new hires added by Unify!

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-6-results.png)</Frame>

#### New Hire Tracking in Audience Filters

In the Audience Builder, you can add filters to focus on new hires.

These audiences can be linked to Plays, sequences, or Slack alerts, allowing you to automate workflows based on new hire data.

Here’s an example of filters used to track all new hires:

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/new-hire-tracking-7-audiences.png)</Frame>

### Frequently Asked Questions

#### How can I get Slack notifications for new hires?

Create an audience for new hires, then enable Slack alerts for that audience to receive real-time notifications.

#### How do I stop tracking new hires?

Click the toggle to disable new hire tracking. Previously detected job changes will remain visible, but new hires will no longer be tracked.

#### Can I track new hires in a specific industry?

Yes, you can filter new hires by industry.

#### Can I track new hires by country?

At the moment, you can track new hires based on the location of their company. We’re actively working on expanding this feature to allow tracking new hires based on their individual country of residence.

#### How are you selecting the new contacts added to Unify?

We identify ideal new hire prospects who have changed roles within the last 90 days, using a combination of job title, company size, and industry. These prospects are then selected through a randomized process.


# Unify Signals
Source: https://docs.unifygtm.com/reference/signals/overview

Learn what data signals are and how to use them.

## What are signals?

Signals are data sources that provide insights into companies and people that
are demonstrating buying intent. Unify brings a multitude of real-time signals
together to help you identify and engage with warm prospects at exactly the
right time.

<Frame caption="An audience showing high-intent website visitors.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/signals/audience-page.png" />
</Frame>

Unify doesn't just bring the data. Unify is a system of action that provides the
framework and the tools to act on that data in the most effective way possible.

## What signals are available?

Unify provides a wide range of signals, from real-time website visits to
continuous champion tracking. Here are some of the most popular signals
available in Unify:

<CardGroup cols={2}>
  <Card title="Website Visitors" href="/reference/signals/website-visitors" horizontal>
    Identify the companies and people visiting your website in real-time.
  </Card>

  <Card title="Champions" href="/reference/signals/champions" horizontal>
    Keep track of champions for your business moving to new companies.
  </Card>

  <Card title="New Hires" href="/reference/signals/new-hires" horizontal>
    Find out when key decision-makers join a company you're targeting.
  </Card>
</CardGroup>


# Website Visitor Intent
Source: https://docs.unifygtm.com/reference/signals/website-visitors

Start revealing the companies and people visiting your website.

## Overview

By integrating with your website, Unify can reveal the companies and people
visiting your website in real-time. Beyond idenifying these visitors, Unify
enables you to take action based on which pages they're clicking on, where
they're visiting from, and how many sessions they've had.

## How to get started

### Step 1: Integrate Unify with your website

The first step is to integrate Unify with your website using either the official
Unify plugin for your website or a third-party analytics provider like Segment.

If you're not already using Segment, we recommend starting with the official
Unify plugin. You can find the installation instructions [here](/developers/overview).
For customers already using Segment, you can find the instructions for setting
up the official Segment integration [here](/reference/integrations/segment).

### Step 2: Turn on website intent data

Once that's done, the only thing left to do is to enable the feature in Unify
and start revealing the companies and people visiting your website. Navigate to
[Settings -> Unify Intent](https://app.unifygtm.com/dashboard/settings/integrations/unify-intent)
to turn on this feature.

If you already have a subscription to 6sense or Clearbit Reveal, you can also
bring your own API key. See the [6sense](https://app.unifygtm.com/dashboard/settings/integrations/6sense)
and [Clearbit](https://app.unifygtm.com/dashboard/settings/integrations/clearbit)
integration settings pages to get started.


# How to Create a Play
Source: https://docs.unifygtm.com/tutorials/how-to-create-a-play

Learn the fundamentals and build a Unify Play from start to finish.

export const PlayBuilderCompanyHandleDark = () => <svg className="hidden dark:block" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#403C2A" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#404040" />
    <g clip-path="url(#clip0_2769_1689)">
      <path d="M5.75 16.25H16.25" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 8.66663H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 11H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 13.3334H9.83333" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 8.66663H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 11H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 13.3334H12.7503" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M6.91699 16.25V6.91667C6.91699 6.60725 7.03991 6.3105 7.2587 6.09171C7.47749 5.87292 7.77424 5.75 8.08366 5.75H13.917C14.2264 5.75 14.5232 5.87292 14.7419 6.09171C14.9607 6.3105 15.0837 6.60725 15.0837 6.91667V16.25" stroke="#FFEE9A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1689">
        <rect width="14" height="14" fill="white" transform="translate(4 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderCompanyHandleLight = () => <svg className="block dark:hidden" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#FFFAE6" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#E2E2E2" />
    <g clip-path="url(#clip0_2769_1689)">
      <path d="M5.75 16.25H16.25" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 8.66663H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 11H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.25 13.3334H9.83333" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 8.66663H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 11H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M12.167 13.3334H12.7503" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M6.91699 16.25V6.91667C6.91699 6.60725 7.03991 6.3105 7.2587 6.09171C7.47749 5.87292 7.77424 5.75 8.08366 5.75H13.917C14.2264 5.75 14.5232 5.87292 14.7419 6.09171C14.9607 6.3105 15.0837 6.60725 15.0837 6.91667V16.25" stroke="#887115" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1689">
        <rect width="14" height="14" fill="white" transform="translate(4 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonListHandleDark = () => <svg className="hidden dark:block" width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" fill="#323F3E" />
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" stroke="#404040" />
    <g clip-path="url(#clip0_2769_1947)">
      <path d="M12.083 12.1667C12.083 10.5558 13.3889 9.25 14.9997 9.25C16.6105 9.25 17.9163 10.5558 17.9163 12.1667V12.4583" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M15 9.25C15.9665 9.25 16.75 8.4665 16.75 7.5C16.75 6.5335 15.9665 5.75 15 5.75C14.0335 5.75 13.25 6.5335 13.25 7.5C13.25 8.4665 14.0335 9.25 15 9.25Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M5.08301 15.6667V15.0833C5.08301 12.8282 6.91118 11 9.16634 11C11.4215 11 13.2497 12.8282 13.2497 15.0833V15.6667" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.16634 11C10.455 11 11.4997 9.95529 11.4997 8.66665C11.4997 7.37798 10.455 6.33331 9.16634 6.33331C7.87768 6.33331 6.83301 7.37798 6.83301 8.66665C6.83301 9.95529 7.87768 11 9.16634 11Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1947">
        <rect width="14" height="14" fill="white" transform="translate(4.5 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonListHandleLight = () => <svg className="block dark:hidden" width="23" height="22" viewBox="0 0 23 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" fill="#F0FBFA" />
    <path d="M1 11C1 5.20101 5.70101 0.5 11.5 0.5C17.299 0.5 22 5.20101 22 11C22 16.799 17.299 21.5 11.5 21.5C5.70101 21.5 1 16.799 1 11Z" stroke="#E2E2E2" />
    <g clip-path="url(#clip0_2769_1947)">
      <path d="M12.083 12.1667C12.083 10.5558 13.3889 9.25 14.9997 9.25C16.6105 9.25 17.9163 10.5558 17.9163 12.1667V12.4583" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M15 9.25C15.9665 9.25 16.75 8.4665 16.75 7.5C16.75 6.5335 15.9665 5.75 15 5.75C14.0335 5.75 13.25 6.5335 13.25 7.5C13.25 8.4665 14.0335 9.25 15 9.25Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M5.08301 15.6667V15.0833C5.08301 12.8282 6.91118 11 9.16634 11C11.4215 11 13.2497 12.8282 13.2497 15.0833V15.6667" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M9.16634 11C10.455 11 11.4997 9.95529 11.4997 8.66665C11.4997 7.37798 10.455 6.33331 9.16634 6.33331C7.87768 6.33331 6.83301 7.37798 6.83301 8.66665C6.83301 9.95529 7.87768 11 9.16634 11Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </g>
    <defs>
      <clipPath id="clip0_2769_1947">
        <rect width="14" height="14" fill="white" transform="translate(4.5 4)" />
      </clipPath>
    </defs>
  </svg>;

export const PlayBuilderPersonHandleDark = () => <svg className="hidden dark:block" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#323F3E" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#404040" />
    <path d="M6.91699 15.6667V15.0833C6.91699 12.8282 8.74516 11 11.0003 11C13.2555 11 15.0837 12.8282 15.0837 15.0833V15.6667" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M11.0003 11.0002C12.289 11.0002 13.3337 9.95547 13.3337 8.66683C13.3337 7.37816 12.289 6.3335 11.0003 6.3335C9.71166 6.3335 8.66699 7.37816 8.66699 8.66683C8.66699 9.95547 9.71166 11.0002 11.0003 11.0002Z" stroke="#9DE6E2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
  </svg>;

export const PlayBuilderPersonHandleLight = () => <svg className="block dark:hidden" width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" fill="#F0FBFA" />
    <path d="M0.5 11C0.5 5.20101 5.20101 0.5 11 0.5C16.799 0.5 21.5 5.20101 21.5 11C21.5 16.799 16.799 21.5 11 21.5C5.20101 21.5 0.5 16.799 0.5 11Z" stroke="#E2E2E2" />
    <path d="M6.91699 15.6667V15.0833C6.91699 12.8282 8.74516 11 11.0003 11C13.2555 11 15.0837 12.8282 15.0837 15.0833V15.6667" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    <path d="M11.0003 11.0002C12.289 11.0002 13.3337 9.95547 13.3337 8.66683C13.3337 7.37816 12.289 6.3335 11.0003 6.3335C9.71166 6.3335 8.66699 7.37816 8.66699 8.66683C8.66699 9.95547 9.71166 11.0002 11.0003 11.0002Z" stroke="#0F837B" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
  </svg>;

## Overview

Plays are automated workflows that let you build and execute repeatable
strategies. In this guide, you'll learn the basics of how Plays work and create
one from scratch.

### What are Plays?

Building scalable and effective sales, marketing, and GTM strategies requires
successfully coordinating two key components:

* **Data**: Countless data sources go into building scalable automations. This
  data is traditionally scattered across tools and databases, but Unify
  centralizes it in one place.
* **Actions**: Researching companies, identifying decision-makers, executing
  multi-channel outreach, and more. Taking the right action at the right time
  is crucial to success.

Unify is a purpose-built system of action that solves this problem. Plays let
you define a series of actions that will be taken on companies or people at
exactly the right moment.

<Frame caption="An example of a complex Play that performs account research and prospecting.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/reference/plays/play-log-details.png" />
</Frame>

### Tutorial preview

One of the most popular use cases for Plays is to find prospects at companies
that are visiting your website and enroll them in outbound sequences. This is a
great example of a *warm outbound* campaign that targets key decision-makers
at companies showing buying intent.

In this guide, you'll create a Unify Play that runs on companies visiting your
website and performs the following actions:

1. **Prospect**: Find new people at the company that match your buyer personas.
2. **Sequence**: Enroll the new prospects in a sequence to send them emails.
3. **Sync to CRM**: Sync newly found people to Salesforce or HubSpot.

This standard Play is a great starting point to understand how Plays work and
kickstart your outbound strategy.

## Walkthrough

### Step 1: Create a new Play

Look for the [Plays](https://app.unifygtm.com/dashboard/plays) tab in the
sidebar and click on it. This is where you will create and manage all your
team's Plays. To create a new Play, click the **New Play** button.

<Frame caption="This is what the Plays tab will look like before creating any Plays.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/plays-tab-empty.png" />
</Frame>

<Frame caption="When you create a Play, you will be prompted to give it a name.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/plays-tab-new.png" />
</Frame>

<Frame caption="Once the Play is created, you will see the Play Builder.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-new.png" />
</Frame>

### Step 2: Choose a trigger

Once you've created a new Play, you will see the Play Builder. The first step
when building any Play is to choose a *trigger*. The trigger lets you specify
exactly when the Play should run and which companies or people it should run on.

In the center of the builder, you will see an action that says **Select a trigger**.
Click on it to show the trigger configuration panel. For this Play, choose the
**Website visitors** template.

<Frame caption="Select a trigger type or a template from the configuration panel.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-trigger-selection.png" />
</Frame>

<Frame caption="This is where you define the criteria for companies that this Play will run on.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-trigger-configuration.png" />
</Frame>

Here you have the option to further filter and refine the companies that this
Play will run on. For example, if you only want to run this Play on companies
with more than 100 employees, you can add a filter on **Employee Count**.

You can learn more about the available filters and how to use them in the tutorial
[How to Create an Audience](/tutorials/how-to-create-an-audience). You can always
return later to add or modify filters. Click **Done** to finish configuring the
trigger.

### Step 3: Add actions

Now that the trigger has been selected, it's time to start adding actions. There
are many actions to choose from, and you can configure them in countless ways.
For this Play, we're going to start simple and add three actions.

#### Prospect for people

Start by adding a prospecting action. This action will take the company coming
from the trigger and search for relevant prospects. Drag the **Prospect for People**
action from the action list and drop it into the builder.

<Tip>
  If you drag and drop a new action on top of an existing action, it will
  automatically be connected to it.
</Tip>

<Frame caption="Drag and drop actions from the action list into the Play Builder.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-prospect-action.png" />
</Frame>

Once added, you will see the prospecting options shown in the configuration
panel on the left. Here are the most important selections to make:

* **Max. prospects per company**: This is how many prospects you want to find at
  each company. We recommend starting with 2-4 prospects per company.
* **Personas**: These are the personas to search for. You can select from
  existing personas or create new ones. Unify will find people matching these
  personas in order, so list them in order of preference.

If you haven't defined any personas yet, you can learn how to do so in the
tutorial [How to Create Personas](/tutorials/how-to-use-personas).

#### Loop

Next, add a **Loop** action. The prospecting action will return a list of people
found at the company, and the loop will run subsequent actions once for each
person in the list.

<Frame caption="Add a loop and connect it to the prospecting action.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-loop-action.png" />
</Frame>

Each action receives an input and produces an output. Actions in the Play
Builder have small colored symbols that represent what type of input and output
they expect.

Here's what each symbol represents:

|                                    Symbol                                   |   | Value                                 |
| :-------------------------------------------------------------------------: | - | :------------------------------------ |
|     {<PlayBuilderPersonHandleLight />}{<PlayBuilderPersonHandleDark />}     |   | A single person record.               |
| {<PlayBuilderPersonListHandleLight />}{<PlayBuilderPersonListHandleDark />} |   | A list of one or more person records. |
|    {<PlayBuilderCompanyHandleLight />}{<PlayBuilderCompanyHandleDark />}    |   | A single company record.              |

Plays work by connecting each action's output to a matching input on another
action. This is how data flows through the Play and how each action knows what
to do.

Most actions run on one record at a time. The **Loop** action is how you take a
list of records and run actions on them one by one.

#### Sequence enrollment

Now place a **Sequence** action inside the loop. This will enroll each person
into a Unify Sequence.

<Tip>
  Once you've dropped the action into the loop, you can drag it near the loop
  action to automatically connect them. You can also manually draw connections
  between the colored icons that represent action inputs and outputs.
</Tip>

Once added, you can configure the sequence enrollment action by routing personas
to the desired sequences and mailboxes. To speed up the process, click the
**Add prospect personas** button to automatically reuse all of the personas you
selected in the prospecting action.

<Frame caption="Configure sequence enrollment by routing specific personas to mailboxes and sequences.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-sequence-enrollment-configuration.png" />
</Frame>

<Frame caption="Add a sequence enrollment action and connect it to the loop.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-sequence-enrollment.png" />
</Frame>

#### Sync to CRM

Finally, add an action to sync each new person to your CRM. Depending on which
CRM you've connected in Unify, you will see either a **Sync to Salesforce** or
**Sync to HubSpot** action.

<Frame caption="You can specify default field values or limit the number of people synced per company.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-hubspot.png" />
</Frame>

### Step 4: Publish and view logs

Once your Play is ready, click the **Publish** button in the top right corner of
the Play Builder. This will activate the Play and start running it on companies
that match the trigger criteria you defined earlier.

<Frame caption="By publishing the Play, it will immediately start running on companies.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-builder-publish.png" />
</Frame>

As the Play starts to run on companies, you will see them appear in the logs.
Click on the **Logs** tab at the top of the Play Builder to view the logs.

<Frame caption="Logs show a detailed view of every company or person a Play has run on.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-logs.png" />
</Frame>

Click on any company to view the details of its run, including the exact actions
that were taken and the results of each action. Click on any action to view the
precise inputs, outputs, and result of that action.

<Frame caption="Click on any company to view exactly what the Play did.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-logs-details.png" />
</Frame>

<Frame caption="Click on any action within the log details to see its results.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-logs-details-prospect-action.png" />
</Frame>

<Frame caption="You can use the action logs to inspect exactly how a Play is working.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-a-play/play-logs-details-sequence-action.png" />
</Frame>

## Conclusion

Congratulations on creating a Play! Combining website intent, prospecting, and
sequences into a single automated flow is a popular Play and an excellent
starting point.

For a comprehensive overview of Unify Plays, check out the reference guide:

<Card title="Plays Reference" icon="arrow-progress" href="/reference/plays/overview">
  Detailed reference guide that covers the fundamentals of plays, the actions
  and triggers available to use, and more.
</Card>


# How to Create an Audience
Source: https://docs.unifygtm.com/tutorials/how-to-create-an-audience

Create dynamic lists of companies and people to view and act on.

## What are Audiences?

In Unify, audiences are dynamic lists of companies and people that are generated
based on powerful filter criteria that you specify. Once defined, you can view and take
action on these companies and people in Unify.

<Frame caption="An audience showing high intent website visitors.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-an-audience/audience-page.png" />
</Frame>

Here are just a few examples of the
types of audiences you can define:

* Companies that have clicked on your pricing page in the past week
* People who have opened an email you sent them in the past month at least twice
  without replying yet
* Champions for your business that have joined a new company matching your ICP

Typically, either sales leaders, revenue operations, or sales operations will
create the audiences to be used by sellers for building plays and taking action.

## Build a new audience

Access audiences by clicking on [Audiences](https://app.unifygtm.com/dashboard/audiences)
in the sidebar. You can view and edit existing audiences or create a new one by
selecting **New audience**.

Audience support a wide variety of filters. One of the most commonly used
options is to filter by fields in your CRM. To get started, click **Add condition**
and search for the field you want to filter by.

<Frame caption="Add CRM filters by searching for fields in your CRM and entering the desired condition.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-an-audience/audience-select-fields.png" />
</Frame>

Another popular filter is website activity. You can filter by page views,
sessions, and visitors to your website. This is a great way to identify which
companies are showing interest in your business.

<Frame caption="Add website activity filters and define the required criteria.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-an-audience/audience-page-views.png" />
</Frame>

You can combine multiple filter criteria with **And** and **Or** groups to
build more complex audiences. For example, you might want to capture companies
that have visited your pricing page or that have filled out an inbound form.

<Frame caption="Combine filters to capture exactly the right companies and people.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-an-audience/audience-and-filters.png" />
</Frame>

The best way to to learn about the available filter options is to explore! As
you add and remove filters, the audience preview will update in real-time to
show the companies and people that match your criteria.

## Exclusions

Exclusions are a mechanism to prevent Unify from taking action on specific
companies or people. Common use cases for exclusions include preventing current
customers or competitors from appearing in your audiences or Plays.

Once you've defined exclusions, they will be automatically applied to all
audiences by default. Sometimes, you may want to disable an exclusion for a
specific audience. This can be done from the audience configuration page under
the **Advanced** section.

<Frame caption="Enable or disable exclusions on a per-audience basis.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-create-an-audience/audience-exclusions.png" />
</Frame>

For more information on creating exclusions, see [How to Create an Exclusion](/tutorials/how-to-create-an-exclusion).

## What's next?

Audiences can be used for a variety of purposes, including building plays and
subscribing to Slack alerts. For more information, check out these tutorials:

<Card icon="link" title="How to Create a Play" href="/tutorials/how-to-create-a-play">
  Create a Play that runs on companies or people in an audience.
</Card>

<Card icon="link" title="How to Receive Slack Alerts" href="/tutorials/how-to-receive-slack-alerts">
  Receive Slack alerts when a new company or person enters an audience.
</Card>


# How to Create an Exclusion
Source: https://docs.unifygtm.com/tutorials/how-to-create-an-exclusion

Prevent Unify from actioning on specific companies or people.

1. Excluding current customers
2. Exclude people who have unsubscribed from outbound campaigns

## How to create an exclusion

Let’s walk through how to exclude all Active Salesforce accounts.

### 1. Go to Exclusions in Settings

Navigate to [Settings > Exclusions](https://app.unifygtm.com/dashboard/settings/organization/exclusions) and click `New exclusion`

<Frame>![Exclusions 1.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/49.png)</Frame>

## 2. Select Companies or People

Select `Companies` in this case

<Frame>![Untitled](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/50.png)</Frame>

## 3. Define criterion to filter

In this example, we’re creating an exclusion called `Current Customers` that excludes companies with Salesforce `Account Status` equal to `Active`

<Frame>![Exclusions 2.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/51.png)</Frame>

## 4. Hit Save

Here you’ll see an overview of your new exclusion. These lists will automatically be excluded from targeting.

<Frame>![Exclusions 2.png](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/52.png)</Frame>

## Upload exclusions from a CSV

Let's walk through how to set up an exclusion using a CSV of companies or people.

### 1. Create a column in your CSV called "Status"

Populate the "Status" column with the same value across all the rows in your CSV. This value usually indicates the type of contact you are excluding. Examples can include "Active Customer", "Competitor", etc.

### 2. Upload these contacts in the companies or people tab

If you're uploading companies, you'll need to include both the company name and domain. If you're uploading people, you'll need to include one of the following set of fields:

* Email
* First Name, Last Name, and Company Domain
* LinkedIn URL

### 3. Map the CSV fields to the Unify fields

You'll select the fields you want to map into Unify. Make sure to select "Status" field from Unify when mapping that same column from your CSV. The Unify "Status" field should then populate with the values you populated in the CSV under the column. Once these are mapped, you can finish the upload.

### 4. Create a new exclusion and add the "Status" field in the conditions

You'll then switch over into the "Exclusions" tab in your settings and create a new exclusion. Under either the people or companies filters, you will select the Unify status column and add the value from your CSV (i.e. "Active Customer"). Once you save this exclusion, this list should be excluded from future audiences and Plays moving forward!

***

Note that if you would like to add more companies or contacts to this exclusion list in the feature, you'll need to follow the same process as above and make sure the "Status" field is correctly mapped. This should automatically pull in the new exclusion after uploaded if the "Status" value is the same value in the filter.


# How to Receive Slack Alerts
Source: https://docs.unifygtm.com/tutorials/how-to-receive-slack-alerts

Receive real-time Slack alerts when companies or people enter an audience.

## Audience Entry Alerts

When a new entry is added to the audience, a notification will be sent to the selected Slack channel.

### Enabling

1. Go to the audience page and click on `Enable alert`.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/71.png)</Frame>

2. Choose a channel from the dropdown menu.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/72.png)</Frame>

<p />

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/73.png)</Frame>

3. After selecting a channel, click on `Enable`.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/74.png)</Frame>

### Disabling

1. Go to the audience page and click on `Enabled`.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/75.png)</Frame>

2. Click on `Disconnect`.

<Frame>![](https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/76.png)</Frame>


# How to Define Personas
Source: https://docs.unifygtm.com/tutorials/how-to-use-personas

Create personas to prospect and reach out to your ideal buyers.

## Overview

Personas are collections of job titles that you want to target. Each persona
consists of a list of titles that you want to include and exclude. Personas can
be used throughout Unify, such as when prospecting or routing people to
different sequences.

## Create a persona

Navigate to the [Personas](https://app.unifygtm.com/dashboard/personas) tab in
the sidebar and select **New persona**. Here you can add job titles that you
wish to include or exclude when matching people against this persona.

<Frame caption="Add titles to be included or excluded.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-use-personas/create-persona.png" />
</Frame>

You can also take advantage of AI-powered persona generation to automatically
find and add similar job titles to your persona. This lets you quickly define
comprehensive personas that match different variations of a job title.

<Frame caption="You can add suggested titles individually or all at once.">
  <img src="https://mintlify.s3.us-west-1.amazonaws.com/unify-19/images/tutorials/how-to-use-personas/persona-suggestions.png" />
</Frame>

Once you've added all the titles you want to include or exclude, click **Create
persona** to save your changes. This persona will now be available for use
throughout Unify.

## Title matching behavior

When evaluating whether a person's job title matches a persona, Unify adheres to
the following rules and heuristics:

* **Ignore capitalization**: For example, "RevOps Lead" and "Revops lead" are
  considered equivalent.
* **Ignore punctuation**: For example, "Enterprise Sales, Lead" and "Enterprise
  Sales Lead" are considered equivalent.
* **Ignore word order**: For example, "Lead Sales Engineer" and "Sales Engineer,
  Lead" are considered equivalent.
* **Ignore extraneous words**: For example, "CEO" and "CEO and Founder" are
  considered equivalent.

That means that you don't need to exhaustively list every possible variation of
a job title in your persona. Instead, you can focus on the most common keywords
and let Unify handle the details.


# Unify Tutorials
Source: https://docs.unifygtm.com/tutorials/welcome

Quickly learn the basics and become a Unify expert.

<CardGroup cols={2}>
  <Card title="How to Create a Play" icon="arrow-progress" href="/tutorials/how-to-create-a-play">
    Learn the fundamentals and build a Unify Play from start to finish.
  </Card>

  <Card title="How to Create an Audience" icon="people-simple" href="/tutorials/how-to-create-an-audience">
    Create dynamic lists of companies and people to view and act on.
  </Card>

  <Card title="How to Define Personas" icon="briefcase" href="/tutorials/how-to-use-personas">
    Create personas to prospect and reach out to your ideal buyers.
  </Card>

  <Card title="How to Create an Exclusion" icon="ban" href="/tutorials/how-to-create-an-exclusion">
    Prevent Unify from actioning on specific companies or people.
  </Card>

  <Card title="How to Receive Slack Alerts" icon="slack" href="/tutorials/how-to-receive-slack-alerts">
    Receive real-time Slack alerts when companies or people enter an audience.
  </Card>
</CardGroup>


