# Get Device Change Events
Source: https://docs.sdx.altostrat.io/api-reference/arp/devices/get-device-change-events

sdx-api/spa/arp.json get /devices/{macAddress}/change-events
Retrieves the change event history for a specific device.



# Get Device Details
Source: https://docs.sdx.altostrat.io/api-reference/arp/devices/get-device-details

sdx-api/spa/arp.json get /devices/{macAddress}
Retrieves details for a specific device by its MAC address.



# Get Device IP History
Source: https://docs.sdx.altostrat.io/api-reference/arp/devices/get-device-ip-history

sdx-api/spa/arp.json get /devices/{macAddress}/ip-history
Retrieves the IP address history for a specific device.



# List Devices
Source: https://docs.sdx.altostrat.io/api-reference/arp/devices/list-devices

sdx-api/spa/arp.json get /devices
Retrieves a list of network devices belonging to the authenticated customer, with filtering and pagination.



# Update Device Alias
Source: https://docs.sdx.altostrat.io/api-reference/arp/devices/update-device-alias

sdx-api/spa/arp.json put /devices/{macAddress}
Updates the alias for a specific device.



# Asynchronous job execution
Source: https://docs.sdx.altostrat.io/api-reference/developers/asynchronous-api/asynchronous-job-execution

sdx-api/openapi.json post /api/asynchronous/{router_id}
Queues a job to run scripts or config changes on the router without waiting for real-time response.



# Retrieve a list of jobs for a router
Source: https://docs.sdx.altostrat.io/api-reference/developers/asynchronous-api/retrieve-a-list-of-jobs-for-a-router

sdx-api/openapi.json get /api/routers/{router_id}/jobs
Fetch asynchronous job history or status for a specified router.



# Retrieve router faults
Source: https://docs.sdx.altostrat.io/api-reference/developers/health/retrieve-router-faults

sdx-api/openapi.json get /api/routers/{router_id}/faults
Gets the last 100 faults for the specified router, newest first.



# Retrieve router metrics
Source: https://docs.sdx.altostrat.io/api-reference/developers/health/retrieve-router-metrics

sdx-api/openapi.json get /api/routers/{router_id}/metrics
Provides uptime/downtime metrics for the past 24 hours based on heartbeats.



# Create a transient port forward
Source: https://docs.sdx.altostrat.io/api-reference/developers/port-forwards/create-a-transient-port-forward

sdx-api/openapi.json post /api/routers/{router_id}/transient-forwarding
Establish a temporary TCP forward over the management tunnel for behind-NAT access.



# Delete a transient port forward
Source: https://docs.sdx.altostrat.io/api-reference/developers/port-forwards/delete-a-transient-port-forward

sdx-api/openapi.json delete /api/routers/{router_id}/transient-forwarding/{id}
Revokes a port forward before it naturally expires.



# Retrieve a specific port forward
Source: https://docs.sdx.altostrat.io/api-reference/developers/port-forwards/retrieve-a-specific-port-forward

sdx-api/openapi.json get /api/routers/{router_id}/transient-forwarding/{id}
Returns the details for one transient port forward by ID.



# Retrieve active transient port forwards
Source: https://docs.sdx.altostrat.io/api-reference/developers/port-forwards/retrieve-active-transient-port-forwards

sdx-api/openapi.json get /api/routers/{router_id}/transient-forwarding
List all active port forwards for a given router.



# Retrieve a list of routers
Source: https://docs.sdx.altostrat.io/api-reference/developers/sites/retrieve-a-list-of-routers

sdx-api/openapi.json get /api/routers
Returns a list of MikroTik routers belonging to the team associated with the bearer token.



# Retrieve OEM information
Source: https://docs.sdx.altostrat.io/api-reference/developers/sites/retrieve-oem-information

sdx-api/openapi.json get /api/routers/{router_id}/oem
Provides manufacturer data (model, CPU, OS license, etc.) for a given router.



# Retrieve router metadata
Source: https://docs.sdx.altostrat.io/api-reference/developers/sites/retrieve-router-metadata

sdx-api/openapi.json get /api/routers/{router_id}/metadata
Gets freeform metadata (like name, timezone, banner, etc.) for a specific router.



# Synchronous MikroTik command execution
Source: https://docs.sdx.altostrat.io/api-reference/developers/synchronous-api/synchronous-mikrotik-command-execution

sdx-api/openapi.json post /api/synchronous/{router_id}
Real-time RouterOS commands for read or quick ops (not recommended for major config changes).



# Adopt Device
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/bootstrap-&-adoption/adopt-device

sdx-api/spa/mikrotik.json post /adopt/{id}
Endpoint called by the device during bootstrapping to finalize adoption. It receives device information (heartbeat data), creates or finds the site record, and returns the final adoption script including the scheduler setup. Requires `Heartbeat` and `RunbookToken` middleware. Accepts `x-ros-debug` header.



# Get Bootstrap Script
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/bootstrap-&-adoption/get-bootstrap-script

sdx-api/spa/mikrotik.json get /{id}
Retrieves the initial bootstrap script for a device based on a runbook token. The device fetches this script to start the adoption process. Requires a valid runbook token middleware (`RunbookToken`). Accepts `x-ros-debug` header for verbose/non-minified script.



# Notify Scheduler Deletion
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/bootstrap-&-adoption/notify-scheduler-deletion

sdx-api/spa/mikrotik.json get /notify/delete
Endpoint called by a device's scheduler *after* it successfully deletes the Altostrat polling scheduler (typically when the site itself is being deleted/decommissioned). Requires `SiteAuth` and validates signature. Marks the site's deletion as fully completed.



# Receive Heartbeat & Get Job
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/heartbeat/receive-heartbeat-&-get-job

sdx-api/spa/mikrotik.json post /poll
Endpoint called periodically by the managed device (via scheduler). Sends device status (heartbeat) and receives the next pending job script, if any. Requires `SiteAuth` middleware (device-specific Bearer token).



# Get Customer Site IDs (Internal Lite)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/internal/get-customer-site-ids-internal-lite

sdx-api/spa/mikrotik.json get /site/internal/lite/{customer_id}
Retrieves only the UUIDs of sites for a specific customer ID. Requires internal API token authentication.



# Get Customer Sites (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/internal/get-customer-sites-internal

sdx-api/spa/mikrotik.json get /site/internal/{customer_id}
Retrieves a list of sites for a specific customer ID. Requires internal API token authentication.



# Get Online Site IDs (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/internal/get-online-site-ids-internal

sdx-api/spa/mikrotik.json get /site/internal/online
Retrieves a list of UUIDs for all sites currently marked as having a pulse (online). Intended for internal use.



# Get Site Counts for Multiple Customers (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/internal/get-site-counts-for-multiple-customers-internal

sdx-api/spa/mikrotik.json post /site/internal-count
Retrieves the count of sites for each customer ID provided in the request body. Requires internal API token authentication.



# Create Site Job
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/jobs/create-site-job

sdx-api/spa/mikrotik.json post /site/{site}/job
Creates a new job (command/script) for a specific site. Requires `job:create` permission and user ownership of the site. Uses headers for job metadata.



# Delete Site Job
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/jobs/delete-site-job

sdx-api/spa/mikrotik.json delete /site/{site}/job/{job}
Deletes a *pending* job (one that has not started execution). Requires `job:delete` permission and user ownership.



# Get Job Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/jobs/get-job-details

sdx-api/spa/mikrotik.json get /site/{site}/job/{job}
Retrieves details for a specific job associated with a site. Requires `job:view` permission and user ownership of the site/job.



# List Site Jobs
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/jobs/list-site-jobs

sdx-api/spa/mikrotik.json get /site/{site}/job
Retrieves a list of jobs associated with a specific site. Requires `job:view` permission and user ownership of the site.



# Update Job Status (from Device)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/jobs/update-job-status-from-device

sdx-api/spa/mikrotik.json get /job/{job}/update
Endpoint called by the device (using a signed URL provided in the job script) to update the status of a job (busy, done, fail). Uses `ValidateSignature` and `SubstituteBindings` middleware.



# Get Runbook Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/runbooks/get-runbook-details

sdx-api/spa/mikrotik.json get /runbook/{id}
Retrieves details for a specific Runbook, including its bootstrap command. Requires user authentication and authorization (user must own the runbook).



# SFTP User Authentication
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sftp-auth/sftp-user-authentication

sdx-api/spa/mikrotik.json get /servers/{serverId}/users/{username}/config
Called by the AWS SFTP Gateway to authenticate a user attempting to log in. Validates the provided password (cached temporarily) against the username (site UUID) and returns an IAM role and S3 policy if valid.



# Delete Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/delete-site

sdx-api/spa/mikrotik.json delete /site/{site}
Marks a site for deletion. The actual deletion and resource cleanup happen asynchronously. Requires `site:delete` permission and user ownership. Accepts `X-Force-Delete: true` header for immediate forceful deletion (use with caution).



# Get Recent Sites
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/get-recent-sites

sdx-api/spa/mikrotik.json get /site/recent
Retrieves a list of the 5 most recently accessed sites by the authenticated user. Requires user authentication.



# Get Site Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/get-site-details

sdx-api/spa/mikrotik.json get /site/{site}
Retrieves detailed information for a specific site. Records the access as a "recent site" for the user. Requires `site:view` permission and user ownership.



# Get Site Hourly Uptime Stats
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/get-site-hourly-uptime-stats

sdx-api/spa/mikrotik.json get /site/mikrotik-stats/{site}
Retrieves hourly uptime/downtime percentage statistics for the last 24 hours for a specific site. Requires user authentication and ownership.



# Get Site Version Info
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/get-site-version-info

sdx-api/spa/mikrotik.json get /site-version/{site}
Retrieves basic version information for a specific site.



# List User's Sites
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/list-users-sites

sdx-api/spa/mikrotik.json get /site
Retrieves a list of all sites associated with the authenticated user. Requires `site:view` permission.



# List User's Sites (Minimal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/list-users-sites-minimal

sdx-api/spa/mikrotik.json get /site-minimal
Retrieves a minimal list of sites (ID, name, pulse status, basic info) associated with the authenticated user. Optimized for dropdowns or quick lists. Requires `site:view` permission.



# Manually Create Site (Internal/Admin)
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/manually-create-site-internaladmin

sdx-api/spa/mikrotik.json post /site/manual/create
Allows manual creation of a site record, bypassing the usual adoption flow. Intended for internal tooling or administrative purposes. Requires appropriate permissions (likely admin/internal).



# Update Site Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/async/sites/update-site-details

sdx-api/spa/mikrotik.json put /site/{site}
Updates mutable details of a specific site (e.g., name, address, location, timezone). Requires `site:update` permission and user ownership.



# Get Country Codes and Locale Info
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/ancillary-services/get-country-codes-and-locale-info

sdx-api/spa/authentication.json get /users/country-codes
Returns a list of supported countries with their codes, flags, and currency information based on the user's detected IP address.



# Get States/Provinces
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/ancillary-services/get-statesprovinces

sdx-api/spa/authentication.json get /users/states
Returns a list of states or provinces for countries that have them defined (e.g., US, CA, AU, ZA).



# Get Supported Date/Time Formats
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/ancillary-services/get-supported-datetime-formats

sdx-api/spa/authentication.json get /users/carbon-formats
Returns lists of supported date and time formats with examples based on the user's timezone.



# Get Supported Timezones
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/ancillary-services/get-supported-timezones

sdx-api/spa/authentication.json get /users/timezone
Returns a list of all supported timezones and timezones specific to the user's detected or profile country.



# Get Timezones for a Country
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/ancillary-services/get-timezones-for-a-country

sdx-api/spa/authentication.json get /users/timezone/{country}
Returns a list of supported timezones for a specific country code (ISO2).



# Create API Credential for Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/api-credentials/create-api-credential-for-team

sdx-api/spa/authentication.json post /teams/{team}/api-credentials
Creates a new API credential (token) for the specified team. Requires `api:create` scope. The full token is only returned on creation.



# Delete API Credential
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/api-credentials/delete-api-credential

sdx-api/spa/authentication.json delete /teams/{team}/api-credentials/{apiToken}
Deletes/revokes an API credential. Requires `api:delete` scope.



# Get API Credential Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/api-credentials/get-api-credential-details

sdx-api/spa/authentication.json get /teams/{team}/api-credentials/{apiToken}
Retrieves details for a specific API credential. Requires `api:view` scope. Does not return the secret token value.



# List API Credentials for Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/api-credentials/list-api-credentials-for-team

sdx-api/spa/authentication.json get /teams/{team}/api-credentials
Retrieves all API credentials (tokens) associated with the specified team. Requires `api:view` scope.



# Update API Credential
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/api-credentials/update-api-credential

sdx-api/spa/authentication.json put /teams/{team}/api-credentials/{apiToken}
Updates the name or expiration date of an API credential. Requires `api:update` scope.



# Authenticate using API Token
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/authenticate-using-api-token

sdx-api/spa/authentication.json get /.well-known/jwt
Exchanges a valid Altostrat API Token (provided as Bearer token) for a short-lived JWT.



# Confirm Two-Factor Authentication
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/confirm-two-factor-authentication

sdx-api/spa/authentication.json post /oauth/confirm-2fa
Confirms the 2FA setup using a code from the authenticator app.



# Disable Two-Factor Authentication
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/disable-two-factor-authentication

sdx-api/spa/authentication.json delete /oauth/2fa
Disables 2FA for the authenticated user.



# Enable Two-Factor Authentication
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/enable-two-factor-authentication

sdx-api/spa/authentication.json post /oauth/2fa
Enables 2FA for the authenticated user. Requires confirmation step.



# Generate New 2FA Recovery Codes
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/generate-new-2fa-recovery-codes

sdx-api/spa/authentication.json post /oauth/2fa-recovery-codes
Generates and returns a new set of 2FA recovery codes, invalidating the old ones.



# Get 2FA QR Code
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-2fa-qr-code

sdx-api/spa/authentication.json get /oauth/2fa-qr-code
Retrieves the SVG QR code for setting up 2FA in an authenticator app.



# Get 2FA Recovery Codes
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-2fa-recovery-codes

sdx-api/spa/authentication.json get /oauth/2fa-recovery-codes
Retrieves the user's current 2FA recovery codes.



# Get 2FA Secret Key
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-2fa-secret-key

sdx-api/spa/authentication.json get /oauth/2fa-secret-key
Retrieves the secret key for manually setting up 2FA.



# Get Authenticated User Info (API)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-authenticated-user-info-api

sdx-api/spa/authentication.json get /api/user
Retrieves detailed information about the currently authenticated user via API token (JWT).



# Get Authenticated User Info (OAuth)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-authenticated-user-info-oauth

sdx-api/spa/authentication.json get /oauth/userinfo
Retrieves detailed information about the currently authenticated user (standard OIDC endpoint).



# Get JSON Web Key Set (JWKS)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-json-web-key-set-jwks

sdx-api/spa/authentication.json get /.well-known/jwks.json
Returns the JSON Web Key Set used for verifying JWT signatures.



# Get OpenID Connect Configuration
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/authentication-&-user-info/get-openid-connect-configuration

sdx-api/spa/authentication.json get /.well-known/openid-configuration
Returns the OpenID Connect discovery document containing endpoints and capabilities.



# Get Billing Account Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--account/get-billing-account-details

sdx-api/spa/authentication.json get /billing/account
Retrieves the Stripe customer account details associated with the user's organization.



# Update Billing Account Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--account/update-billing-account-details

sdx-api/spa/authentication.json put /billing/account
Updates the Stripe customer account details (name, email, address parts, additional invoice info). Country is immutable. Requires `billing:update` scope.



# Get Invoice or Upcoming Invoice
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--invoices/get-invoice-or-upcoming-invoice

sdx-api/spa/authentication.json get /billing/invoices/{id}
Retrieves details for a specific past invoice (using `in_...` ID) OR the upcoming invoice for a subscription (using `sub_...` ID). Requires `billing:view` scope.



# Get Next Payment Details (Upcoming Invoice)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--invoices/get-next-payment-details-upcoming-invoice

sdx-api/spa/authentication.json get /billing/next-payment
Retrieves details about the next upcoming invoice for the default subscription. Requires `billing:view` scope.



# List Invoices
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--invoices/list-invoices

sdx-api/spa/authentication.json get /billing/invoices
Retrieves a list of past invoices (including pending) for the organization. Requires `billing:view` scope.



# Preview Price Change
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--invoices/preview-price-change

sdx-api/spa/authentication.json get /billing/preview-price
Previews the invoice changes if the subscription interval were changed. Requires `billing:view` scope.



# Create Setup Intent
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--payment-methods/create-setup-intent

sdx-api/spa/authentication.json post /billing/setup-intent
Creates a Stripe SetupIntent to securely collect payment method details (e.g., for adding a new card). Requires `billing:update` scope.



# Delete Payment Method
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--payment-methods/delete-payment-method

sdx-api/spa/authentication.json delete /billing/payment-methods/{id}
Deletes a saved payment method. Cannot delete the default payment method. Requires `billing:update` scope.



# List Payment Methods
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--payment-methods/list-payment-methods

sdx-api/spa/authentication.json get /billing/payment-methods
Retrieves a list of saved payment methods (cards) for the organization's billing account. Requires `billing:view` scope.



# Set Default Payment Method
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--payment-methods/set-default-payment-method

sdx-api/spa/authentication.json post /billing/payment-methods
Sets a previously added payment method (identified by its Stripe PM or Card ID) as the default for the organization's subscriptions. Requires `billing:update` scope.



# Cancel Subscription
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--subscriptions/cancel-subscription

sdx-api/spa/authentication.json delete /billing/subscriptions/{plan}
Cancels the specified subscription plan immediately. Requires `billing:update` scope. Cannot cancel if active services exceed minimum/free tier.



# Create or Update Subscription
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--subscriptions/create-or-update-subscription

sdx-api/spa/authentication.json post /billing/subscriptions
Creates a new `default` subscription or updates the quantity/interval of an existing one based on the provided plan details. Requires `billing:update` scope and a default payment method.



# Get Public Pricing Information
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--subscriptions/get-public-pricing-information

sdx-api/spa/authentication.json get /billing/prices
Retrieves public pricing details, potentially localized based on IP address. Does not require authentication.



# Get Subscription Overview
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--subscriptions/get-subscription-overview

sdx-api/spa/authentication.json get /billing/subscriptions
Retrieves an overview of the organization's current subscription status, usage, and pricing for different plans. Requires `billing:view` scope.



# Add Tax ID
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--tax-ids/add-tax-id

sdx-api/spa/authentication.json post /billing/tax
Adds a Tax ID to the organization's billing account. Requires `billing:update` scope.



# Delete Tax ID
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--tax-ids/delete-tax-id

sdx-api/spa/authentication.json delete /billing/tax/{tax}
Deletes a Tax ID from the organization's billing account. Requires `billing:update` scope.



# List Supported Tax ID Types
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--tax-ids/list-supported-tax-id-types

sdx-api/spa/authentication.json get /billing/tax/types
Retrieves a list of supported Tax ID types with descriptions, country codes, and examples. Requires `billing:view` scope.



# List Tax IDs
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/billing--tax-ids/list-tax-ids

sdx-api/spa/authentication.json get /billing/tax
Retrieves a list of Tax IDs associated with the organization's billing account. Requires `billing:view` scope.



# Get Organization ID for Team (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/get-organization-id-for-team-internal

sdx-api/spa/authentication.json get /users/m2m/org-id/{team}
Internal endpoint to look up organization and owner details based on a team ID. Requires M2M authentication.



# Get Team License/Seat Count (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/get-team-licenseseat-count-internal

sdx-api/spa/authentication.json get /billing/internal/seat-count/{team}
Internal endpoint for checking available license seats within a team context. Requires specific internal M2M Bearer token authentication.



# Get User Email Details (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/get-user-email-details-internal

sdx-api/spa/authentication.json get /users/m2m/notifiable/email/{user}
Internal endpoint to retrieve user's email details. Requires M2M authentication.



# Get User Mobile Details (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/get-user-mobile-details-internal

sdx-api/spa/authentication.json get /users/m2m/notifiable/mobile/{user}
Internal endpoint to retrieve user's mobile number details. Requires M2M authentication.



# Record CVE Scan Charge (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/record-cve-scan-charge-internal

sdx-api/spa/authentication.json post /users/m2m/charges/cve/{team}
Internal endpoint to record a usage-based charge for a CVE scan against a team's organization. Requires M2M authentication.



# Trigger Site Count Sync (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/trigger-site-count-sync-internal

sdx-api/spa/authentication.json get /users/m2m/sync/site-count
Internal endpoint to trigger a background job that syncs site counts for all organizations. Requires M2M authentication.



# Update Organization Trial End Date (Internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/internal-m2m/update-organization-trial-end-date-internal

sdx-api/spa/authentication.json post /users/m2m/trial_ends_at/{organization}
Internal endpoint to set or update the trial end date for an organization. Requires M2M authentication.



# Create Team Role
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/create-team-role

sdx-api/spa/authentication.json post /team_roles
Creates a new custom role specific to the current team. Requires `role:create` scope.



# Delete Team Role
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/delete-team-role

sdx-api/spa/authentication.json delete /team_roles/{role}
Deletes a custom role specific to the current team. Cannot delete global roles or roles currently assigned to users. Requires `role:delete` scope.



# Get Role Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/get-role-details

sdx-api/spa/authentication.json get /team_roles/{role}
Retrieves details of a specific role (global or team-specific). Requires `role:view` scope.



# List Available Scopes
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/list-available-scopes

sdx-api/spa/authentication.json get /scopes
Retrieves a list of all available permission scopes in the system.



# List Team Roles
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/list-team-roles

sdx-api/spa/authentication.json get /team_roles
Retrieves all roles available within the current team context (includes global and team-specific roles). Requires `role:view` scope.



# Update Team Role
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/roles-&-permissions/update-team-role

sdx-api/spa/authentication.json put /team_roles/{role}
Updates a custom role specific to the current team. Cannot update global roles. Requires `role:update` scope.



# Cancel Team Invitation
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/cancel-team-invitation

sdx-api/spa/authentication.json delete /teams/{team}/invites/{teamInvitation}
Cancels a pending team invitation. Requires `teams:invite-users` scope (or owner permission).



# Create Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/create-team

sdx-api/spa/authentication.json post /teams
Creates a new team owned by the authenticated user, associated with their organization. Requires `team:create` scope (or implicitly allowed for owners).



# Delete Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/delete-team

sdx-api/spa/authentication.json delete /teams/{team}
Deletes a team. Requires `team:delete` scope (or owner permission). Cannot delete personal teams or teams with active resources.



# Get Invitation Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/get-invitation-details

sdx-api/spa/authentication.json get /teams/{team}/invites/{teamInvitation}
Retrieves details of a specific pending invitation.



# Get Team Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/get-team-details

sdx-api/spa/authentication.json get /teams/{team}
Retrieves details for a specific team the user belongs to.



# Get Team Member Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/get-team-member-details

sdx-api/spa/authentication.json get /teams/{team}/members/{user}
Retrieves the details of a specific member within a specific team, including their roles within that team.



# Invite User to Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/invite-user-to-team

sdx-api/spa/authentication.json post /teams/{team}/invites
Sends an invitation email to a user to join the specified team. Requires `teams:invite-users` scope.



# List Pending Team Invitations
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/list-pending-team-invitations

sdx-api/spa/authentication.json get /teams/{team}/invites
Retrieves a list of pending invitations for the specified team.



# List Team Members
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/list-team-members

sdx-api/spa/authentication.json get /teams/{team}/members
Retrieves a list of users who are members of the specified team.



# List User's Teams
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/list-users-teams

sdx-api/spa/authentication.json get /teams
Retrieves a list of all teams the authenticated user is a member of.



# Remove Team Member
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/remove-team-member

sdx-api/spa/authentication.json delete /teams/{team}/members/{user}
Removes a specified user from the specified team. Requires `teams:remove-users` scope or owner permission. Cannot remove the team owner.



# Switch Current Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/switch-current-team

sdx-api/spa/authentication.json put /teams/{team}/switch
Sets the specified team as the authenticated user's current active team context.



# Update Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/teams/update-team

sdx-api/spa/authentication.json put /teams/{team}
Updates the details of a specific team. Requires `team:update` scope (or owner permission).



# Create or Add User to Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/create-or-add-user-to-team

sdx-api/spa/authentication.json post /users
Creates a new user (if email doesn't exist) and adds them to the current team, or adds an existing user to the team. Requires `user:create` scope. Sends verification emails/SMS if applicable. Newly created users get a temporary password returned in the response (only on creation).



# Delete User
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/delete-user

sdx-api/spa/authentication.json delete /users/{user}
Removes a user from the system **if** they are not the owner of any team with other members. Requires `user:delete` scope unless deleting self (which is generally disallowed if owner).



# Get User Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/get-user-details

sdx-api/spa/authentication.json get /users/{user}
Retrieves details for a specific user within the current team context. Requires `user:view` scope.



# List Users in Current Team
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/list-users-in-current-team

sdx-api/spa/authentication.json get /users
Retrieves a list of all users belonging to the authenticated user's current team. Requires `user:view` scope.



# Resend Email Verification
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/resend-email-verification

sdx-api/spa/authentication.json get /users/{user}/verification-notification/email
Sends a new email verification link to the specified user if their email is not already verified. Rate limited.



# Resend Mobile Verification
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/resend-mobile-verification

sdx-api/spa/authentication.json get /users/{user}/verification-notification/mobile
Sends a new mobile verification link (via SMS) to the specified user if their mobile is not already verified and is set. Rate limited.



# Submit Feedback
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/submit-feedback

sdx-api/spa/authentication.json post /users/feedback
Submits user feedback, which creates a ticket in the helpdesk system.



# Update User Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/authentication/user-management/update-user-details

sdx-api/spa/authentication.json put /users/{user}
Updates the profile information for a specific user. Requires `user:update` scope unless updating self. Updating email or mobile number will reset verification status and trigger new verification flows. Can also update user roles within the team.



# List backups for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/backups/site-backups/list-backups-for-a-site

sdx-api/spa/backups.json get /{site}/
Retrieves an array of available RouterOS backups for the specified site. Requires `backup:view` scope.



# Request a new backup for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/backups/site-backups/request-a-new-backup-for-a-site

sdx-api/spa/backups.json post /{site}/
Enqueues a backup request for the specified site. Requires `backup:create` scope.



# Retrieve a specific backup file
Source: https://docs.sdx.altostrat.io/api-reference/spa/backups/site-backups/retrieve-a-specific-backup-file

sdx-api/spa/backups.json get /{site}/{file}
Shows the contents of the specified backup file. By default returns JSON with parsed metadata. If header `X-Download` is set, it downloads raw data. If `x-highlight` is set, highlights syntax. If `x-view` is set, returns raw text in `text/plain`. Requires `backup:view` scope.



# Retrieve subnets from latest backup
Source: https://docs.sdx.altostrat.io/api-reference/spa/backups/site-backups/retrieve-subnets-from-latest-backup

sdx-api/spa/backups.json get /{site}/subnets
Parses the most recent backup for the specified site, returning discovered local subnets. Requires `backup:view` scope.



# Show diff between two backup files
Source: https://docs.sdx.altostrat.io/api-reference/spa/backups/site-backups/show-diff-between-two-backup-files

sdx-api/spa/backups.json get /{site}/{from}/{to}
Returns a unified diff between two backup files. By default returns the diff as `text/plain`. If `X-Download` header is set, you can download it as a file. If `x-highlight` is set, it highlights the diff in a textual format. Requires `backup:view` scope.



# Assign BGP Policy to Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/assign-bgp-policy-to-site

sdx-api/spa/bgp-dns-filter.json post /bgp/{site_id}
Assigns or updates the BGP/DNR policy for a specific site tunnel. Creates the tunnel record if it doesn't exist.



# Create BGP Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/create-bgp-policy

sdx-api/spa/bgp-dns-filter.json post /bgp/policy
Creates a new BGP/DNR policy.



# Delete BGP Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/delete-bgp-policy

sdx-api/spa/bgp-dns-filter.json delete /bgp/policy/{policy}
Deletes a BGP/DNR policy. Fails if the policy is currently attached to any sites.



# Get BGP Policy Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/get-bgp-policy-details

sdx-api/spa/bgp-dns-filter.json get /bgp/policy/{policy}
Retrieves details of a specific BGP/DNR policy by its UUID.



# List BGP Policies
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/list-bgp-policies

sdx-api/spa/bgp-dns-filter.json get /bgp/policy
Retrieves all BGP/DNR policies for the authenticated customer.



# List BGP/DNR Lists
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/list-bgpdnr-lists

sdx-api/spa/bgp-dns-filter.json get /bgp/category
Retrieves a list of available BGP/DNR feed lists.



# Remove BGP Policy from Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/remove-bgp-policy-from-site

sdx-api/spa/bgp-dns-filter.json delete /bgp/{site_id}
Removes the BGP/DNR policy assignment from a specific site tunnel. Deletes the tunnel record if no DNS policy remains.



# Update BGP Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/bgp-policy/update-bgp-policy

sdx-api/spa/bgp-dns-filter.json put /bgp/policy/{policy}
Updates an existing BGP/DNR policy.



# List Categories and Top Applications
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/categories-&-applications/list-categories-and-top-applications

sdx-api/spa/bgp-dns-filter.json get /category
Retrieves a list of content categories, each including its top applications sorted by domain count.



# List Safe Search Options
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/categories-&-applications/list-safe-search-options

sdx-api/spa/bgp-dns-filter.json get /category/safe_search
Retrieves a list of available safe search services and their configuration options.



# Assign DNS Policy to Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/assign-dns-policy-to-site

sdx-api/spa/bgp-dns-filter.json post /{site_id}
Assigns or updates the DNS policy for a specific site tunnel. Creates the tunnel record if it doesn't exist.



# Create DNS Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/create-dns-policy

sdx-api/spa/bgp-dns-filter.json post /policy
Creates a new DNS content filtering policy.



# Delete DNS Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/delete-dns-policy

sdx-api/spa/bgp-dns-filter.json delete /policy/{policy}
Deletes a DNS policy. Fails if the policy is currently attached to any sites.



# Get DNS Policy Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/get-dns-policy-details

sdx-api/spa/bgp-dns-filter.json get /policy/{policy}
Retrieves details of a specific DNS policy by its UUID.



# List DNS Policies
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/list-dns-policies

sdx-api/spa/bgp-dns-filter.json get /policy
Retrieves all DNS content filtering policies for the authenticated customer.



# Remove DNS Policy from Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/remove-dns-policy-from-site

sdx-api/spa/bgp-dns-filter.json delete /{site_id}
Removes the DNS policy assignment from a specific site tunnel. Deletes the tunnel record if no BGP policy remains.



# Update DNS Policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/dns-policy/update-dns-policy

sdx-api/spa/bgp-dns-filter.json put /policy/{policy}
Updates an existing DNS content filtering policy.



# Handle DNR Subscription Webhook
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/internal-hooks/handle-dnr-subscription-webhook

sdx-api/spa/bgp-dns-filter.json post /subscription/dnr
Endpoint to receive DNR (BGP) subscription lifecycle events (create, terminate). Requires valid signature.



# Handle DNS Subscription Webhook
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/internal-hooks/handle-dns-subscription-webhook

sdx-api/spa/bgp-dns-filter.json post /subscription/dns
Endpoint to receive DNS subscription lifecycle events (create, terminate). Requires valid signature.



# Get Application Blackhole IPs
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/ip-lists/get-application-blackhole-ips

sdx-api/spa/bgp-dns-filter.json get /blackhole-ips
Retrieves a list of applications and their assigned blackhole IP addresses used for DNS filtering. Requires internal API token.



# Get DNR Blackhole IP Ranges
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/ip-lists/get-dnr-blackhole-ip-ranges

sdx-api/spa/bgp-dns-filter.json get /dnr-blackhole-ips
Retrieves a map of DNR list names to their active blackhole IP ranges (integer format). Requires internal API token.



# Get Service Counts for All Customers
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/get-service-counts-for-all-customers

sdx-api/spa/bgp-dns-filter.json get /all-customer-services
Retrieves a summary count of DNS and DNR subscriptions per customer. Requires internal API token.



# Get Service Details for a Customer
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/get-service-details-for-a-customer

sdx-api/spa/bgp-dns-filter.json get /customer-services/{customer_id}
Retrieves detailed service information (DNS/DNR subscriptions) for all tunnels belonging to a specific customer. Requires internal API token.



# Get Tunnel/Site Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/get-tunnelsite-details

sdx-api/spa/bgp-dns-filter.json get /tunnel/{site_id}
Retrieves details for a specific tunnel/site by its Site ID.



# List All Tunnels/Sites
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/list-all-tunnelssites

sdx-api/spa/bgp-dns-filter.json get /tunnel
Retrieves a list of all tunnels/sites associated with the authenticated customer.



# List Sites with BGP/DNR Service
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/list-sites-with-bgpdnr-service

sdx-api/spa/bgp-dns-filter.json get /bgp/service-counts
Retrieves a list of site IDs for the authenticated customer that have the BGP/DNR service enabled.



# List Sites with DNS Service
Source: https://docs.sdx.altostrat.io/api-reference/spa/bgp-dns-filter/tunnels-&-sites/list-sites-with-dns-service

sdx-api/spa/bgp-dns-filter.json get /service-counts
Retrieves a list of site IDs for the authenticated customer that have the DNS filtering service enabled.



# Create a new Auth Integration
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/create-a-new-auth-integration

sdx-api/spa/captive-portal.json post /auth-integrations



# Delete a specific Auth Integration
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/delete-a-specific-auth-integration

sdx-api/spa/captive-portal.json delete /auth-integrations/{auth_integration}



# List all IDP Integrations
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/list-all-idp-integrations

sdx-api/spa/captive-portal.json get /auth-integrations



# Partially update a specific Auth Integration
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/partially-update-a-specific-auth-integration

sdx-api/spa/captive-portal.json patch /auth-integrations/{auth_integration}



# Replace a specific Auth Integration
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/replace-a-specific-auth-integration

sdx-api/spa/captive-portal.json put /auth-integrations/{auth_integration}



# Retrieve a specific Auth Integration
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/idp-integrations/retrieve-a-specific-auth-integration

sdx-api/spa/captive-portal.json get /auth-integrations/{auth_integration}



# Create a new captive portal Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/create-a-new-captive-portal-instance

sdx-api/spa/captive-portal.json post /instances



# Delete a specific captive portal Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/delete-a-specific-captive-portal-instance

sdx-api/spa/captive-portal.json delete /instances/{instance}



# List all captive portal Instances
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/list-all-captive-portal-instances

sdx-api/spa/captive-portal.json get /instances



# Partially update a specific captive portal Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/partially-update-a-specific-captive-portal-instance

sdx-api/spa/captive-portal.json patch /instances/{instance}



# Replace a specific captive portal Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/replace-a-specific-captive-portal-instance

sdx-api/spa/captive-portal.json put /instances/{instance}



# Retrieve a specific captive portal Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/retrieve-a-specific-captive-portal-instance

sdx-api/spa/captive-portal.json get /instances/{instance}



# Upload an image (logo or icon) for a specific Instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/instances/upload-an-image-logo-or-icon-for-a-specific-instance

sdx-api/spa/captive-portal.json post /instances/{instance}/images/{type}



# Create a new walled garden entry for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/create-a-new-walled-garden-entry-for-a-site

sdx-api/spa/captive-portal.json post /walled-garden/{site}



# Delete a specific walled garden entry under a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/delete-a-specific-walled-garden-entry-under-a-site

sdx-api/spa/captive-portal.json delete /walled-garden/{site}/{walledGarden}



# List all walled garden entries for a specific site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/list-all-walled-garden-entries-for-a-specific-site

sdx-api/spa/captive-portal.json get /walled-garden/{site}



# Partially update a specific walled garden entry under a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/partially-update-a-specific-walled-garden-entry-under-a-site

sdx-api/spa/captive-portal.json patch /walled-garden/{site}/{walledGarden}



# Replace a specific walled garden entry under a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/replace-a-specific-walled-garden-entry-under-a-site

sdx-api/spa/captive-portal.json put /walled-garden/{site}/{walledGarden}



# Retrieve a specific walled garden entry under a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/captive-portal/walled-garden/retrieve-a-specific-walled-garden-entry-under-a-site

sdx-api/spa/captive-portal.json get /walled-garden/{site}/{walledGarden}



# Server check-in for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/checkin/server-check-in-for-a-site

sdx-api/spa/control-plane.json post /site-checkin
Called by a server to claim or update itself as the active server for a particular site (via the tunnel username).



# Create (rotate) new credentials
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/credentials/create-rotate-new-credentials

sdx-api/spa/control-plane.json post /{site}/credentials
Generates a new username/password pair for the site, deletes any older credentials. Requires `apicredentials:create` scope.



# List site API credentials
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/credentials/list-site-api-credentials

sdx-api/spa/control-plane.json get /{site}/credentials
Returns the API credentials used to connect to a site. Requires `apicredentials:view` scope.



# (Internal) Fetch management IPs for multiple sites
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/internal/internal-fetch-management-ips-for-multiple-sites

sdx-api/spa/control-plane.json post /internal/management-ips
Given an array of site IDs, returns a map of site_id => management IP (tunnel IP).



# (Internal) Get site credentials
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/internal/internal-get-site-credentials

sdx-api/spa/control-plane.json get /{site}/internal-credentials
Returns the latest credentials for the specified site, typically used by internal services. Not user-facing.



# Assign sites to a policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/assign-sites-to-a-policy

sdx-api/spa/control-plane.json post /policies/{id}/sites
Sets or moves multiple site IDs onto the given policy. Requires `cpf:create` or `cpf:update` scope.



# Create a policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/create-a-policy

sdx-api/spa/control-plane.json post /policies
Creates a new policy for the authenticated user. Requires `cpf:create` scope.



# Delete a policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/delete-a-policy

sdx-api/spa/control-plane.json delete /policies/{id}
Removes a policy if it is not the default policy. Sites that used this policy get moved to the default policy. Requires `cpf:delete` scope.



# List policies
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/list-policies

sdx-api/spa/control-plane.json get /policies
Retrieves all policies for the authenticated user.  Requires `cpf:view` scope.



# Show a single policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/show-a-single-policy

sdx-api/spa/control-plane.json get /policies/{id}
Retrieves details of the specified policy, including related sites. Requires `cpf:view` scope.



# Update a policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/update-a-policy

sdx-api/spa/control-plane.json put /policies/{id}
Update the specified policy. Sites not in the request may revert to a default policy.  Requires `cpf:update` scope.



# Validate a policy
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/policies/validate-a-policy

sdx-api/spa/control-plane.json get /policy-validate/{policy}
Check basic policy details to ensure it's valid.



# Execute commands on a site (internal sync)
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/router-commands/execute-commands-on-a-site-internal-sync

sdx-api/spa/control-plane.json post /{site}/sync/execute
Sends an execution script or command to the management server for the site. Similar to /sync but specifically for custom script execution.



# Print or run commands on a site (internal sync)
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/router-commands/print-or-run-commands-on-a-site-internal-sync

sdx-api/spa/control-plane.json post /{site}/sync
Send an API command to the management server to print or list resources on the router, or run a custom command.



# Re-send bootstrap scheduler script
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/scheduler/re-send-bootstrap-scheduler-script

sdx-api/spa/control-plane.json post /{site}/resend-scheduler
Forces re-sending of a scheduled script or runbook to the router. Often used if the script fails to be applied the first time.



# Check the management server assigned to a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/check-the-management-server-assigned-to-a-site

sdx-api/spa/control-plane.json get /{site}/management-server
Returns the IP/hostname of the server currently managing the site. Requires authentication.



# Create a new Site
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/create-a-new-site

sdx-api/spa/control-plane.json post /site/create
Creates a new site resource with the specified ID, policy, and other information.



# Create site for migration
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/create-site-for-migration

sdx-api/spa/control-plane.json post /site/create-for-migration
Creates a Site for system migrations, then runs additional background jobs (tunnel assignment, credentials creation, policy update).



# List all site IDs
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/list-all-site-ids

sdx-api/spa/control-plane.json get /site_ids
Returns minimal site data for every site in the system (ID and tunnel IP).



# List site IDs by Customer
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/list-site-ids-by-customer

sdx-api/spa/control-plane.json get /site_ids/{customerid}
Returns a minimal array of sites for a given customer, including the assigned tunnel IP if available.



# Perform a site action
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/perform-a-site-action

sdx-api/spa/control-plane.json post /{site}/action
Sends an SNS-based request to the router for various special actions (reboot, clear firewall, etc.).



# Retrieve site note
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/retrieve-site-note

sdx-api/spa/control-plane.json get /{site}/note
Fetch current note from an external metadata microservice. Requires authentication and site ownership.



# Set site note
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/sites/set-site-note

sdx-api/spa/control-plane.json post /{site}/note
Update or create site metadata with a 'note' field, stored in an external metadata microservice.



# Create a transient access for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-access/create-a-transient-access-for-a-site

sdx-api/spa/control-plane.json post /{site}/transient-accesses
Generates a temporary NAT access to Winbox/SSH. Requires `transientaccess:create` scope.



# List active transient accesses for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-access/list-active-transient-accesses-for-a-site

sdx-api/spa/control-plane.json get /{site}/transient-accesses
Returns all unexpired, unrevoked transient access records for the site. Requires `transientaccess:view` scope.



# Revoke a transient access
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-access/revoke-a-transient-access

sdx-api/spa/control-plane.json delete /{site}/transient-accesses/{id}
Marks it as expired/revoked and triggers config removal. Requires `transientaccess:delete` scope.



# Show one transient access
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-access/show-one-transient-access

sdx-api/spa/control-plane.json get /{site}/transient-accesses/{id}
Returns a single transient access record. Requires `transientaccess:view` scope.



# Create a transient port-forward
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-forward/create-a-transient-port-forward

sdx-api/spa/control-plane.json post /{site}/transient-forward
Creates a short-lived NAT forwarding rule to a destination IP/port behind the router.



# List site transient port forwards
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-forward/list-site-transient-port-forwards

sdx-api/spa/control-plane.json get /{site}/transient-forward
Returns all active NAT port-forwards for a site. Not access-limited, but presumably requires a certain scope.



# Revoke a transient port-forward
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-forward/revoke-a-transient-port-forward

sdx-api/spa/control-plane.json delete /{site}/transient-forward/{id}
Marks the port-forward as expired and removes the NAT rule from the management server.



# Show one transient port-forward
Source: https://docs.sdx.altostrat.io/api-reference/spa/cpf/transient-forward/show-one-transient-port-forward

sdx-api/spa/control-plane.json get /{site}/transient-forward/{id}
Returns details about a specific transient port-forward rule by ID.



# Get CVE Mitigation Steps
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/cve-management/get-cve-mitigation-steps

sdx-api/spa/cve-scans.json get /mitigation/{cve_id}
Retrieves AI-generated, OS-agnostic manual mitigation steps for a specified CVE ID. Requires `cve:view` scope.



# Get CVEs by MAC Address
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/cve-management/get-cves-by-mac-address

sdx-api/spa/cve-scans.json get /mac-address/cves
Retrieves all CVEs associated with a specific MAC address across all scans for the customer. Throttled (600 req/min). Requires `cve:view` scope.



# List CVE Status Overrides
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/cve-management/list-cve-status-overrides

sdx-api/spa/cve-scans.json get /mac-address/cve/status
Retrieves a list of manually set CVE statuses (accepted/mitigated) for MAC addresses, optionally filtered by MAC, CVE ID, or status. Requires `cve:view` scope.



# List MAC Addresses with CVEs
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/cve-management/list-mac-addresses-with-cves

sdx-api/spa/cve-scans.json get /mac-address/cve/list
Retrieves a list of unique MAC addresses that have associated CVEs for the authenticated customer, along with summary statistics. Throttled (600 req/min). Requires `cve:view` scope.



# Set CVE Status Override
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/cve-management/set-cve-status-override

sdx-api/spa/cve-scans.json post /mac-address/cve/status
Creates a new status record (accepted or mitigated) for a specific CVE on a specific MAC address. Status expires automatically after 5 minutes. Requires `cve:update` scope.



# Scan Multiple IPs via Schedule Context
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/on-demand-scans/scan-multiple-ips-via-schedule-context

sdx-api/spa/cve-scans.json post /scan/multiple-ips
Initiates an immediate scan for a list of specific IP addresses, using the context (credentials, settings) of an existing scan schedule and site. Requires authentication.



# Scan Single IP via Schedule Context
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/on-demand-scans/scan-single-ip-via-schedule-context

sdx-api/spa/cve-scans.json post /scheduled/single-ip
Initiates an immediate scan for a single IP address, using the context (credentials, settings) of an existing scan schedule. Requires authentication.



# Get Scan Result Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-results/get-scan-result-details

sdx-api/spa/cve-scans.json get /{scan_id}
Retrieves the detailed summary for a specific scan result instance by its UUID. Requires `cve:view` scope.



# List Scan Results
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-results/list-scan-results

sdx-api/spa/cve-scans.json get /
Retrieves a list of completed scan results/reports for the authenticated customer, sorted by date (newest first). Requires `cve:view` scope. Reports are generated asynchronously after scans complete.



# Create Scan Schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/create-scan-schedule

sdx-api/spa/cve-scans.json post /scheduled
Creates a new CVE scan schedule. Requires `cve:create` scope.



# Delete Scan Schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/delete-scan-schedule

sdx-api/spa/cve-scans.json delete /scheduled/{scanSchedule}
Deletes a scan schedule. Fails if the schedule has running scans. Requires `cve:delete` scope.



# Get Latest Scan Status for Schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/get-latest-scan-status-for-schedule

sdx-api/spa/cve-scans.json get /{scanSchedule}/status
Retrieves the status (targets, scanned, failed sites) of the most recent scan run associated with a schedule. Requires authentication.



# Get Scan Schedule Details
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/get-scan-schedule-details

sdx-api/spa/cve-scans.json get /scheduled/{scanSchedule}
Retrieves the details of a specific scan schedule by its UUID. Requires `cve:view` scope.



# List Scan Schedules
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/list-scan-schedules

sdx-api/spa/cve-scans.json get /scheduled
Retrieves all CVE scan schedules configured for the authenticated customer. Requires `cve:view` scope.



# Start Scheduled Scan Manually
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/start-scheduled-scan-manually

sdx-api/spa/cve-scans.json get /scheduled/{scanSchedule}/invoke
Initiates an immediate run of the specified scan schedule. Rate limited to prevent rapid restarts. Requires authorization to access the schedule.



# Stop Running Scheduled Scan
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/stop-running-scheduled-scan

sdx-api/spa/cve-scans.json delete /scheduled/{scanSchedule}/invoke
Requests the termination of any currently running scan instances associated with the specified schedule. Requires authorization to access the schedule.



# Update Scan Schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/cve/scan-schedules/update-scan-schedule

sdx-api/spa/cve-scans.json put /scheduled/{scanSchedule}
Updates an existing scan schedule. Requires `cve:update` scope.



# Assign a new IP address
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/assign-a-new-ip-address

sdx-api/spa/elastic-ip.json post /l2tp
Assigns a specific, available IP address from a given subnet to the customer and sets up associated RADIUS credentials.



# Get IP address details
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/get-ip-address-details

sdx-api/spa/elastic-ip.json get /l2tp/{ip}
Retrieves the details of a specific assigned IP address, including RADIUS credentials and last connection info.



# List assigned IP addresses
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/list-assigned-ip-addresses

sdx-api/spa/elastic-ip.json get /l2tp
Retrieves a list of all L2TP IP addresses assigned to the authenticated customer/user.



# Release an IP address
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/release-an-ip-address

sdx-api/spa/elastic-ip.json delete /l2tp/{ip}
Releases an assigned IP address, removing it from the customer's account and deleting associated RADIUS credentials and accounting data.



# Reset RADIUS password
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/reset-radius-password

sdx-api/spa/elastic-ip.json get /l2tp/{l2tp}/new-password
Resets the RADIUS password for the username associated with the specified IP address assignment.



# Update IP address PTR record
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/ip-addresses-l2tp/update-ip-address-ptr-record

sdx-api/spa/elastic-ip.json put /l2tp/{ip}
Updates the Pointer (PTR) record (Reverse DNS) for the specified IP address.



# Get available IPs in a subnet
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/subnets/get-available-ips-in-a-subnet

sdx-api/spa/elastic-ip.json get /subnet/{subnet}
Retrieves a list of randomly selected available IP addresses within the specified subnet. Limited to a maximum of 20 IPs.



# List all managed subnets
Source: https://docs.sdx.altostrat.io/api-reference/spa/elastic-ip/subnets/list-all-managed-subnets

sdx-api/spa/elastic-ip.json get /subnet
Retrieves a list of all subnets configured for the authenticated customer/user.



# Alias for listing recent or ongoing faults
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/alias-for-listing-recent-or-ongoing-faults

sdx-api/spa/faults.json get /
Identical to `GET /recent`. **Requires** `fault:view` scope.



# Generate a new short-lived fault token
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/generate-a-new-short-lived-fault-token

sdx-api/spa/faults.json post /token
Creates a token that can be used to retrieve unresolved or recently resolved faults without requiring ongoing authentication. **Requires** `fault:create` or possibly `fault:view` (depending on usage).



# List all faults for a given site ID
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/list-all-faults-for-a-given-site-id

sdx-api/spa/faults.json get /site/{site}
Returns all faults recorded for a particular site. **Requires** `fault:view` scope.



# List recent or ongoing faults
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/list-recent-or-ongoing-faults

sdx-api/spa/faults.json get /recent
**Requires** `fault:view` scope.

Returns a paginated list of faults filtered by query parameters, typically those unresolved or resolved within the last 10 minutes if `status=recent` is used. For more flexible filtering see query parameters below.



# List top 10 WAN faults in last 14 days
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/list-top-10-wan-faults-in-last-14-days

sdx-api/spa/faults.json get /top10wan
Retrieves the top 10 most active WAN tunnel (type=wantunnel) faults in the last 14 days. **Requires** `fault:view` scope.



# Retrieve currently active (unresolved) faults via internal token
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/retrieve-currently-active-unresolved-faults-via-internal-token

sdx-api/spa/faults.json post /fault/internal_active
Available only via internal API token. Expects `type` in the request body (e.g. `site` or `wantunnel`) and returns all unresolved faults of that type.



# Retrieve faults using short-lived token
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/retrieve-faults-using-short-lived-token

sdx-api/spa/faults.json get /fault/token/{token}
Retrieves a set of unresolved or recently resolved faults for the customer associated with the given short-lived token. No other authentication needed. **Public** endpoint, token-based.



# Retrieve internal fault timeline for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/faults/faults/retrieve-internal-fault-timeline-for-a-site

sdx-api/spa/faults.json post /fault/internal
Available only via internal API token (`internal` middleware). Typically used for analyzing fault timelines. Requires fields `start`, `end`, `type`, and `site_id` in the request body.



# Filter and retrieve log events
Source: https://docs.sdx.altostrat.io/api-reference/spa/logs/log-events/filter-and-retrieve-log-events

sdx-api/spa/logs.json post /{log_group_name}
Returns filtered log events from CloudWatch for the requested log group and streams. Requires `logs:view` scope.



# Global ARP search across user’s sites
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/arp/global-arp-search-across-user’s-sites

sdx-api/spa/metrics.json post /arps
Search ARP data across multiple sites belonging to the current user. Requires `inventory:view` scope.



# (Internal) ARP entries for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/arp/internal-arp-entries-for-a-site

sdx-api/spa/metrics.json get /internal/arp/{site}
Returns ARP data for the site, or 204 if none exist. No Bearer token needed, presumably uses internal token.



# List ARP entries for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/arp/list-arp-entries-for-a-site

sdx-api/spa/metrics.json post /arps/{site}
Lists ARP entries for the specified site with optional pagination. Requires `inventory:view` scope.



# Update an ARP entry
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/arp/update-an-arp-entry

sdx-api/spa/metrics.json put /arps/{site}/{arpEntry}
Allows updating group/alias for an ARP entry. Requires `inventory:update` scope.



# Get BGP usage/logs from last ~2 days
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/content/get-bgp-usagelogs-from-last-~2-days

sdx-api/spa/metrics.json get /bgp-report/{site}
Generates a BGP usage report for the site (TCP/UDP traffic captured). Possibly uses blackhole IP analysis. Requires `site` middleware.



# Get DNS usage/logs from last ~2 days
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/content/get-dns-usagelogs-from-last-~2-days

sdx-api/spa/metrics.json get /dns-report/{site}
Returns top categories, apps, source IPs from DNS logs. Possibly uses blackhole IP analysis. Requires `site` middleware.



# Get SNMP interface metrics
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/interfaces/get-snmp-interface-metrics

sdx-api/spa/metrics.json post /interfaces/{interface}/metrics
Returns detailed interface metric data within a specified date range. Requires `site` and `interface` resolution plus relevant scopes.



# (Internal) List site interfaces
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/interfaces/internal-list-site-interfaces

sdx-api/spa/metrics.json get /internal/interfaces/{site}
Same as /interfaces/{site}, but for internal use.



# (Internal) Summarized interface metrics
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/interfaces/internal-summarized-interface-metrics

sdx-api/spa/metrics.json post /internal/interfaces/{interface}/metrics
Calculates average and max in/out in MBps or similar for the date range. Possibly used by other microservices.



# List SNMP interfaces for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/interfaces/list-snmp-interfaces-for-a-site

sdx-api/spa/metrics.json get /interfaces/{site}
Returns all known SNMP interfaces on a site. Requires `site` middleware.



# Get 24h heartbeat or check-in data for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/mikrotikstats/get-24h-heartbeat-or-check-in-data-for-a-site

sdx-api/spa/metrics.json get /mikrotik-stats/{site}
Returns info about missed heartbeats from mikrotik checkins within the last 24 hours. Requires `site` middleware.



# Get last checkin time for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/mikrotikstats/get-last-checkin-time-for-a-site

sdx-api/spa/metrics.json get /last-seen/{site}
Returns how long ago the last MikrotikStats record was inserted. Requires `site` middleware.



# Get raw Mikrotik stats from the last 8 hours
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/mikrotikstats/get-raw-mikrotik-stats-from-the-last-8-hours

sdx-api/spa/metrics.json get /mikrotik-stats-all/{site}
Returns stats such as CPU load, memory for the last 8 hours. Requires `site` middleware.



# List syslog entries for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/syslog/list-syslog-entries-for-a-site

sdx-api/spa/metrics.json get /syslogs/{site}
Returns syslog data for a given site. Requires 'site' middleware and typically `inventory:view` scope or similar.



# Get ping stats for a WAN tunnel
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/get-ping-stats-for-a-wan-tunnel

sdx-api/spa/metrics.json post /wan-tunnels/{tunnel}/ping-stats
Retrieves a time-series of ping metrics for the specified WAN tunnel. Requires 'tunnel' middleware, plus date range input.



# Get tunnels ordered by average jitter or packet loss
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/get-tunnels-ordered-by-average-jitter-or-packet-loss

sdx-api/spa/metrics.json get /tunnel-order
Aggregates last 24h data from ping_stats and returns an array sorted by either 'mdev' or 'packet_loss'. Typically used to see worst/best tunnels. Requires user’s WAN data scope.



# (Internal) List WAN Tunnels for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/internal-list-wan-tunnels-for-a-site

sdx-api/spa/metrics.json get /wan-tunnels-int/{site}
Similar to /wan-tunnels/{site}, but does not require Bearer. Possibly uses an internal token or no auth. Returns 200 or 204 if no tunnels found.



# (Internal) Retrieve summarized ping stats for a tunnel
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/internal-retrieve-summarized-ping-stats-for-a-tunnel

sdx-api/spa/metrics.json post /wan-tunnels/{tunnel}/int-ping-stats
Given a site and tunnel, returns average or max stats in the date range. Possibly used by internal microservices.



# List WAN tunnels for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/list-wan-tunnels-for-a-site

sdx-api/spa/metrics.json get /wan-tunnels/{site}
Returns all WAN Tunnels associated with that site ID. Requires `site` middleware.



# Multi-tunnel or aggregated ping stats
Source: https://docs.sdx.altostrat.io/api-reference/spa/metrics/tunnels/multi-tunnel-or-aggregated-ping-stats

sdx-api/spa/metrics.json post /wan/ping-stats
Retrieves a chart-friendly data series for one or multiple tunnels. Possibly used by a front-end chart. This is a single endpoint returning timestamps and data arrays. Requires date range, optional tunnel list.



# Create a new notification group
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/create-a-new-notification-group

sdx-api/spa/notifications.json post /
Creates a group with name, schedule, topics, recipients, and sites. Requires `notification:create` scope.



# Delete a notification group
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/delete-a-notification-group

sdx-api/spa/notifications.json delete /{group}
Removes the group, its recipients, site relationships, and topic references. Requires `notification:delete` scope.



# Example Ably webhook endpoint
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/example-ably-webhook-endpoint

sdx-api/spa/notifications.json get /notifications/ably/hook
Used for testing. Returns request data. Does not require user scope.



# List all notification groups for the customer
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/list-all-notification-groups-for-the-customer

sdx-api/spa/notifications.json get /
Retrieves all groups belonging to the authenticated customer. Requires `notification:view` scope.



# Show a specific notification group
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/show-a-specific-notification-group

sdx-api/spa/notifications.json get /{group}
Retrieve the detail of one group by ID. Requires `notification:view` scope.



# Update a notification group
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/groups/update-a-notification-group

sdx-api/spa/notifications.json put /{group}
Update name, schedule, recipients, and other properties. Requires `notification:update` scope.



# List all topics
Source: https://docs.sdx.altostrat.io/api-reference/spa/notifications/topics/list-all-topics

sdx-api/spa/notifications.json get /topics
Returns all possible topics that can be attached to a notification group.



# Delete a generated SLA report
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-reports/delete-a-generated-sla-report

sdx-api/spa/reports.json delete /sla/reports/{id}
Deletes the JSON data object from S3 (and presumably the PDF). Requires `sla:run` scope.



# List generated SLA reports
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-reports/list-generated-sla-reports

sdx-api/spa/reports.json get /sla/reports
Lists recent SLA JSON results objects in S3 for the user. Requires `sla:run` scope to view generated reports.



# Create a new SLA schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/create-a-new-sla-schedule

sdx-api/spa/reports.json post /sla/schedules
Creates a new SLA report schedule object in DynamoDB and sets up CloudWatch event rules (daily/weekly/monthly). Requires `sla:create` scope.



# Delete an SLA schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/delete-an-sla-schedule

sdx-api/spa/reports.json delete /sla/schedules/{id}
Deletes a single SLA schedule from DynamoDB and removes CloudWatch events. Requires `sla:delete` scope.



# Get a single SLA schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/get-a-single-sla-schedule

sdx-api/spa/reports.json get /sla/schedules/{id}
Retrieves a single SLA schedule by UUID from DynamoDB. Requires `sla:view` scope.



# List all SLA schedules
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/list-all-sla-schedules

sdx-api/spa/reports.json get /sla/schedules
Fetches SLA reporting schedules from DynamoDB for the authenticated user. Requires `sla:view` scope.



# Manually run an SLA schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/manually-run-an-sla-schedule

sdx-api/spa/reports.json post /sla/schedules/{id}/run
Triggers a single SLA schedule to run now, with specified date range. Requires `sla:run` scope. This is done by posting `from_date` and `to_date` in the body.



# Update an SLA schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/reports/sla-schedules/update-an-sla-schedule

sdx-api/spa/reports.json put /sla/schedules/{id}
Updates a single SLA schedule and re-configures the CloudWatch event rule(s). Requires `sla:update` scope.



# Retrieve a specific schedule (internal)
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/internal/retrieve-a-specific-schedule-internal

sdx-api/spa/schedules.json get /internal/schedules/{schedule}
This route is for internal usage. It requires a special token in the
`X-Bearer-Token` header (or `Authorization: Bearer <token>`), validated
by the `internal` middleware.




# Create a new schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/schedules/create-a-new-schedule

sdx-api/spa/schedules.json post /schedules



# Delete an existing schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/schedules/delete-an-existing-schedule

sdx-api/spa/schedules.json delete /schedules/{schedule}



# List all schedules
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/schedules/list-all-schedules

sdx-api/spa/schedules.json get /schedules



# Retrieve a specific schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/schedules/retrieve-a-specific-schedule

sdx-api/spa/schedules.json get /schedules/{schedule}



# Update an existing schedule
Source: https://docs.sdx.altostrat.io/api-reference/spa/schedules/schedules/update-an-existing-schedule

sdx-api/spa/schedules.json put /schedules/{schedule}



# Generate RouterOS script via AI prompt
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/ai-generation/generate-routeros-script-via-ai-prompt

sdx-api/spa/scripts.json post /gen-ai
Calls an OpenAI model to produce a RouterOS script from the user’s prompt. Returns JSON with commands, error, destructive boolean, etc. Throttled to 5 requests/minute. Requires `script:create` scope.



# Create a new community script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/community-scripts/create-a-new-community-script

sdx-api/spa/scripts.json post /community-scripts
Registers a new script from a GitHub raw URL (.rsc) and optional .md readme URL. Automatically triggers background jobs to fetch code, parse README, and create an AI description.



# List community scripts
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/community-scripts/list-community-scripts

sdx-api/spa/scripts.json get /community-scripts
Returns a paginated list of community-contributed scripts with minimal info. No authentication scope is specifically enforced in code, but presumably behind `'auth'` or `'api'` guard.



# Raw readme.md content
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/community-scripts/raw-readmemd-content

sdx-api/spa/scripts.json get /community-scripts/{id}.md
Fetches README from GitHub and returns as text/plain, if `readme_url` is set.



# Raw .rsc content of a community script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/community-scripts/raw-rsc-content-of-a-community-script

sdx-api/spa/scripts.json get /community-scripts/{id}.rsc
Fetches the script content from GitHub and returns as text/plain.



# Show a single community script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/community-scripts/show-a-single-community-script

sdx-api/spa/scripts.json get /community-scripts/{id}
Provides script details including name, description, user info, repo info, etc.



# Authorize a scheduled script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/authorize-a-scheduled-script

sdx-api/spa/scripts.json put /scheduled/{scheduledScript}/authorize/{token}
Sets `authorized_at` if provided token matches `md5(id)`. Requires `script:authorize` scope. Fails if already authorized.



# Create a new scheduled script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/create-a-new-scheduled-script

sdx-api/spa/scripts.json post /scheduled
Requires `script:create` scope. Specifies a script body, description, launch time, plus sites and notifiable user IDs. Also sets whether backups should be made, etc.



# Delete or cancel a scheduled script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/delete-or-cancel-a-scheduled-script

sdx-api/spa/scripts.json delete /scheduled/{scheduledScript}
If script not authorized & not started, it's fully deleted. Otherwise sets `cancelled_at`. Requires `script:delete` scope.



# Immediately run the scheduled script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/immediately-run-the-scheduled-script

sdx-api/spa/scripts.json put /scheduled/{scheduledScript}/run
Requires the script to be authorized. Dispatches jobs to each site. Requires `script:run` scope.



# List all scheduled scripts
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/list-all-scheduled-scripts

sdx-api/spa/scripts.json get /scheduled
Lists scripts that are scheduled for execution. Requires `script:view` scope. Includes site relationships and outcome data.



# Request authorization (trigger notifications)
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/request-authorization-trigger-notifications

sdx-api/spa/scripts.json get /scheduled/{scheduledScript}/authorize
Sends a WhatsApp or other message to configured notifiables to authorize the script. Requires `script:update` scope.



# Run scheduled script test
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/run-scheduled-script-test

sdx-api/spa/scripts.json put /scheduled/{scheduledScript}/run-test
Sends the script to the configured `test_site_id` only. Requires `script:run` scope.



# Script execution progress
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/script-execution-progress

sdx-api/spa/scripts.json get /scheduled/{scheduledScript}/progress
Returns which sites are pending, which have completed, which have failed, etc. Requires `script:view` scope.



# Show a single scheduled script’s details
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/show-a-single-scheduled-script’s-details

sdx-api/spa/scripts.json get /scheduled/{scheduledScript}
Returns a single scheduled script with all relationships (sites, outcomes, notifications). Requires `script:view` scope.



# Update a scheduled script
Source: https://docs.sdx.altostrat.io/api-reference/spa/scripts/scheduled-scripts/update-a-scheduled-script

sdx-api/spa/scripts.json put /scheduled/{scheduledScript}
Edits a scheduled script’s fields, re-syncs sites and notifiables. Requires `script:update` scope.



# Create a new VPN instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/create-a-new-vpn-instance

sdx-api/spa/vpn.json post /instances
Provisions a new VPN instance, automatically deploying a server. Requires `vpn:create` scope.



# Delete a VPN instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/delete-a-vpn-instance

sdx-api/spa/vpn.json delete /instances/{instance}
Tears down the instance. Requires `vpn:delete` scope.



# Fetch bandwidth usage
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/fetch-bandwidth-usage

sdx-api/spa/vpn.json get /instances/{instance}/bandwidth
Returns the bandwidth usage metrics for the instance's primary server. Requires `vpn:view` scope.



# List all VPN instances
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/list-all-vpn-instances

sdx-api/spa/vpn.json get /instances
Returns a list of instances the authenticated user has created. Requires `vpn:view` scope.



# Show details for a single VPN instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/show-details-for-a-single-vpn-instance

sdx-api/spa/vpn.json get /instances/{instance}
Retrieves a single instance resource by its ID. Requires `vpn:view` scope.



# Update a VPN instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/instances/update-a-vpn-instance

sdx-api/spa/vpn.json put /instances/{instance}
Allows modifications to DNS, routes, firewall, etc. Requires `vpn:update` scope.



# Internal instance counts per customer
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/internal/internal-instance-counts-per-customer

sdx-api/spa/vpn.json post /vpn/internal/instance-counts
Used internally to retrieve aggregated peer or instance usage counts. Requires an internal token (not standard Bearer).



# Create a new peer on an instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/peers/create-a-new-peer-on-an-instance

sdx-api/spa/vpn.json post /instances/{instance}/peers
Adds a client peer or site peer to the instance. Requires `vpn:create` scope.



# Delete a peer
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/peers/delete-a-peer

sdx-api/spa/vpn.json delete /instances/{instance}/peers/{peer}
Removes a peer from the instance. Requires `vpn:delete` scope.



# List all peers under an instance
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/peers/list-all-peers-under-an-instance

sdx-api/spa/vpn.json get /instances/{instance}/peers
Lists all VPN peers (clients or site-peers) attached to the specified instance. Requires `vpn:view` scope.



# Show a single peer
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/peers/show-a-single-peer

sdx-api/spa/vpn.json get /instances/{instance}/peers/{peer}
Returns detail about a single peer for the given instance. Requires `vpn:view` scope.



# Update a peer
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/peers/update-a-peer

sdx-api/spa/vpn.json put /instances/{instance}/peers/{peer}
Update subnets, route-all, etc. Requires `vpn:update` scope.



# List available server regions
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/servers/list-available-server-regions

sdx-api/spa/vpn.json get /servers/regions
Retrieves a list of possible Vultr (or other provider) regions where a VPN instance can be deployed.



# Server build complete callback
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/servers/server-build-complete-callback

sdx-api/spa/vpn.json get /vpn/servers/{server}/heartbeat
Called by the server itself upon final provisioning. Signed route with short TTL. Updates IP, sets DNS records, etc.



# Get site subnets
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/sites/get-site-subnets

sdx-api/spa/vpn.json get /site/{id}/subnets
Retrieves potential subnets from the specified site (used for configuring a site-to-site VPN peer).



# Download WireGuard config as a QR code
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/vpn-client-tokens/download-wireguard-config-as-a-qr-code

sdx-api/spa/vpn.json get /vpn/instances/{instance}/peers/{peer}.svg
Returns the config in a QR code SVG. Signed route with short TTL. Requires the peer to be a client peer.



# Download WireGuard config file
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/vpn-client-tokens/download-wireguard-config-file

sdx-api/spa/vpn.json get /vpn/instances/{instance}/peers/{peer}.conf
Returns the raw WireGuard client config for a peer (type=client). Signed route with short TTL. Requires the peer to be a client peer.



# Retrieve ephemeral client config references
Source: https://docs.sdx.altostrat.io/api-reference/spa/vpn/vpn-client-tokens/retrieve-ephemeral-client-config-references

sdx-api/spa/vpn.json get /vpn/client
Uses a client token to retrieve a short-lived reference for WireGuard config or QR code download. The token is validated by custom client-token auth. Returns a JSON with config_file URL, QR code URL, etc.



# Create WAN failover for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/failover/create-wan-failover-for-a-site

sdx-api/spa/wan-failover.json post /{site_id}/failover
Sets up a new failover resource for the site if not already present, plus some default tunnels. Requires `wan:create` scope.



# Delete WAN failover
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/failover/delete-wan-failover

sdx-api/spa/wan-failover.json delete /{site_id}/failover/{id}
Deletes failover from DB, tears down related tunnels, and unsubscribes. Requires `wan:delete` scope.



# Get failover info for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/failover/get-failover-info-for-a-site

sdx-api/spa/wan-failover.json get /{site_id}/failover
Retrieves the failover record for a given site, if any. Requires `wan:view` scope.



# List failover services for current user
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/failover/list-failover-services-for-current-user

sdx-api/spa/wan-failover.json get /service-counts
Returns minimal array of failover objects (id, site_id) for user. Possibly used to see how many failovers they have.



# Set tunnel priorities for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/failover/set-tunnel-priorities-for-a-site

sdx-api/spa/wan-failover.json post /{site_id}/failover/priorities
Updates the `priority` field on each tunnel for this failover. Requires `wan:update` scope.



# Update tunnel gateway (router callback)
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/gateway/update-tunnel-gateway-router-callback

sdx-api/spa/wan-failover.json post /{site_id}/tunnel/{tunnel_id}/gateway
Allows a router script to update the gateway IP after DHCP/PPP changes. Typically uses X-Bearer-Token or similar, not standard BearerAuth. No standard scope enforced.



# List count of failovers per customer
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/services/list-count-of-failovers-per-customer

sdx-api/spa/wan-failover.json get /services_all
Returns an object mapping customer_id => count (how many site failovers).



# List site IDs for a customer (failover services)
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/services/list-site-ids-for-a-customer-failover-services

sdx-api/spa/wan-failover.json get /services/{customer_id}
Returns an array of site IDs that have failover records for the given customer.



# List tunnels for a site (unauth? or partial auth?)
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/services/list-tunnels-for-a-site-unauth?-or-partial-auth?

sdx-api/spa/wan-failover.json get /services/{site_id}/tunnels
Returns array of Tunnels for the given site if any exist. Possibly used by external or different auth flow.



# Create a new tunnel
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/create-a-new-tunnel

sdx-api/spa/wan-failover.json post /{site_id}/tunnel
Creates a new WAN tunnel record for the site. Requires `wan:create` scope.



# Delete a tunnel
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/delete-a-tunnel

sdx-api/spa/wan-failover.json delete /{site_id}/tunnel/{id}
Removes the tunnel from the DB and notifies system to remove config. Requires `wan:delete` scope.



# Detect eligible gateways for an interface
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/detect-eligible-gateways-for-an-interface

sdx-api/spa/wan-failover.json post /{site_id}/tunnel/gateways
Find potential gateway IP addresses for the given interface. Requires `wan:view` scope.



# Get router interfaces
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/get-router-interfaces

sdx-api/spa/wan-failover.json get /{site_id}/tunnel/interfaces
Lists valid router interfaces for a site. Possibly from router print. Requires `wan:view` scope.



# List all tunnels for current user
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/list-all-tunnels-for-current-user

sdx-api/spa/wan-failover.json get /tunnels
Returns all Tunnels for the authenticated user’s customer_id. Requires `wan:view` scope.



# List tunnels for a site
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/list-tunnels-for-a-site

sdx-api/spa/wan-failover.json get /{site_id}/tunnel
Returns all Tunnels associated with this site’s failover. Requires `wan:view` scope.



# Show a single tunnel
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/show-a-single-tunnel

sdx-api/spa/wan-failover.json get /{site_id}/tunnel/{id}
Returns details of the specified tunnel. Requires `wan:view` scope.



# Update tunnel properties
Source: https://docs.sdx.altostrat.io/api-reference/spa/wan-failover/tunnel/update-tunnel-properties

sdx-api/spa/wan-failover.json put /{site_id}/tunnel/{id}
Modifies name, gateway, interface, or SLA references on the tunnel. Requires `wan:update` scope.



# Test a Slack or MS Teams webhook
Source: https://docs.sdx.altostrat.io/api-reference/spa/webhooks/integrations/test-a-slack-or-ms-teams-webhook

sdx-api/spa/webhooks.json post /test
Sends a test message to the specified Slack or MS Teams webhook URL. **Requires** valid JWT authentication with appropriate scope (e.g., `webhook:test` or similar).



# Content Filtering
Source: https://docs.sdx.altostrat.io/core-concepts/content-filtering

Manage and restrict access to undesirable or harmful web content across your network using DNS-based policies.

Altostrat's **Content Filtering** service helps you enforce network usage standards by allowing you to **block or restrict** access to websites and online services based on predefined categories (like adult content, streaming media, or social networking). This ensures network usage aligns with your organization's **Acceptable Use Policies**.

The filtering is primarily achieved through DNS manipulation; when a site is assigned a Content Filtering policy, its DNS requests are typically routed through Altostrat's filtering nameservers, which block queries to prohibited domains based on the policy rules.

## Key Features

* **Category-Based Blocking**: Efficiently block large groups of websites based on content categories (e.g., Gambling, Malware, Phishing).
* **SafeSearch & Restricted Mode**: Enforce SafeSearch for Google and Bing, and activate YouTube's Restricted Mode to filter explicit search results and videos.
* **Filtering Avoidance Prevention**: Block access to known DNS proxies, anonymizers, and VPN services commonly used to circumvent filters.
* **Custom Allow/Block Lists**: Define specific domains to always allow (whitelist) or always block (blacklist), overriding category rules.
* **Detailed Traffic Analytics**: Review logs and statistics to understand DNS query patterns and identify blocked or allowed domains/categories.

***

## Creating a Content Filter Policy

Follow these steps to set up a new policy:

<Steps>
  <Step title="Navigate to Content Filtering Policies">
    From your Altostrat **Dashboard**, go to **Policies → Content Filtering**. Click **Add** or **+ New** to initiate the creation process.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-dark.jpg" />
    </Frame>

    Click **Add** or **+ New** again on the policy list page.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Configure Policy Settings">
    Provide a clear **Policy Name** (e.g., "Standard Employee Policy", "Guest Network Restrictions").

    * **Choose Categories**: Select the content categories you wish to block. You can expand groups to select specific sub-categories. ([View available categories via API](/api-reference/spa/bgp-dns-filter/categories-&-applications/list-categories-and-top-applications)).
    * **SafeSearch Settings**: Enable SafeSearch enforcement for major search engines and set YouTube's Restricted Mode as needed. ([View SafeSearch options via API](/api-reference/spa/bgp-dns-filter/categories-&-applications/list-safe-search-options)).
    * **Custom Domains**: Add specific domains to your **Allow List** or **Block List**.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save and Apply the Policy">
    Click **Save** or **Add** to create the policy. To apply it to one or more sites:

    * Navigate to your **Sites** list.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-dark.jpg" />
    </Frame>

    * Select a target site.
    * In the site's configuration settings, locate the **Content Filter Policy** section and choose your newly created policy from the dropdown. ([Assign policy to site via API](/api-reference/spa/bgp-dns-filter/dns-policy/assign-dns-policy-to-site)).

    <Note>
      Allow a few moments for the policy changes to propagate to the router's configuration. If the router is behind NAT, ensure the [Management VPN](/management/management-vpn) is active and correctly configured for Altostrat to push the update.
    </Note>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step3-dark.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Editing a Content Filtering Policy

To modify an existing policy:

<Steps>
  <Step title="Navigate to Content Filtering Policies">
    Go to **Policies → Content Filtering** in the Altostrat portal.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select the Policy to Edit">
    Click on the name of the policy you wish to update. This will open its configuration settings.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Editing-CPF-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Editing-CPF-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Update Settings">
    Modify the policy as needed: toggle categories, adjust SafeSearch settings, or manage custom domain lists.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Editing-CPF-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Editing-CPF-Step3-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save Changes">
    Click **Save** or **Update**. The changes will automatically propagate to all sites currently assigned this policy. ([Update policy via API](/api-reference/spa/bgp-dns-filter/dns-policy/update-dns-policy)).
  </Step>
</Steps>

***

## Removing a Content Filtering Policy

<Warning>
  Deleting a policy also removes its configuration from any sites currently using it. These sites will revert to default DNS settings (no filtering) or fall back to another assigned policy if applicable. Ensure this is the intended outcome before proceeding.
</Warning>

<Steps>
  <Step title="Navigate to Content Filtering Policies">
    Go to **Policies → Content Filtering**. Locate the policy you intend to remove.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Content-Filtering-Step1_1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Delete the Policy">
    Select the policy, then click the **Trash** or **Remove** icon associated with it. Confirm your decision when prompted. ([Delete policy via API](/api-reference/spa/bgp-dns-filter/dns-policy/delete-dns-policy)).

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Deleting-CPF-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Content-Filtering/Deleting-CPF-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

To **completely disable** Content Filtering for specific sites without deleting the policy itself, navigate to the site's configuration and either assign a different policy (or no policy) or remove the site's association with the current policy. ([Remove policy from site via API](/api-reference/spa/bgp-dns-filter/dns-policy/remove-dns-policy-from-site)).

***

## Programmatic Management (API)

Content Filtering policies and their assignments can also be managed programmatically using the Altostrat API. Key endpoints include:

* **Create Policy**: `POST /policy` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/create-dns-policy))
* **List Policies**: `GET /policy` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/list-dns-policies))
* **Get Policy Details**: `GET /policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/get-dns-policy-details))
* **Update Policy**: `PUT /policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/update-dns-policy))
* **Delete Policy**: `DELETE /policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/delete-dns-policy))
* **Assign Policy to Site**: `POST /{site_id}` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/assign-dns-policy-to-site))
* **Remove Policy from Site**: `DELETE /{site_id}` ([API Docs](/api-reference/spa/bgp-dns-filter/dns-policy/remove-dns-policy-from-site))

Refer to the specific API documentation for request/response details and required permissions.

***

## Best Practices

* **Start Conservatively, Refine Gradually**: Begin by blocking only the most critical or universally unacceptable content categories. Monitor logs and user feedback, then refine the policy by adding more categories or creating specific domain exceptions (allow/block lists) as needed.
* **Test Policies**: Before applying a new or modified policy broadly, test it on a non-critical site or segment to ensure it behaves as expected and doesn't unintentionally block necessary resources.
* **Regularly Review Logs**: Periodically examine DNS query logs and filtering statistics to understand traffic patterns, identify frequently blocked sites (which might indicate policy gaps or user needs), and ensure the policy remains effective.
* **Combine with Other Security Layers**: Content Filtering is one part of a layered security strategy. Complement it by enabling features like [Security Essentials](/core-concepts/security-essentials) for threat intelligence feeds and firewall rules.
* **Communicate Policies to Users**: Ensure employees, guests, or other network users are aware of the Acceptable Use Policy and understand *why* certain content might be restricted. This minimizes confusion and support requests.


# Control Plane
Source: https://docs.sdx.altostrat.io/core-concepts/control-plane

Configure inbound management services (WinBox, SSH, API) and firewall rules at scale in Altostrat.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Control-Plane-Black.png" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Control-Plane-White.png" />
</Frame>

Altostrat's **Control Plane Policies** define how MikroTik devices handle inbound connections for critical management services such as **WinBox**, **SSH**, and **API**. By centralizing firewall rules and trusted networks, you ensure consistent security across all routers under a given policy.

## Default Policy

When you sign up, Altostrat automatically creates a **Default Control Plane Policy** for basic protection. This policy includes:

* **Trusted Networks** (e.g., private IP ranges like 10.x, 192.168.x)
* **WinBox**, **API**, and **SSH** enabled on default ports
* **Custom Input Rules** toggled on or off

<Note>
  The IP address `154.66.115.255/32` may be added by default as a trusted address for Altostrat's Management API.
</Note>

## Creating a Control Plane Policy

<Steps>
  <Step title="Navigate to Control Plane Policies">
    Under <strong>Policies</strong>, select <strong>Control Plane</strong>. You'll see a list of existing policies, including the default one.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-dark.jpg" />
    </Frame>

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Add a New Policy">
    Click <strong>+ Add Policy</strong>. Give your policy a descriptive name (e.g., "Strict Admin Access").

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Configure Trusted Networks">
    Add or remove IP addresses or CIDR ranges that you consider trusted. For example: <code>192.168.0.0/16</code>.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step3-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Toggle Custom Input Rules">
    Decide whether your MikroTik firewall input rules should take precedence. If set to <strong>ON</strong>, your custom rules will be applied first.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step4-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step4-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Enable/Disable Services">
    Under <strong>IP Services</strong>, specify ports for WinBox, SSH, and API. These services must remain <strong>enabled</strong> if you plan to manage devices via Altostrat's API.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step5-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step5-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Sites">
    Assign the policy to specific sites if desired. You can also assign it later. Click <strong>Add</strong> to finalize.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step6-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step6-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Editing a Control Plane Policy

<Steps>
  <Step title="Locate the Policy">
    Navigate to <strong>Policies → Control Plane</strong>. Click on the policy to open its settings.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-dark.jpg" />
    </Frame>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Editing-Control-Plane-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Editing-Control-Plane-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Adjust Trusted Networks or Services">
    Add or remove CIDRs, toggle whether Custom Input Rules override Altostrat's default drop rules, and modify ports for WinBox, API, and SSH.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Editing-Control-Plane-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Editing-Control-Plane-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Apply Changes">
    Changes will propagate automatically to any sites using this policy. Allow a short period for routers to update.
  </Step>
</Steps>

## Removing a Control Plane Policy

<Warning>
  Deleting a policy from an active site may disrupt management access if no other policy is assigned.
</Warning>

<Steps>
  <Step title="Find the Policy">
    In <strong>Policies → Control Plane</strong>, locate the policy you wish to remove.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Creating-Control-Plane-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Delete the Policy">
    Click the <strong>Trash</strong> icon and confirm the action. If any routers depend on this policy for inbound admin services, assign them another policy first.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Deleting-Control-Plane-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Control-Plane/Deleting-Control-Plane-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Best Practices

* **Maintain Essential Services**: Keep WinBox, SSH, and API enabled if you plan to manage devices through Altostrat.
* **Limit Trusted Networks**: Restrict access to reduce exposure.
* **Regular Review**: Review and update policies as your network changes.
* **Security Layering**: Combine with [Security Essentials](/core-concepts/security-essentials) for a comprehensive security approach.


# Notification Groups
Source: https://docs.sdx.altostrat.io/core-concepts/notification-groups

Define groups of users, schedules, and alert types for more targeted notifications.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Notification-Group-Black.png" />

  <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Notification-Group-White.png" />
</Frame>

A **Notification Group** is a way to organize who receives alerts, **when** they receive them, and for **which events**. This helps ensure relevant teams get the notifications they need while avoiding unnecessary notifications for others.

## Setting Up a Notification Group

<Steps>
  <Step title="Access Notification Groups">
    Go to <strong>Notifications → Notification Groups</strong> in the Altostrat Portal.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Add a New Group">
    Click <strong>Add</strong> or <strong>+ New</strong> to create a new Notification Group. Provide a <strong>Group Name</strong>.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step2-dark.jpg" />
    </Frame>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step2_2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step2_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Users or Roles">
    Choose who should receive alerts—either individual users or an entire role (e.g., "NOC Team"). Only selected users will receive notifications tied to this group.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step3-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step3-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Define a Business Hours Policy">
    If desired, link a policy specifying time windows for sending alerts (to reduce off-hours messages).

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step4-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step4-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Pick Notification Topics">
    Select which types of notifications are relevant (e.g., <em>Heartbeat Failures</em>, <em>Security Alerts</em>, <em>WAN Failover</em>).

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step5-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step5-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Assign to Sites (Optional)">
    If alerts should only apply to specific sites, limit them here. Otherwise, the group will cover all sites by default.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step6-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step6-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save Group">
    Confirm your settings. The new group will now be active.
  </Step>
</Steps>

***

## Editing a Notification Group

<Steps>
  <Step title="Find the Group">
    Under <strong>Notifications → Notification Groups</strong>, locate the group you want to modify.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-dark.jpg" />
    </Frame>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Change Settings">
    Adjust the group's name, add or remove users, modify the Business Hours Policy, or expand/restrict topics.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Auto-Save">
    Most changes save automatically. Users may need to log out and log back in to see updates in some cases.
  </Step>
</Steps>

***

## Removing a Notification Group

<Warning>
  Deleting a group means its members will no longer receive those alerts. Ensure critical notifications are covered by another group if needed.
</Warning>

<Steps>
  <Step title="Open Notification Groups">
    In <strong>Notifications → Notification Groups</strong>, select the group to remove.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Creating-Notification-Group-Step1-dark.jpg" />
    </Frame>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Editing-Notification-Group-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Delete">
    Click the <strong>Trash</strong> icon. Confirm your choice in the dialog.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Deleting-Notification-Group-Step2-light.jpg" />

      <img className="hidden dark:block" height="500" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notification-Group/Deleting-Notification-Group-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

If the group was tied to certain **Business Hours Policies** or **Alert Topics**, you might need to reassign them to another group to maintain coverage.

***

## Tips & Best Practices

* **Segment Based on Function**: Create separate groups for Security Teams, NOC Teams, Management, etc.
* **Use Business Hours Policies**: Reduce alert fatigue by only notifying off-hours for critical events.
* **Review Groups Regularly**: Ensure each group's membership and topics remain relevant.
* **Combine with Integrations**: Forward alerts to Slack or Microsoft Teams if needed—see [Integrations](/integrations/integrations-overview).


# Notifications
Source: https://docs.sdx.altostrat.io/core-concepts/notifications

Define, manage, and route alerts for important network events in Altostrat.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notifications/Notifications-Black.png" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Notifications/Notifications-White.png" />
</Frame>

Altostrat **Notifications** keep you informed about key events—like **Network Outages**, **SLA Breaches**, and **Security Issues**—so you can react quickly. Customize notifications to ensure the right teams or individuals get the right alerts at the right time.

## Why Notifications Matter

* **Proactive Issue Management:**
  Address potential problems before they escalate into major outages.
* **Improved Network Uptime:**
  Quick response to alerts shortens downtime.
* **Enhanced Security:**
  Security-related notifications highlight suspicious activity, enabling quick risk mitigation.
* **Customizable:**
  Assign notifications to specific users or groups based on their roles.

## Notification Types

Here are common notifications sent by Altostrat:

| **Type**                | **Description**                                                                    |
| ----------------------- | ---------------------------------------------------------------------------------- |
| **SLA Reports**         | Alerts you when agreed Service Level Agreements (uptime, latency) aren't met       |
| **Heartbeat Failures**  | Informs administrators when a device stops sending health signals                  |
| **WAN Failover Events** | Indicates connectivity issues or automatic failover events that affect the network |
| **Security Alerts**     | Notifies you about malicious IP blocks, intrusion attempts, or suspicious traffic  |

***

## Setting Up Notifications

{/* <Steps>
    <Step title="Navigate to Notifications">
        From your Altostrat Dashboard, go to the <strong>Notifications</strong> section. This page displays an overview of existing notification rules.
    </Step>
    <Step title="Create or Edit a Notification Rule">
        Click <strong>Add</strong> or <strong>New Notification</strong> to create a rule. Define conditions such as <em>Fault Type</em>, <em>SLA Breach</em>, or <em>Security Trigger</em>.
    </Step>
    <Step title="Choose Recipients">
        Select specific users, roles, or <strong>Notification Groups</strong> who should receive these alerts. You can configure delivery methods including <em>Email</em> or <em>SMS</em> (subject to [Supported SMS Regions](/resources/supported-sms-regions)).
    </Step>
    <Step title="Save & Verify">
        Review and confirm the notification settings. If possible, test by simulating a trigger (e.g., forcing a Heartbeat Failure). Recipients should receive a test alert when everything is configured correctly.
    </Step>
  </Steps> */}

<Steps>
  <Step title="Guide">
    You can follow this guide in order to set up your notifications.

    [Setting Up Notitications](/core-concepts/notification-groups)
  </Step>
</Steps>

## Customizing Alerts

* **Business Hour Policies:** Receive notifications only during specified times
* **Targeted Alerts:** Direct SLA or Security notifications to relevant teams
* **Limit Redundancy:** Prevent notification fatigue by avoiding duplicate messages

***

## Best Practices

* **Review Regularly:** Ensure your notification settings align with current organizational needs
* **Use Notification Groups:** Organize recipients by function (e.g., NOC Team, Security Team)
* **Integrate with Other Tools:** Connect notifications with external services (e.g., Slack, Microsoft Teams) for streamlined workflows

If you experience issues or need to configure advanced behavior, consult the [Notification Groups](/core-concepts/notification-groups) page or review the [Orchestration Log](/management/orchestration-log) for troubleshooting assistance.


# Roles & Permissions
Source: https://docs.sdx.altostrat.io/core-concepts/roles-and-permissions

Control user access levels in Altostrat SDX using roles, which group granular permission scopes for accessing resources and performing actions via the UI and API.

# Roles & Permissions in Altostrat SDX

Altostrat SDX uses a flexible Role-Based Access Control (RBAC) system to manage user capabilities. **Permissions** (also referred to as **Scopes**) define the ability to perform specific actions (like viewing billing info or deleting a site), while **Roles** group these permissions together. Roles are then assigned to users **within the context of a specific Team**, determining what each user can do within that team's resources.

## Key Concepts

* **Permissions (Scopes):** Fine-grained strings representing specific actions, typically in the format `resource:action` (e.g., `site:view`, `billing:update`, `api:create`). These scopes directly control access to API endpoints and influence what is visible or actionable in the user interface.
* **Roles:** Collections of permissions. Assigning a role to a user grants them all the permissions contained within that role for the team they are assigned to.
* **System Roles:** Predefined roles with common permission sets provided by Altostrat SDX (e.g., Owner, Administrator, potentially a read-only or member role). System roles usually cannot be deleted or fundamentally altered.
* **Custom Roles:** Roles you create and manage within your team, allowing you to tailor access precisely by selecting specific permissions.
* **Team Context:** Role assignments are specific to a Team. A user might be an Administrator in one team but only have view permissions in another.

## Permission Scope Reference

Permissions grant access to specific functionalities. Here is a breakdown of common permission scopes grouped by area, based on available API actions:

<AccordionGroup>
  <Accordion title="User & Authentication Management">
    | **Scope**         | **Explanation**                                                |
    | ----------------- | -------------------------------------------------------------- |
    | `user:view`       | View user details within the team.                             |
    | `user:create`     | Create new users and add them to the team.                     |
    | `user:update`     | Update user profile details and role assignments.              |
    | `user:delete`     | Remove users from the team/system (restrictions apply).        |
    | *(Implied/OAuth)* | Manage own 2FA settings (enable, disable, confirm, get codes). |
    | *(Implied/OAuth)* | View own user info.                                            |
  </Accordion>

  <Accordion title="Team Management">
    | **Scope**              | **Explanation**                                   |
    | ---------------------- | ------------------------------------------------- |
    | `team:create`          | Create new teams within the organization.         |
    | `team:update`          | Update team details (name, site limit).           |
    | `team:delete`          | Delete teams (restrictions apply).                |
    | `teams:invite-users`   | Invite users to join a team; cancel invitations.  |
    | `teams:remove-users`   | Remove members from a team (cannot remove owner). |
    | *(Implied/Membership)* | List teams, view team details, members, invites.  |
    | *(Implied/Membership)* | Switch active team context.                       |
  </Accordion>

  <Accordion title="Roles & API Credentials">
    | **Scope**        | **Explanation**                                             |
    | ---------------- | ----------------------------------------------------------- |
    | `role:view`      | View available roles (system & custom) and assigned scopes. |
    | `role:create`    | Create new custom roles for the team.                       |
    | `role:update`    | Update custom team roles (name, assigned scopes).           |
    | `role:delete`    | Delete custom team roles (if unassigned).                   |
    | `api:view`       | View team API credentials (names, IDs, usage).              |
    | `api:create`     | Create new API credentials for the team.                    |
    | `api:update`     | Update API credential details (name, expiry).               |
    | `api:delete`     | Delete/revoke API credentials for the team.                 |
    | *(Implied/Auth)* | List all available permission scopes.                       |
  </Accordion>

  <Accordion title="Billing Management">
    | **Scope**                                                                       | **Explanation**                                                                           |
    | ------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |
    | `billing:view`                                                                  | View billing account details, payment methods, tax IDs, invoices, subscription overview,  |
    | pricing, upcoming invoice, supported Tax ID types.                              |                                                                                           |
    | `billing:update`                                                                | Update billing account, manage payment methods (add, set default, delete), manage tax IDs |
    | (add, delete), manage subscriptions (create, update quantity/interval, cancel). |                                                                                           |
  </Accordion>

  <Accordion title="Site & Device Management (SDX / SPA API)">
    | **Scope**          | **Explanation**                                                      |
    | ------------------ | -------------------------------------------------------------------- |
    | `site:view`        | View site details, list sites, view uptime, versions, recent sites.  |
    | `site:create`      | *(Primarily internal/adoption flow)* Create site records.            |
    | `site:update`      | Update site details (name, address, timezone etc).                   |
    | `site:delete`      | Mark a site for deletion.                                            |
    | `site:action`      | Perform specific actions on a site (e.g., reboot).                   |
    | `job:view`         | View job history and details for a site.                             |
    | `job:create`       | Create asynchronous jobs (scripts/commands) for a site.              |
    | `job:delete`       | Delete *pending* jobs for a site.                                    |
    | `backup:view`      | List backups, view backup content, view diffs, view subnets.         |
    | `backup:create`    | Request a new backup to be taken for a site.                         |
    | `inventory:view`   | View network inventory like ARP tables, syslog, possibly interfaces. |
    | `inventory:update` | Update metadata associated with inventory items (e.g., ARP alias).   |
    | `logs:view`        | View system log events from CloudWatch.                              |
    | `script:create`    | Create scheduled scripts, generate scripts via AI.                   |
    | `script:view`      | View scheduled scripts and execution progress.                       |
    | `script:update`    | Update scheduled scripts, request authorization.                     |
    | `script:delete`    | Delete or cancel scheduled scripts.                                  |
    | `script:run`       | Immediately run or test a scheduled script.                          |
    | `script:authorize` | Authorize a scheduled script for execution.                          |
    | *(Implied/UI)*     | List community scripts and view their details.                       |
  </Accordion>

  <Accordion title="Networking Services (VPN, WAN, Elastic IP, CPF)">
    | **Scope**                 | **Explanation**                                |
    | ------------------------- | ---------------------------------------------- |
    | `vpn:view`                | View VPN instances and peers.                  |
    | `vpn:create`              | Create VPN instances and peers.                |
    | `vpn:update`              | Update VPN instances and peers.                |
    | `vpn:delete`              | Delete VPN instances and peers.                |
    | `wan:view`                | View WAN failover configurations and tunnels.  |
    | `wan:create`              | Create WAN failover services and tunnels.      |
    | `wan:update`              | Update WAN failover tunnels and priorities.    |
    | `wan:delete`              | Delete WAN failover services and tunnels.      |
    | `elasticip:view`          | List assigned Elastic IPs and managed subnets. |
    | `elasticip:create`        | Assign new Elastic IPs.                        |
    | `elasticip:update`        | Reset RADIUS password, update PTR records.     |
    | `elasticip:delete`        | Release assigned Elastic IPs.                  |
    | `cpf:view`                | List Control Plane policies.                   |
    | `cpf:create`              | Create Control Plane policies.                 |
    | `cpf:update`              | Update Control Plane policies, assign sites.   |
    | `cpf:delete`              | Delete Control Plane policies.                 |
    | `apicredentials:view`     | View site API credentials (CPF).               |
    | `apicredentials:create`   | Rotate/create site API credentials (CPF).      |
    | `transientaccess:view`    | View transient access sessions.                |
    | `transientaccess:create`  | Create transient access sessions (Winbox/SSH). |
    | `transientaccess:delete`  | Revoke transient access sessions.              |
    | `transientforward:view`   | View transient port forwards.                  |
    | `transientforward:create` | Create transient port forwards.                |
    | `transientforward:delete` | Revoke transient port forwards.                |
  </Accordion>

  <Accordion title="Security Services (Content Filter, Threat Feeds, CVE)">
    | **Scope**              | **Explanation**                                                        |
    | ---------------------- | ---------------------------------------------------------------------- |
    | `contentfilter:view`   | View DNS & BGP/DNR policies, categories, apps, assigned sites/tunnels. |
    | `contentfilter:create` | Create DNS & BGP/DNR policies.                                         |
    | `contentfilter:update` | Update DNS & BGP/DNR policies, assign/unassign from sites/tunnels.     |
    | `contentfilter:delete` | Delete DNS & BGP/DNR policies (if unassigned).                         |
    | `cve:view`             | View CVE scan schedules and scan results.                              |
    | `cve:create`           | Create new CVE scan schedules.                                         |
    | `cve:update`           | Update CVE scan schedules, start/stop scans manually.                  |
    | `cve:delete`           | Delete CVE scan schedules.                                             |
  </Accordion>

  <Accordion title="Reporting & Notifications">
    | **Scope**             | **Explanation**                                                            |
    | --------------------- | -------------------------------------------------------------------------- |
    | `sla:view`            | View SLA report schedules.                                                 |
    | `sla:create`          | Create new SLA report schedules.                                           |
    | `sla:update`          | Update SLA report schedules.                                               |
    | `sla:delete`          | Delete SLA report schedules.                                               |
    | `sla:run`             | Manually run SLA reports, view/delete generated reports.                   |
    | `notification:view`   | View notification groups.                                                  |
    | `notification:create` | Create notification groups.                                                |
    | `notification:update` | Update notification groups.                                                |
    | `notification:delete` | Delete notification groups.                                                |
    | `webhook:test`        | Test webhook integrations (Slack, Teams).                                  |
    | `fault:view`          | View fault history and details.                                            |
    | `fault:create`        | *(Implied)* Generate fault tokens (might require view or specific create). |
  </Accordion>
</AccordionGroup>

*Note: For a definitive list of all available permission scopes, refer to the [List Available Scopes API endpoint](/api-reference/spa/authentication/roles-&-permissions/list-available-scopes). Specific scope requirements are also detailed in the documentation for each API endpoint.*

## Creating a Role

Follow these steps to create a custom role within your currently active team:

<Steps>
  <Step title="Navigate to Roles & Permissions">
    In the Altostrat SDX Dashboard, go to **Settings → Roles & Permissions**. You will see a list of existing system
    and custom roles for your current team.

    {/* Image: Screenshot showing the Roles & Permissions list page */}

    <Frame caption="Roles & Permissions main view listing existing roles.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Start Creating a New Role">
    Click the **+ Add** button. A form will appear to define the new role. Enter a descriptive name (e.g., "NOC
    Level 1", "Billing Manager") that clearly indicates the role's purpose.

    {/* Image: Screenshot showing the 'Add Role' modal or form with the name field highlighted. */}

    <Frame caption="Entering the name for the new custom role.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Assign Permissions (Scopes)">
    Scroll through the list of available permissions, grouped by category. Select the checkboxes corresponding to
    the **scopes** (e.g., `site:view`, `billing:update`) you want to grant to this role.

    {/* Image: Screenshot showing the permission selection part of the form, with some checkboxes ticked. */}

    <Frame caption="Selecting specific permission scopes like 'site:view' and 'billing:view'.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step2-light.jpg" />

      {/* Re-use edit image if applicable */}

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step2-dark.jpg" />

      {/* Re-use edit image if applicable */}
    </Frame>
  </Step>

  <Step title="Save the Role">
    Once you have selected all the desired permissions, click the **Save** button. The new custom role will be
    created and appear in the list, ready to be assigned to users within the team. (This typically corresponds to a
    `POST` [/team\_roles](/api-reference/spa/authentication/roles-&-permissions/create-team-role) API call).

    {/* Image: Screenshot showing the saved role in the list or a success message. */}

    <Frame caption="The newly created role saved and appearing in the list.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step3-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Editing a Role

You can modify the name and assigned permissions of custom roles. System roles typically cannot be edited.

<Steps>
  <Step title="Select the Role to Edit">
    Navigate to **Settings → Roles & Permissions**. Find the custom role you wish to modify in the list and click on
    its name or an associated 'Edit' icon.

    {/* Image: Screenshot showing the list of roles with one highlighted or an edit icon pointed out. */}

    <Frame caption="Clicking on the 'NOC Ops' role to edit its permissions.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Modify Name or Permissions">
    In the role editing form, you can change the role's name and adjust the assigned permissions (**scopes**) by
    selecting or deselecting the checkboxes.

    {/* Image: Screenshot of the role editing form with permissions being changed. */}

    <Frame caption="Adding the 'site:action' scope and removing 'team:delete' scope from the role.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save Changes">
    Click the **Update** or **Save** button to apply your modifications. All users currently assigned this role
    within the team will inherit the updated set of permissions. (This corresponds to a `PUT` [/team\_roles/{role}](/api-reference/spa/authentication/roles-&-permissions/update-team-role)
    API call). Users might need to refresh their session (e.g., log out and back in) for changes to take full
    effect.

    {/* Image: Screenshot showing the confirmation or the updated role list. */}

    <Frame caption="Saving the updated role permissions.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step3-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Deleting a Role

You can only delete *custom* roles. Deleting a role cannot be undone.

<Warning>
  Deleting a custom role will immediately revoke all its associated permissions from any users currently assigned that
  role within the team. Ensure users have alternative roles if continued access is needed. You generally **cannot**
  delete a role if it is currently assigned to any users within the team.
</Warning>

<Steps>
  <Step title="Locate the Custom Role">
    Go to **Settings → Roles & Permissions**. Find the custom role you want to remove from the list. System roles
    will typically not have a delete option.

    {/* Image: Use Creating-Role-Step1 image */}

    <Frame caption="Identifying the custom role 'Temporary Access' to be deleted.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Creating-Role-Step1-dark.jpg" />
    </Frame>

    {/* Image: Use Editing-Role-Step1 image */}

    <Frame caption="Locating the delete icon (trash can or menu) next to the custom role.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Editing-Role-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Confirm Deletion">
    Click the delete icon (e.g., trash can or via a menu) associated with the role. A confirmation prompt will
    appear. Carefully review the impact and confirm the deletion. (This corresponds to a `DELETE`
    [/team\_roles/{role}](/api-reference/spa/authentication/roles-&-permissions/delete-team-role) API call).

    <Note>
      The delete option might be hidden off-screen on smaller displays or if the role has many permissions listed
      horizontally. You may need to scroll horizontally to find it.
    </Note>

    {/* Video: Showing the process of clicking delete and confirming. */}

    <Frame caption="Clicking the delete icon and confirming the removal of the role.">
      <video autoPlay muted playsInline loop allowfullscreen className="block dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Deleting-Role-Step2-light.mp4" controls />

      <video autoPlay muted playsInline loop allowfullscreen className="hidden dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Roles-and-Permissions/Deleting-Role-Step2-dark.mp4" controls />
    </Frame>
  </Step>
</Steps>

## Assigning Roles to Users

Roles are assigned to users within the **Team Members** management section.

1. Navigate to **Team Settings** -> **Members**.
2. Select the user whose roles you want to manage within the current team.
3. Assign one or more available roles (system or custom) to the user.
4. Save the changes.

(See [User Management](/core-concepts/users) for details on assigning roles to team members).

## Best Practices

* **Use System Roles First**: Leverage predefined roles like Administrator or Member for common access patterns before creating custom ones.
* **Principle of Least Privilege**: Grant only the necessary permissions (scopes) required for a user to perform their job function within a team. Avoid overly broad roles.
* **Create Task-Specific Custom Roles**: Define roles based on responsibilities (e.g., "Billing Viewer," "Site Operator," "Security Auditor") rather than individual users.
* **Regular Audits**: Periodically review role definitions and user assignments to ensure they are still appropriate and align with current responsibilities and security policies.
* **Document Custom Roles**: Clearly document the purpose and intended permissions of each custom role you create for your team's reference.


# Threat Feeds
Source: https://docs.sdx.altostrat.io/core-concepts/security-essentials

Leverage BGP-delivered threat intelligence feeds to automatically block malicious traffic at your network edge.

Altostrat's **Threat Feeds** feature enhances network security by integrating curated threat intelligence lists directly into your MikroTik router's routing table or firewall, often using **BGP** mechanisms. This allows you to automatically block traffic to and from known malicious IP addresses associated with threats like botnets, scanners, and compromised servers by null-routing or filtering traffic based on these feeds.

This feature complements DNS-based [Content Filtering](/core-concepts/content-filtering), providing protection at the IP/routing layer. Both features are often managed under the same policy framework within Altostrat.

## Key Features

* **BGP-Delivered Threat Intelligence**: Utilize automatically updated lists of malicious IP addresses sourced from reputable providers (e.g., Team Cymru, FireHOL, Emerging Threats), often distributed via BGP.
* **Automated Routing/Firewall Integration**: Selected threat feeds dynamically update the router's configuration, typically by adding routes pointing to a null interface (blackhole) or populating firewall address lists for blocking rules.
* **Malicious Traffic Blocking**: Prevent inbound and outbound connections associated with known threats based on the subscribed feeds at the network layer.
* **Logging and Monitoring**: Track policy update statuses via the [Orchestration Log](/management/orchestration-log) and monitor related routing or firewall events on the MikroTik device.

***

## Default Threat Feed Policy

When you first sign up, Altostrat may create a default **Threat Feed Policy** incorporating essential Threat Feeds. This policy often includes lists such as:

* **RFC 1918** Private IP Ranges (common bogon filtering)
* **Team Cymru FullBogons** (unallocated/unroutable IP addresses)
* **FireHOL Level 1** (basic list of known malicious IPs)
* **Emerging Threats Block IPs** (compromised IPs, C\&C servers)

You can customize this default policy or create new ones tailored to your security posture.

***

## Creating a Threat Feed Policy

<Steps>
  <Step title="Navigate to Threat Feeds Policies">
    Go to **Policies → Threat Feeds** in the Altostrat portal.

    {/* Images (Assuming these screenshots show navigation to the correct policy section) */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Add a New Threat Feed Policy">
    Click **Add** or **+ New**. Enter a descriptive policy name (e.g., "Block Known Attackers", "Critical Infrastructure Feeds").

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Threat Feeds (BGP/DNR Lists)">
    Choose the specific threat intelligence feeds (BGP/DNR Lists) you want to enable within this policy. The available feeds can be viewed ([View available BGP/DNR lists via API](/api-reference/spa/bgp-dns-filter/bgp-policy/list-bgpdnr-lists)). Select feeds based on desired protection level and potential operational impact.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step3-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save and Apply Policy">
    Click **Save** or **Add** to finalize the policy definition ([Create BGP policy via API](/api-reference/spa/bgp-dns-filter/bgp-policy/create-bgp-policy)). To apply it to a site:

    * Navigate to the desired **Site** overview page.
    * Assign this newly created policy under the site's **Threat Feed Policy** setting. ([Assign BGP policy to site via API](/api-reference/spa/bgp-dns-filter/bgp-policy/assign-bgp-policy-to-site)).
    * The router will then be configured (via the [Management VPN](/management/management-vpn)) to utilize the selected BGP feeds, updating its routing table or firewall rules. Allow time for synchronization.
  </Step>
</Steps>

***

## Editing a Threat Feed Policy

<Steps>
  <Step title="Navigate to Threat Feeds Policies">
    Access the Altostrat portal and navigate to **Policies → Threat Feeds**.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select the Threat Feed Policy to Edit">
    Click on the name of the policy you wish to modify. Toggle the desired threat feeds (BGP/DNR Lists) on or off as needed within the policy configuration.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Editing-Security-Policy-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Editing-Security-Policy-Step2-dark.jpg" />
    </Frame>

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Editing-Security-Policy-Step2_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Editing-Security-Policy-Step2_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save Changes to Propagate">
    Click **Save** or **Update**. Changes automatically propagate to all sites using this policy, updating their routing/firewall configurations. ([Update BGP policy via API](/api-reference/spa/bgp-dns-filter/bgp-policy/update-bgp-policy)).
  </Step>
</Steps>

***

## Removing a Threat Feed Policy

<Warning>
  Deleting a Threat Feed Policy also removes its configuration from any sites using it. This disables the associated routing or firewall rules derived from its feeds, potentially increasing the site's exposure to threats if no alternative protection is active.
</Warning>

<Steps>
  <Step title="Navigate to Threat Feeds Policies">
    Go to **Policies → Threat Feeds** and identify the policy you want to delete.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Creating-Security-Policy-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Delete the Threat Feed Policy">
    Click the **Remove** or **Trash** icon next to the policy and confirm your choice. This deletes the policy definition itself. Sites previously using it will have the corresponding configurations removed. ([Delete BGP policy via API](/api-reference/spa/bgp-dns-filter/bgp-policy/delete-bgp-policy)).

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Removing-Security-Policy-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Security-Essentials/Removing-Security-Policy-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

To stop applying a policy to a specific site **without deleting the policy definition**, navigate to the site's configuration and assign a different Threat Feed policy or remove the current assignment ([Remove BGP policy from site via API](/api-reference/spa/bgp-dns-filter/bgp-policy/remove-bgp-policy-from-site)).

***

## Programmatic Management (Threat Feed Policy API)

Threat Feed policies using BGP/DNR can be managed programmatically via the Altostrat API. Key endpoints include:

* **Create BGP Policy**: `POST /bgp/policy` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/create-bgp-policy))
* **List BGP Policies**: `GET /bgp/policy` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/list-bgp-policies))
* **Get BGP Policy Details**: `GET /bgp/policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/get-bgp-policy-details))
* **Update BGP Policy**: `PUT /bgp/policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/update-bgp-policy))
* **Delete BGP Policy**: `DELETE /bgp/policy/{policy}` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/delete-bgp-policy))
* **Assign BGP Policy to Site**: `POST /bgp/{site_id}` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/assign-bgp-policy-to-site))
* **Remove BGP Policy from Site**: `DELETE /bgp/{site_id}` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/remove-bgp-policy-from-site))
* **List Available BGP/DNR Feeds**: `GET /bgp/category` ([API Docs](/api-reference/spa/bgp-dns-filter/bgp-policy/list-bgpdnr-lists))

Refer to the specific API documentation for request/response details.

***

## Best Practices

* **Understand Feed Sources**: Know the origin and nature of each BGP/DNR feed (e.g., bogons, active threats) to assess potential impact and false positive risks.
* **Monitor Routing/Firewall Impact**: Check the router's routing table (for blackholes) and firewall logs/rules to see how the feeds are being implemented and what traffic is being blocked.
* **Start Selectively**: Implement conservative feeds first (like bogon lists) before adding more aggressive threat feeds. Monitor network reachability closely after adding new feeds.
* **Layered Security**: Use Threat Feeds (IP/BGP layer) in conjunction with [Content Filtering](/core-concepts/content-filtering) (DNS layer) for comprehensive protection.
* **Regular Audits**: Periodically review feed selections and policy assignments to align with current security needs and threat landscape.


# Teams
Source: https://docs.sdx.altostrat.io/core-concepts/teams

Organize users into teams for resource ownership, collaboration, and scoped access control in Altostrat SDX.

## Introduction

In Altostrat SDX, a **Team** is the primary way to group users and manage access to shared resources. Think of a team as a workspace or a container for collaboration. Every resource you manage within Altostrat SDX (like Sites, Policies, VPNs, Scripts, etc.) belongs to a specific team.

Access control is layered:

1. A user must be a **member** of a team to potentially access its resources.
2. The user's assigned **Role(s)** *within that specific team* determine *what* actions they can perform on the team's resources, based on the [Permissions (Scopes)](/core-concepts/roles-and-permissions) granted by those roles.

## Key Concepts

* **Resource Ownership:** All manageable resources are owned by a Team, not individual users. This ensures clear ownership and facilitates handover if team members change.
* **Collaboration:** Teams allow groups of users working on common infrastructure or projects (e.g., a Network Operations team, a regional support group, a specific client project) to share visibility and control over the relevant resources.
* **Scoped Access:** A user's permissions are always evaluated within the context of their currently active team. They only see and manage resources belonging to that team, according to their assigned roles within it.
* **Multi-Team Membership:** A single user account can be a member of multiple teams, allowing individuals to participate in different projects or departments without needing separate logins. They can switch between their active team contexts using the team switcher in the UI or via API.
* **Team Owner:** The user who creates a team is designated as its Owner. The Owner typically has full administrative privileges within that team (often assigned a default 'Administrator' or 'Owner' role) and is usually the only one who can delete the team or transfer ownership (though specific permissions can vary).
* **Site Limit (Optional):** Teams can optionally have a specific 'Site Limit' configured. If set to a value greater than 0, this limit restricts the number of sites *this specific team* can manage, potentially overriding a higher limit set at the organizational/subscription level. A value of 0 means the team uses the available organization-wide limit.

## Managing Teams

Team management involves viewing, creating, updating, switching between, and deleting teams. These actions typically require specific permissions (scopes).

### Viewing Teams

* **UI:** Navigate to **Settings → Teams** in the dashboard to see a list of teams you belong to.
* **API:** Use `GET` [/teams](/api-reference/spa/authentication/teams/list-users-teams) to retrieve a list of teams accessible to the authenticated user.

{/* Image: Screenshot of the Team Overview page */}

<Frame caption="The Team Overview page lists all teams the user is a member of.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Team-Overview-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Team-Overview-dark.jpg" />
</Frame>

### Creating a Team

Requires the `team:create` permission scope.

<Steps>
  <Step title="Navigate and Initiate">
    Go to **Settings → Teams** and click the **+ New** or **+ Add Team** button.

    {/* Images */}

    <Frame caption="Starting the team creation process from the Team Overview page.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step1-dark.jpg" />
    </Frame>

    <Frame caption="Clicking the '+New' button.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Name the Team">
    Provide a descriptive **Team Name** (e.g., "Network Operations Center", "Client Alpha Support", "Security Audit Team") and click **Add ->**.

    {/* Images */}

    <Frame caption="Entering a name for the new team.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Creating-Team-Step3-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Confirm Creation">
    The team is created, and the creator is automatically assigned as the Owner and added as a member. (API: `POST` [/teams](/api-reference/spa/authentication/teams/create-team)). You can now manage its members and settings.
  </Step>
</Steps>

### Editing a Team

Requires the `team:update` permission scope (or Owner privileges).

<Steps>
  <Step title="Select the Team">
    From the **Settings → Teams** overview, click on the name of the team you want to modify.

    {/* Images */}

    <Frame caption="Selecting the 'NoC Team' from the list to edit its details.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Editing-Team-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Editing-Team-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Update Details">
    You can typically modify the **Team Name** and the optional **Site Limit**. Member management (adding, removing, changing roles) is also done from the team settings screen but is detailed under [User Management](/core-concepts/users). Changes are usually saved automatically as you make them. (API: `PUT` [/teams/\{team}](/api-reference/spa/authentication/teams/update-team)).

    {/* Images */}

    <Frame caption="Editing the team name and adjusting the optional Site Limit.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Editing-Team-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Editing-Team-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

### Switching Active Team

If you are a member of multiple teams, you need to select which team's context you are currently working in. The active team determines which resources are visible and manageable.

* **UI:** Use the Team Switcher dropdown, usually located in the main navigation or sidebar.
* **API:** Use the `PUT` [/teams/\{team}/switch](/api-reference/spa/authentication/teams/switch-current-team) endpoint to change the active team context for subsequent API calls using the same authentication token/session.

### Deleting a Team

Requires the `team:delete` permission scope (or Owner privileges).

<Warning>
  **This action is permanent and cannot be undone.** Deleting a team typically also deletes **all resources** owned by that team (sites, policies, etc.). Ensure any critical resources are moved or backed up before proceeding. You generally cannot delete a team if you are the sole owner and there are other members, or if critical resources are still associated with it.
</Warning>

<Steps>
  <Step title="Select the Team">
    From the **Settings → Teams** overview, choose the team you wish to delete.
  </Step>

  <Step title="Initiate Deletion">
    Within the team's settings, find and click the **Delete Team** button or trash can icon.

    {/* Images */}

    <Frame caption="Locating the delete button within the team's settings page.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Deleting-Team-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Deleting-Team-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Confirm Deletion">
    A confirmation dialog will appear, warning about the consequences. Carefully read the confirmation and proceed if you are certain. (API: `DELETE` [/teams/\{team}](/api-reference/spa/authentication/teams/delete-team)).

    {/* Images */}

    <Frame caption="Confirming the permanent deletion of the team and its resources.">
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Confirm-Deletion-Team-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Teams/Confirm-Deletion-Team-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Managing Members and Invites

Adding users to a team, inviting new users, removing members, and assigning their roles within the team are managed within the specific team's settings (**Settings → Teams → \[Select Team] → Members**).

For detailed instructions on these actions, please refer to the [User Management](/core-concepts/users) documentation.

## Best Practices

* **Use Descriptive Names:** Choose team names that clearly indicate the team's purpose or scope (e.g., "EU Support", "Project Phoenix", "Read-Only Auditors").
* **Align Teams with Responsibilities:** Create teams based on functional roles, projects, or client groupings to simplify permission management.
* **Leverage Multiple Teams:** Don't hesitate to place users in multiple teams if their responsibilities cross functional boundaries.
* **Review Team Ownership:** Ensure the designated Team Owner is appropriate and active. Plan for ownership transfer if necessary.
* **Utilize Site Limits Sparingly:** Only set per-team site limits if you need to enforce stricter quotas than the overall organizational subscription allows for specific groups.


# User Management
Source: https://docs.sdx.altostrat.io/core-concepts/users

Manage portal users and notification recipients, assign roles within teams, and understand resource access in Altostrat SDX.

# User Management in Altostrat SDX

Altostrat SDX manages access control through **Users**, **Teams**, and **Roles**. A user account represents an individual who can interact with the platform or receive notifications. Access to resources (like sites or billing information) is determined by a user's membership in a Team and the Roles assigned to them within that team.

## User Types: Portal vs. Notification-Only

Altostrat supports two primary user distinctions based on their ability to log in:

| **Characteristic**               | **Portal User (`allow_login: true`)** | **Notification-Only User (`allow_login: false`)** |
| :------------------------------- | :------------------------------------ | :------------------------------------------------ |
| **Can Log In?**                  | ✅ Yes                                 | ❌ No                                              |
| **Receives Notifications?**      | ✅ Yes                                 | ✅ Yes                                             |
| **Can Own Resources?**           | ✅ Yes (via Team Membership)           | ❌ No                                              |
| **Requires Email Verification?** | ✅ Yes (for login)                     | ❌ No                                              |
| **Typical Use Case**             | Admins, Operators, Team Members       | Stakeholders, Alert Recipients                    |

Essentially, the ability to log in (`allow_login` flag) is the key differentiator. Notification-Only users are primarily recipients for alerts and reports without needing dashboard access.

## Creating Users

Users can be added to Altostrat SDX in two main ways:

### 1. User Self-Registration

* Individuals can sign up themselves via the Altostrat authentication portal (e.g., `https://auth.altostrat.app`).
* They must verify their email address to activate their account.
* Once registered, they can either create their own Organization and Team or accept an invitation to join an existing Team.
* See [User Registration](/getting-started/user-registration) for the user perspective.

### 2. Admin Creation (UI / API)

* An administrator with the appropriate permissions (`user:create` scope) can create new users directly within a Team context.
* **Via UI:** Typically done through the **Settings -> Users** or **Team Settings -> Members** section by clicking "Add User" or similar.
* **Via API:** Use the `POST` [/users](/api-reference/spa/authentication/user-management/create-or-add-user-to-team) endpoint.
* **Required Information:** When creating via Admin/API, you'll typically provide:
  * `name`: User's full name.
  * `email`: User's unique email address.
  * `allow_login` (Boolean): Set to `true` for a Portal User, `false` for a Notification-Only User.
  * `timezone`: User's preferred timezone (defaults based on creator's IP if not provided via API).
  * *(Optional)* `mobile`: Phone number details for SMS notifications.
  * *(Optional)* `roles`: An array of Role IDs to assign within the current team context.
* **Important:** When creating a Portal User via API with `allow_login: true` who doesn't use SSO, a temporary password will be generated and returned in the API response. This should be securely communicated to the user, who should change it upon first login. Email verification will also be required.

## Managing Team Membership & Roles (Granting Access)

Access to resources like sites, billing, or VPNs is controlled by **Team membership** and the **Roles** assigned within that team. To grant a user access:

1. **Navigate to Team Members:** Go to **Settings → Teams**, select the relevant Team, and navigate to its **Members** list.

{/* Images */}

<Frame caption="Selecting the target team from the main Teams list.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step1-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step1-dark.jpg" />
</Frame>

<Frame caption="Viewing the members list within the selected team's settings.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step1_2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step1_2-dark.jpg" />
</Frame>

2. **Add or Invite the User:**

* **Add Existing User:** If the user already has an Altostrat account, use the "Add Member" function (requires `user:create` or similar scope) and search for their email.
* **Invite New User:** If the user doesn't have an account or you want them to register first, use the "Invite" function (requires `teams:invite-users` scope). Enter their email address to send an invitation link. (API: `POST` [/teams/\{team}/invites](/api-reference/spa/authentication/teams/invite-user-to-team)).

{/* Images */}

<Frame caption="Using the 'Add Member' or 'Invite' button within the team members section.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Granting-Access-Step2-dark.jpg" />
</Frame>

3. **Assign Roles:** During the add/invite process (or by editing the member later), assign the appropriate **Role(s)**. The selected roles determine the user's permissions *only within this specific team*. Refer to [Roles & Permissions](/core-concepts/roles-and-permissions) for details on configuring roles and scopes.

<Note>
  If adding an existing user and they don't appear in the search, ensure they have verified their email address after registration.
</Note>

## Managing User Profiles

Users can manage some of their own profile details. Administrators with `user:update` scope can modify details for other users within their teams.

1. **Locate the User:** Find the user in **Settings → Users** or within a specific **Team → Members** list. Click on their name or an 'Edit' icon.

{/* Images */}

<Frame caption="Navigating to the user list via Settings.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1-dark.jpg" />
</Frame>

<Frame caption="Selecting a user from the list to view/edit details.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1_2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1_2-dark.jpg" />
</Frame>

2. **Edit Details:** Modify fields such as:

* Name
* Email Address (requires re-verification)
* Mobile Number (for SMS, requires re-verification)
* Timezone, Locale, Date/Time Formats
* `allow_login` status (to enable/disable portal access)
* Assigned Roles (within the team context)

{/* Images */}

<Frame caption="Editing various user profile fields, including role assignments.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step2-dark.jpg" />
</Frame>

3. **Save Changes:** Confirm the updates. (API: `PUT` [/users/\{user}](/api-reference/spa/authentication/user-management/update-user-details)).

## Disabling User Login

To prevent a Portal User from logging in while retaining their account for notifications or historical reference:

1. Edit the user's profile as described above.
2. Set the `allow_login` toggle or checkbox to **false** (disabled).
3. Save the changes. (API: `PUT` [/users/\{user}](/api-reference/spa/authentication/user-management/update-user-details))

The user will no longer be able to log in via password or SSO, but their association with teams and notification settings remain.

## Deleting / Removing Users

Removing a user has different implications:

* **Removing from a Team:** This revokes the user's access to *that specific team's* resources and removes their role assignments *for that team*. They remain an Altostrat user and may belong to other teams.
  * **UI:** Go to **Team Settings → Members**, find the user, and select "Remove".
  * **API:** `DELETE` [/teams/\{team}/members/\{user}](/api-reference/spa/authentication/teams/remove-team-member) (Requires `teams:remove-users` scope).
  * **Caution:** You typically cannot remove the Team Owner.

* **Deleting User Account:** This permanently removes the user from the Altostrat SDX system. This is generally less common than removing from a team unless the user should have no access at all.
  * **UI:** May be available under **Settings → Users** for users not associated with critical resources.
  * **API:** `DELETE` [/users/\{user}](/api-reference/spa/authentication/user-management/delete-user) (Requires `user:delete` scope).
  * **Caution:** You cannot delete a user who is the sole owner of an Organization or Team that still has members or resources. Ownership must be transferred first.

{/* Images showing the delete/remove user flow */}

<Frame caption="Locating the user to disable or delete.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Update-User-Step1-dark.jpg" />
</Frame>

<Frame caption="Using the 'Remove from Team' or 'Delete User' option.">
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Delete-User-Step1_2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/core-concepts/Users/Delete-User-Step1_2-dark.jpg" />
</Frame>

## Verification Processes

* **Email Verification:** Essential for Portal Users to log in. An email with a verification link is sent upon registration or email address change. Admins can trigger a resend via UI or API (`GET` [/users/\{user}/verification-notification/email](/api-reference/spa/authentication/user-management/resend-email-verification)).
* **Mobile Verification:** Required if a mobile number is added and SMS notifications are desired. Ensures SMS delivery is possible. A verification link is sent via SMS upon adding/changing a number. Admins can trigger a resend via UI or API (`GET` [/users/\{user}/verification-notification/mobile](/api-reference/spa/authentication/user-management/resend-mobile-verification)). Check [Supported SMS Regions](/resources/supported-sms-regions).

## Best Practices

* **Keep Team Memberships Accurate:** Regularly review who belongs to each team to ensure correct resource access. Remove users who no longer need access to a specific team's resources.
* **Use Roles Effectively:** Assign roles based on job function, adhering to the principle of least privilege. Create custom roles for specific needs.
* **Audit Regularly:** Periodically review all users in your organization, ensuring accounts are still needed and roles are appropriate. Disable or remove inactive/unnecessary accounts.
* **Prefer Disabling over Deleting:** For users who leave temporarily or just need login access revoked, disabling (`allow_login: false`) is often preferable to deletion as it preserves history and notification settings.

By effectively managing users, teams, and roles, you maintain a secure and organized Altostrat SDX environment.


# Adding a MikroTik Router to Altostrat SDX
Source: https://docs.sdx.altostrat.io/getting-started/adding-a-router

Follow these steps to integrate your prepared MikroTik router with the Altostrat SDX platform.

## Introduction

This guide details the process of integrating your prepared **MikroTik router** (configured as per the [Initial Configuration](/getting-started/initial-configuration) guide) with the **Altostrat SDX platform**. Completing these steps establishes a secure connection between your hardware and Altostrat, enabling monitoring, management, and the application of Altostrat's SDN and security services.

## Detailed Step-by-Step Integration Guide

### 1. Access the Altostrat Portal and Navigate to Sites

1. Log in to the Altostrat SDX portal at [https://sdx.altostrat.app](https://sdx.altostrat.app).
2. Navigate to the **Sites** section using the main menu. This area lists all locations/devices currently integrated with your account.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step1_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step1_dark.jpg" />
</Frame>

### 2. Create a Site Representation in Altostrat

1. Click the **+ Add** button to create a new logical representation for your physical router or location within Altostrat SDX.

<Note>
  Creating a "Site" in Altostrat generates a unique identifier and a container for the device's configuration,
  policies, logs, and monitoring data within the platform. This conceptually relates to creating a site resource via
  the API (e.g., `POST /site` ([API Docs](/api-reference/spa/async/sites/list-users-sites))).
</Note>

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step2_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step2_dark.jpg" />
</Frame>

### 3. Initiate the Router Integration (Express Deploy)

1. Once the site is created, navigate to its overview page. Click the **Add Router** button (or similar) to start the "Express Deploy" process.
2. This workflow securely generates the necessary commands to link your physical MikroTik hardware to this logical site representation in Altostrat SDX.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step3_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step3_dark.jpg" />
</Frame>

### 4. Select and Review Control Plane Policy

1. You may be prompted to select an initial **Control Plane Policy** for the device (or the default policy might be automatically selected). This policy governs basic management access and firewall settings. ([Learn More](/core-concepts/control-plane)).

> If only the default policy exists, this step might be skipped automatically.

2. Review the settings associated with the selected Control Plane Policy that will be applied during onboarding.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step4_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step4_dark.jpg" />
</Frame>

### 5. Accept Settings and Generate Bootstrap Command

1. Preview any initial configuration settings derived from the Control Plane policy (e.g., firewall rules, initial VPN parameters).

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step5_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step5_dark.jpg" />
</Frame>

2. Click **Accept** to confirm. This triggers the generation of a unique, secure **Bootstrap Command**.

### 6. Copy the Generated Bootstrap Command

1. Altostrat SDX will display the one-time **Bootstrap Command**.
2. **Copy this entire command** to your clipboard. It contains a secure token linking it to this specific site onboarding process.

<Note>
  This command typically instructs the router to securely fetch an initial script from an Altostrat endpoint, using a
  temporary Runbook token for authentication (Conceptually related to `GET /{id}` using a `RunbookToken` ([API
  Docs](/api-reference/spa/async/bootstrap-&-adoption/get-bootstrap-script))).
</Note>

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step6_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step6_dark.jpg" />
</Frame>

### 7. Execute the Bootstrap Command on Your MikroTik Device

1. Access your MikroTik router's command line interface (CLI) using **Winbox (New Terminal)** or **SSH**.
2. **Paste the entire Bootstrap Command** copied from the Altostrat portal into the terminal and press **Enter**.
3. **Wait** for the script to execute. This may take a few moments.

<Tip>
  **What the Bootstrap Command Does:**

  * Downloads initial adoption scripts from Altostrat.
  * Authenticates the device using the embedded secure token.
  * Sends device hardware/software information back to Altostrat to complete the adoption process (Conceptually
    related to `POST /adopt/{id}` ([API Docs](/api-reference/spa/async/bootstrap-&-adoption/adopt-device))).
  * Establishes the persistent, secure [Management VPN](/management/management-vpn) tunnel to Altostrat.
  * Installs a scheduler on the router for periodic check-ins (heartbeats) and job polling (Conceptually uses `POST
        /poll` ([API Docs](/api-reference/spa/async/heartbeat/receive-heartbeat-&-get-job))).
</Tip>

{/* Images */}

<Frame>
  ![Executing the bootstrap command in MikroTik
  terminal](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step7.jpg)
</Frame>

### 8. Confirm Router Integration and Online Status

1. Return to the **Sites** page in the Altostrat SDX portal.
2. Refresh the page after a minute or two. Verify that your newly added router is listed and its status shows as **Online**.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step8_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/adding-a-router/getting_started_adding-a-router-step8_dark.jpg" />
</Frame>

<Note>
  An **Online** status indicates the router successfully completed the bootstrap process, established the Management
  VPN, and is sending regular heartbeat signals to Altostrat.
</Note>

3. **Troubleshooting**: If the router shows as **Offline** or doesn't appear:

* Verify the router still has internet connectivity (Step 4 in [Initial Configuration](/getting-started/initial-configuration)).
* Ensure the full bootstrap command was copied and executed correctly.
* Check the Altostrat [Orchestration Logs](/management/orchestration-log) for this site for any error messages related to the adoption process.
* Confirm firewall rules on intermediate networks aren't blocking the [Management VPN](/management/management-vpn) connection (TCP port 8443 outbound).

***

You have now successfully integrated your MikroTik router with Altostrat SDX. The device is ready for monitoring, and you can begin applying Altostrat's network and security services, such as [Threat Feeds](/core-concepts/threat-feeds) or [WAN Failover](/management/wan-failover), through policies assigned to this site.


# Captive Portal Setup
Source: https://docs.sdx.altostrat.io/getting-started/captive-portal-setup

Learn how to configure a Captive Portal instance and enable network-level authentication.

This document outlines the **fundamentals** and a **step-by-step guide** for setting up a Captive Portal in Altostrat. You'll also learn about **custom configurations** you can apply.

<Warning>
  Before proceeding, confirm you have an [IDP Instance](/integrations/identity-providers) configured if you plan to use **OAuth 2.0** authentication (e.g., Google, Microsoft Azure). Otherwise, you won't be able to authenticate users via third-party providers.
</Warning>

## Step 1: Navigate to the Captive Portal Page

1. From your **Dashboard**, select **Captive Portal** (or a similarly named menu option).
2. You'll see an **Overview** or **Get Started** button to create a new Captive Portal instance.
3. Click **Get Started** (or **+ Add**).

![Placeholder: Captive Portal Overview](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/captive-portal-overview-placeholder.jpg)

## Step 2: Create Your Captive Portal Instance

1. Provide a **Name** for the instance, e.g. “Guest Wi-Fi Portal.”
2. Set the **Authentication Strategy** (currently OAuth 2.0 only).
3. Pick the **Identity Provider** you previously configured, or click **+** to create a new one.
4. Click **Next** to confirm and move to customization.

<Note>
  If you haven't created an IDP yet, follow our [Identity Providers](/integrations/identity-providers) guide before continuing.
</Note>

### Captive Portal Customization

After initial setup, you'll be redirected to a **Customization** page where you can:

* **Branding**: Add logos, colors, and messaging.
* **Terms of Use**: Insert disclaimers or acceptable use policies for users to accept before accessing the network.
* **Redirects**: Control where users land post-authentication.
* **Voucher or Coupon Codes**: Issue time-limited or usage-limited codes for guests.

![Placeholder: Captive Portal Customization](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/captive-portal-customization-placeholder.jpg)

## Network Considerations

1. **Firewall Rules**
   Ensure your MikroTik's firewall permits traffic for the Captive Portal flow.
2. **DHCP & DNS**
   Confirm your router provides IP addresses and DNS resolution for guest clients.

## Step 3: Finalizing & Applying the Captive Portal

After you finish customizing:

1. Click **Add** or **Save** to finalize.
2. If your router is behind NAT, verify that the required ports are open or that the [Management VPN](/management/management-vpn) is set up for behind-NAT usage.

### Testing the Captive Portal

1. Connect a **test device** (phone, laptop, etc.) to your Wi-Fi or LAN.
2. When prompted by the Captive Portal, **log in** with the IDP you configured or a local account.
3. Confirm the **authentication** process succeeds, and you're able to browse the permitted network resources.

<Warning>
  For public or guest-facing portals, regularly monitor the captive portal logs to ensure usage is within acceptable limits.
</Warning>

If you run into issues or need advanced behavior (like custom login pages or deeper policy integration), consult additional docs on [Transient Access](/getting-started/transient-access) or [Security Essentials](/core-concepts/security-essentials).


# Initial Configuration
Source: https://docs.sdx.altostrat.io/getting-started/initial-configuration

Prepare your MikroTik device with a clean configuration and updated firmware before integrating it with Altostrat SDX.

This page guides you through the recommended **initial setup** for your MikroTik device before you integrate it with the **Altostrat SDX** platform. Performing these steps ensures your router is in a known, clean state with basic connectivity and up-to-date firmware, facilitating a smoother onboarding process to access Altostrat's services.

The key preparation steps include:

* Resetting the device to clear previous configurations.
* Establishing a basic internet connection.
* Upgrading the RouterOS firmware to the latest stable version.

## Preparing Your MikroTik Router

Follow these procedures to prepare your device:

### 1. Verify Power and Boot Completion

1. **Power On**: Plug in your MikroTik router and allow 10–60 seconds for it to fully boot.
2. **Check Indicators**: Confirm the device is operational via its LCD panel, status LEDs, or boot completion sounds.

### 2. Physically Connect for Internet Access

1. **WAN Connection**: Connect an Ethernet cable from your upstream internet source (e.g., modem, switch) to the **ether1** port (or designated WAN port) on your MikroTik router.
2. **Device Connection Port**:

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/initial-configuration/Initial-Configuration-Step2.png" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/initial-configuration/Initial-Configuration-Step2.png" />
</Frame>

<Note>
  For detailed first-time connection guidance, refer to MikroTik's official documentation:
  [https://help.mikrotik.com/docs/spaces/ROS/pages/328151/First+Time+Configuration](https://help.mikrotik.com/docs/spaces/ROS/pages/328151/First+Time+Configuration)
</Note>

### 3. Reset RouterOS to Factory Default Settings

Starting with a clean configuration is highly recommended for predictable integration. Choose one method:

**Option A: Reset via LCD Panel (if available)**

1. Navigate the LCD menu to find **Factory Reset** (or similar).
2. Confirm the reset, potentially entering the default PIN `1234` if prompted.

<Note>
  The device will reboot. After reboot, it typically uses the default IP **192.168.88.1** for management access.
</Note>

**Option B: Reset via Winbox or CLI**

1. Connect to the router using **Winbox** ([Download from MikroTik](https://help.mikrotik.com/docs/display/ROS/WinBox)) or SSH.
2. In Winbox, go to **System → Reset Configuration**. Crucially, check the box for **No Default Configuration** and click **Reset Configuration**.
3. Alternatively, in the CLI, run the command: `/system reset-configuration no-defaults=yes skip-backup=yes`

<Note>
  Using `no-defaults=yes` ensures the router starts completely blank, avoiding potential conflicts with Altostrat's
  configuration pushes during onboarding.
</Note>

### 4. Establish Basic Internet Connectivity

Ensure the router can reach the internet. This is necessary for firmware updates and communication with Altostrat SDX.

* **Using DHCP Client on WAN (ether1)**: (Most common method if your upstream network provides DHCP)

1. In Winbox: Go to **IP → DHCP Client**.
2. Click **Add New (+)**.
3. Set **Interface** to `ether1` (or your designated WAN port).
4. Ensure **Use Peer DNS** and **Add Default Route** are enabled (these are usually the defaults).
5. Click **Apply/OK**. Verify the status shows "bound" and that the router receives a valid IP address.

* **Using Static IP or PPPoE**: Configure **IP → Addresses** and **IP → Routes** (for static) or configure the **PPP** interface settings (for PPPoE) according to your Internet Service Provider's instructions.

**Confirm Internet Access**

Once the WAN connection is configured, verify connectivity:

1. Open a **New Terminal** in Winbox or use the CLI.
2. Run a ping test:

```bash
/ping address=altostrat.io count=4
# Or ping a reliable public address
/ping address=8.8.8.8 count=4
```

3. Successful replies (0% packet loss) indicate the router is online. If pings fail, double-check your WAN configuration (IP address, subnet mask, gateway, DNS servers).

### 5. Update RouterOS Firmware

Running the latest stable firmware ensures compatibility, security, and access to the latest features needed for Altostrat SDX.

1. In Winbox, go to **System → Packages**.
2. Click the **Check For Updates** button.
3. In the window that appears, select the **stable** channel from the **Channel** dropdown menu.
4. Click **Check For Updates** again.
5. Compare the *Installed Version* shown with the *Latest Version*. If they are different, click the **Download\&Install** button.

<Warning>
  The router will **reboot automatically** after downloading and installing the firmware update. You will need to reconnect to Winbox/CLI after the reboot.
</Warning>

6. **Check RouterBOARD Firmware:** After the RouterOS update and reboot, it's good practice to go to **System → RouterBOARD** in Winbox. Check if the *Current Firmware* differs from the *Upgrade Firmware*. If an upgrade is available and recommended, click the **Upgrade** button and reboot the router once more when prompted.

<Note>
  For more details on RouterOS upgrades, see MikroTik's documentation: [https://help.mikrotik.com/docs/display/ROS/Upgrading+and+installation](https://help.mikrotik.com/docs/display/ROS/Upgrading+and+installation)
</Note>

***

Your MikroTik router should now be reset, online, and updated, making it ready for the next step: onboarding it onto the Altostrat SDX platform.

Proceed to [Adding a Router](/getting-started/adding-a-router) to integrate your prepared device with Altostrat SDX.


# Introduction
Source: https://docs.sdx.altostrat.io/getting-started/introduction

Welcome to Altostrat SDX - The easiest way to use Altostrat's services on third-party hardware.

<Frame>
  <video autoPlay muted playsInline className="w-full aspect-video" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/introduction/SDX-Introduction.mp4" />
</Frame>

Welcome to **Altostrat SDX**, Altostrat's entry-level platform designed to integrate supported third-party network hardware into our ecosystem. SDX enables users of hardware, such as **MikroTik devices**, to leverage select Altostrat Software-Defined Networking (SDN) and security services for centralized configuration, monitoring, and automation.

Whether you manage a small network or a large deployment, Altostrat SDX provides the tools to streamline operations, enhance security, and improve network uptime using your existing compatible hardware.

## Key Benefits of Using Altostrat Services via SDX

* **Unified Dashboard**: Manage all integrated sites and security policies from a single interface.
* **Automated Workflows**: Utilize orchestration logs, scripts, and scheduling for hands-free operations on connected hardware.
* **Access to Altostrat Services**: Enable features like secure Management VPNs, Transient Access for remote support, and WAN Failover capabilities.
* **Flexibility & Integrations**: Connect Altostrat services with popular communication platforms (Slack, Teams) and Identity Providers (Google, Azure).

## Getting Started with MikroTik Integration

Below are the essential steps to begin integrating your **MikroTik hardware** using Altostrat SDX.

<CardGroup cols={2}>
  <Card title="Initial Configuration" icon="gear" href="/getting-started/initial-configuration">
    Learn how to reset, connect, and update your MikroTik device before adding it to Altostrat SDX.
  </Card>

  <Card title="User Registration" icon="user-plus" href="/getting-started/user-registration">
    Create your Altostrat account or invite team members to collaborate.
  </Card>
</CardGroup>

<CardGroup cols={2}>
  <Card title="Add Your First Router" icon="network-wired" href="/getting-started/adding-a-router">
    Securely onboard a MikroTik router via SDX and configure management basics.
  </Card>

  <Card title="Accessing Remotely" icon="door-open" href="/getting-started/remote-winbox-login">
    Use WinBox or SDX Transient Access to reach integrated devices behind NAT.
  </Card>
</CardGroup>

## Explore Altostrat Services via SDX

Once your hardware is integrated, explore some of the advanced Altostrat services available through the SDX platform:

<CardGroup cols={2}>
  <Card title="Content Filtering" icon="globe" href="/core-concepts/content-filtering">
    Restrict or allow specific categories of websites across your network.
  </Card>

  <Card title="Threat Feeds" icon="shield-halved" href="/core-concepts/threat-feeds">
    Block malicious IPs using BGP-delivered threat intelligence feeds.
  </Card>

  <Card title="WAN Failover" icon="arrows-turn-to-dots" href="/management/wan-failover">
    Combine multiple internet links on your hardware for high availability.
  </Card>

  <Card title="Integrations" icon="puzzle-piece" href="/integrations/integrations-overview">
    Connect Slack, Teams, or external IDPs like Google or Azure for logins and alerts.
  </Card>
</CardGroup>

Welcome aboard Altostrat SDX – your gateway to leveraging Altostrat's advanced network services on your preferred hardware.


# Remote WinBox Login
Source: https://docs.sdx.altostrat.io/getting-started/remote-winbox-login

How to securely access your MikroTik router using WinBox, even behind NAT.

This guide explains how to **securely access** your MikroTik router using **WinBox** through the **Management VPN**. Even if your router is behind a NAT firewall, you can establish on-demand access via **Transient Access** credentials.

## Introduction

When you add a MikroTik router to Altostrat, we automatically configure a secure tunnel called the [Management VPN](/management/management-vpn). This VPN enables enables you to create **temporary access** to the router—called **Transient Access**—by generating short-lived credentials for WinBox or SSH. Once they expire, these credentials are automatically revoked, keeping your device secure.

## Requirements

* Your MikroTik router must be **connected** to the Altostrat platform.
* You have **WinBox** installed on your computer.
* Both the **router** and your **computer** must have internet access.

## Step-by-Step Instructions

### 1. Log in to the Altostrat Portal

1. Visit [https://sdx.altostrat.app](https://sdx.altostrat.app) and sign in.
2. Locate **Sites** from the main menu.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step1_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step1_dark.jpg" />
</Frame>

### 2. Select a Site

1. From the **Sites** page, click on the **site** that contains the router you want to access.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step2_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step2_dark.jpg" />
</Frame>

2. Wait for the site overview to load.

### 3. Open Transient Access

1. Click on the **Transient Access** tab (or similarly labeled section).
2. You'll see any existing access sessions listed here.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step3_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step3_dark.jpg" />
</Frame>

### 4. Generate Transient Access Credentials

1. Click **Add** or **New** to generate fresh credentials.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step4_1_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step4_1_dark.jpg" />
</Frame>

2. Choose the **Access Type** (e.g., WinBox) and specify if full admin or read-only is needed.
3. Confirm or edit the **CIDR** or IP range from which you'll connect (defaults to your IP).
4. Set an **expiration** time (e.g., 2 hours).
5. Click **Add ->** to receive a username/password and endpoint.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step4_2_light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step4_2_dark.jpg" />
</Frame>

<Tip>
  Because these credentials expire and are unique, you can share them safely with authorized teammates.
</Tip>

### 5. Copy and Use the Credentials

1. Click **Copy** next to the credential block or manually copy the username/password and endpoint.
2. **Open WinBox** on your PC or Mac.
3. In the **Connect To** field, paste the **endpoint**.
4. Enter the **username** and **password** as displayed in the credentials menu.
5. Click **Connect**.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step5-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step5-dark.jpg" />
</Frame>

Once credentials are validated, WinBox will launch a direct session to your router through the Management VPN.

<Note>
  If you Click on the **Winbox** button next to the **Credentials** button and you have our application installed, the winbox session will automatically launch the Winbox utility.
</Note>

## Revoking Transient Access (Optional)

If you need to remove credentials before they expire:

1. Return to the site's **Transient Access** tab in the Altostrat portal.
2. Locate the session under **Active Credentials**.
3. Click **Revoke** to invalidate them immediately.

{/* Images */}

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step6-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/remote-winbox-login/remote-winbox-login-step6-dark.jpg" />
</Frame>

<Note>
  When revoked, the credentials no longer function, and the NAT session on the regional server is torn down.
</Note>

If you run into issues, check the [Orchestration Log](/management/orchestration-log) to diagnose connection attempts or errors.


# Transient Access
Source: https://docs.sdx.altostrat.io/getting-started/transient-access

Secure, on-demand credentials for MikroTik devices behind NAT firewalls.

<Frame>
  <img className="block dark:hidden" height="100" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/transient-access/timer-lock.png" />

  <img className="hidden dark:block" height="100" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/transient-access/timer-lock-white.png" />
</Frame>

**Transient Access** offers temporary, secure credentials to remotely manage your MikroTik devices via the [Management VPN](/management/management-vpn). Whether you need **WinBox** or **SSH** access, Altostrat issues time-limited logins that automatically expire, ensuring minimal exposure.

## Introduction

When you onboard a router into Altostrat, our system establishes a [Management VPN](/management/management-vpn). **Transient Access** leverages this VPN to grant short-lived credentials for direct router management.
By default, credentials last a few hours, but you can customize them for your use case.

## Key Features

* **Temporary Credentials**
  Each login is unique and auto-revokes upon expiration.
* **Reduced Attack Surface**
  No permanent open ports—transient sessions only exist as needed.
* **Easy Sharing**
  Admins can create credentials for a teammate or a vendor, limiting risk.

![Placeholder: Transient Access Overview](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/transient-access-overview-placeholder.jpg)

## How It Works

1. **Generate Credentials**
   From a site’s **Transient Access** tab, click **Add** to create new logins.
2. **Select Permissions**
   Choose whether users get full admin or read-only.
3. **Set Duration**
   Define how long the credentials remain valid (e.g., 2 hours).
4. **Distribute or Use**
   Copy the username, password, and endpoint into **WinBox** or an **SSH** client.

### Express Onboarding vs. Manual

* **Express**: Altostrat pre-configures your device for transient sessions automatically.
* **Manual**: If you prefer granular control, ensure the router’s firewall and NAT are set up for [Remote WinBox Login](/getting-started/remote-winbox-login) or [Captive Portal Setup](/getting-started/captive-portal-setup).

## Prerequisites

* A **MikroTik** router connected to Altostrat.
* **WinBox** or **SSH** client installed on your local machine.
* Sufficient privileges in the **Altostrat** portal to generate credentials.

## Creating Transient Access

1. **Open Altostrat Portal**
   Login at [https://sdx.altostrat.app](https://sdx.altostrat.app).
2. **Navigate to Sites**
   Select the **site** with the router you want to access.
3. **Transient Access Tab**
   Click **Transient Access** from the site’s overview.
4. **Add Credentials**
   Specify **Access Type** (WinBox or SSH), define **Access Duration**, and set an **IP whitelist** if necessary.
5. **Copy or Share**
   The generated username/password and endpoint can be shared or used immediately.

### Revoking Credentials

In the same tab, locate the **Active Sessions** list. Click **Revoke** next to any session to invalidate those credentials before their expiry.

<Warning>
  Revoking removes the session instantly. The user will lose router access if they’re still logged in.
</Warning>

## Best Practices

* **Short Durations**: Limit time frames to reduce risk.
* **Restricted IP Ranges**: If possible, specify which IP or CIDR can use these credentials.
* **Regularly Check**: Audit active sessions under **Transient Access** to ensure all are valid and necessary.

You can now create secure, time-bound sessions for behind-NAT MikroTik devices without permanently exposing your network. If you need further guidance, consult [Remote WinBox Login](/getting-started/remote-winbox-login) or check the [Management VPN](/management/management-vpn) page for deeper insights.


# User Registration
Source: https://docs.sdx.altostrat.io/getting-started/user-registration

Learn how to create your personal Altostrat SDX user account via self-registration or by accepting a team invitation.

# Registering for an Altostrat SDX Account

Creating a user account is the first step to accessing the Altostrat SDX platform, managing your resources, or receiving notifications. This guide covers the self-registration process.

<Note>
  If someone has already invited you to join their Team, you should follow the link in your invitation email first. If
  you don't have an account, the invitation process will guide you through registration. If you simply need to grant
  an existing user access to *your* resources, see [Managing Team
  Membership](/core-concepts/users#managing-team-membership-and-roles-granting-access).
</Note>

## Registration Methods

You can typically register for an Altostrat SDX account using:

1. **Email and Password:** Create a local Altostrat SDX account directly.
2. **Social/Work Accounts:** Use existing credentials from providers like Google, Microsoft, or GitHub (if enabled on the login page). This simplifies login as you don't need to manage a separate password for Altostrat SDX.

## Self-Registration Steps

Follow these steps if you are signing up without a prior invitation:

<Steps>
  <Step title="Visit the Authentication Portal">
    Navigate your web browser to the main Altostrat SDX login page:
    [https://auth.altostrat.app](https://auth.altostrat.app)
  </Step>

  <Step title="Initiate Registration">
    On the login page, look for and click the "Register," "Sign Up," or similar link to begin the account creation
    process.

    {/* Image: Screenshot of the login page highlighting the 'Register' link */}

    <Frame caption="Finding the registration link on the main login page.">
      <img className="block dark:hidden" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/user-registration/Register.png" />

      <img className="hidden dark:block" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/getting-started/user-registration/Register.png" />
    </Frame>
  </Step>

  <Step title="Complete Registration Form">
    Fill in the required information:

    * **Name:** Your full name.
    * **Email:** Your unique email address (this will be your primary identifier).
    * **Password:** Create a strong password. Refer to the [Password Policy](/resources/password-policy).
    * Accept any **Terms of Service** if presented.
      Click "Register" or the equivalent button to submit the form. (API: This initiates the process corresponding to
      `POST` [/register](/api-reference/web-unauthenticated/register-store)).
  </Step>

  <Step title="Verify Your Email Address">
    Check the inbox for the email address you registered with. You will receive an automated email containing a
    verification link.
    **Click this link to activate your account.**

    <Tip>
      Verification links typically expire after a set period (e.g., 60 minutes). If the link expires, you can
      usually request a new one from the login page or via an API call if needed ([/users/\{user}/verification-notification/email](/api-reference/spa/authentication/user-management/resend-email-verification)).
      Check your spam/junk folder if you don't see the email.
    </Tip>

    **You must verify your email before you can log in.**
  </Step>

  <Step title="First Login and Onboarding">
    Once your email is verified, return to [https://auth.altostrat.app](https://auth.altostrat.app) and log in with
    the credentials you created (or using the Social/Work provider if you chose that method).

    Upon your first login, the system will guide you through initial setup:

    * **Organization & Team:** Since all resources belong to a Team within an Organization, you'll likely be
      prompted to:
    * **Create a New Organization:** If you're the first user from your company. You'll also create your first
      default Team.
    * **(Potentially) Request to Join:** If an Organization associated with your email domain already exists, you
      might be able to request to join it (subject to approval).
    * **Profile Setup:** You may be prompted or can navigate to settings to configure preferences like your
      [Timezone](/api-reference/spa/authentication/ancillary-services/get-supported-timezones) and date/time formats.
  </Step>
</Steps>

<Note>
  Having membership in at least one Team is necessary to manage resources like sites, devices, or policies within
  Altostrat SDX.
</Note>

## Accepting a Team Invitation

If an existing user invites you to their Team:

1. You will receive an **invitation email**.
2. Click the **acceptance link** in the email.
3. If you **don't** have an Altostrat SDX account, you will be prompted to **register** (using email/password or a social provider) as part of the acceptance process.
4. If you **do** have an account, you may be asked to log in first.
5. Once accepted, you will be automatically added as a member to the specified Team with the role assigned by the inviter. You typically won't need to manually create or join an Organization/Team in this flow.

## Next Steps

After successfully registering and setting up your initial team/organization:

* Explore the Altostrat SDX Dashboard.
* Begin [Adding a MikroTik Router](/getting-started/adding-a-router).
* Invite other [Users](/core-concepts/users) to your team.
* Configure [Roles & Permissions](/core-concepts/roles-and-permissions).


# Google Cloud Integration
Source: https://docs.sdx.altostrat.io/integrations/google-cloud-integration

Connect Altostrat with Google Cloud for user authentication and secure OAuth 2.0 flows.

Use **Google Cloud** as an **identity provider** for Altostrat, allowing users to authenticate with their Google account. This guide shows how to **create a Google Cloud Project**, enable **OAuth 2.0**, and integrate it with Altostrat.

## Prerequisites

* A **Google Cloud** account or existing project.
* Admin rights in **Altostrat** to configure integrations.

## Part 1: Google Cloud Setup

<Steps>
  <Step title="Create or Select a Google Cloud Project">
    1. Go to the [Google Cloud Console](https://console.cloud.google.com/).
    2. Click <strong>Select a Project</strong> or <strong>New Project</strong> if you need a fresh project.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step1.jpg" />
    </Frame>

    3. Name the project (e.g., “Altostrat Auth”) and confirm creation.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step1_2.jpg" />
    </Frame>

    4. Wait for the project to be created.
  </Step>

  <Step title="Enable OAuth Credentials">
    1. In the left-hand menu, choose <strong>APIs & Services → Credentials</strong>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step2.jpg" />
    </Frame>

    2. Click <strong>+ Create Credentials</strong> → <strong>OAuth client ID</strong>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step2_2.jpg" />
    </Frame>
  </Step>

  <Step title="Configure the Consent Screen">
    If not set up, Google prompts you to configure an <strong>OAuth Consent Screen</strong>.

    * Choose <strong>External</strong> (if public) or <strong>Internal</strong> (if limited to your org's domain).
    * Fill out app information, then save.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step3.jpg" />
    </Frame>
  </Step>

  <Step title="Create OAuth Client ID">
    1. Select <strong>Web application</strong> as the application type.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step4.jpg" />
    </Frame>

    2. Under <strong>Authorized redirect URIs</strong>, add:
       <code>[https://auth.altostrat.app/callback](https://auth.altostrat.app/callback)</code>

    3. Click <strong>Create</strong>. Copy the generated <strong>Client ID</strong> and <strong>Client
       Secret</strong>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Google-Cloud-Setup-Step4_2.jpg" />
    </Frame>
  </Step>
</Steps>

<Note>
  If you have specific domain verification or branding requirements, complete those steps in the <strong>OAuth Consent
  Screen</strong> configuration.
</Note>

***

## Part 2: Altostrat Integration

<Steps>
  <Step title="Open Altostrat Integrations">
    From the Altostrat dashboard, choose <strong>Captive portal</strong> → <strong>Identity Providers</strong>.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Altostrat-Integration-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Altostrat-Integration-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Google Cloud">
    Look for a <strong>Google Cloud</strong> or <strong>Google</strong> option. Fill in the <em>Client
    ID</em> and <em>Client Secret</em> from your GCP project.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Altostrat-Integration-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/google-cloud/Altostrat-Integration-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save & Test">
    Confirm settings and attempt a test sign-in to verify functionality.
  </Step>
</Steps>

***

## Troubleshooting

* **OAuth Errors**
  Ensure your <code>Client ID</code> and <code>Client Secret</code> are correct. Mismatched callback URLs can cause <em>redirect\_uri\_mismatch</em> errors.
* **Consent Screen Issues**
  If users see a warning that the app isn't verified, finalize the <strong>OAuth consent</strong> process in Google Cloud.
* **Check Orchestration Logs**
  If Altostrat reports authentication errors, check the [Orchestration Log](/management/orchestration-log) or Google Cloud's <strong>APIs & Services → Credentials</strong> logs for details.

***

## Updating or Removing the Integration

1. **Google Cloud**
   Under <strong>APIs & Services → Credentials</strong>, edit or delete the OAuth client if you need to rotate secrets.
2. **Altostrat**
   In <strong>Integrations</strong>, remove or update the <strong>Google Cloud</strong> entry, which immediately affects user logins via Google.

<Warning>
  Removing this integration will prevent any user relying on Google OAuth from logging in. Make sure you have an
  alternate login method or user in place.
</Warning>


# Identity Providers
Source: https://docs.sdx.altostrat.io/integrations/identity-providers

Configure external OAuth 2.0 or SSO providers like Google, Azure, or GitHub for Altostrat authentication.

Altostrat **Identity Provider (IDP)** integrations let users **log in** using their existing accounts—reducing password fatigue and simplifying onboarding. You can configure various **OAuth 2.0** or **SSO** providers to suit your organization's needs.

## Why Use External IDPs?

* **Single Sign-On (SSO)**: Streamline user authentication with corporate or social accounts.
* **Improved Security**: Leverage well-established providers (e.g., Google, Microsoft Azure) with built-in MFA or domain control.
* **Reduced Overhead**: Fewer credentials to manage means less admin work for your team.

***

## Supported Identity Providers

| **Provider**                | **Description**                                                          |
| --------------------------- | ------------------------------------------------------------------------ |
| **Google Cloud**            | Allow logins with Google accounts (Gmail or corporate Google Workspace). |
| **Microsoft Azure (Entra)** | Use Azure AD credentials; suits environments with Microsoft 365.         |
| **GitHub (IDP)**            | Great for open-source or developer-oriented teams logging in via GitHub. |

If you need another provider, Altostrat supports **generic OAuth 2.0** setups that may work with Okta, Auth0, or other SSO platforms.

***

## Creating an IDP Instance

<Steps>
  <Step title="Open Altostrat Integrations">
    From the dashboard, navigate to <strong>Integrations</strong> → <strong>Identity Providers</strong>.
  </Step>

  <Step title="Add a New IDP">
    Click <strong>Add</strong> or <strong>+ New</strong>. Provide a <strong>Name</strong> (e.g., “GitHub SSO”).
  </Step>

  <Step title="Configure Client Credentials">
    Enter the <em>Client ID</em>, <em>Client Secret</em>, and any required <em>Tenant/Domain</em> details from your
    chosen provider.
    If you're unsure, see:

    * [Google Cloud Integration](/integrations/google-cloud-integration)
    * [Microsoft Azure Integration](/integrations/microsoft-azure-integration)
    * [GitHub IDP Setup](/integrations/github) (if available)
  </Step>

  <Step title="Callback URL">
    Ensure the callback <code>[https://auth.altostrat.app/callback](https://auth.altostrat.app/callback)</code> is registered in your provider's console.
  </Step>

  <Step title="Save & Test">
    Click <strong>Save</strong>. Use a test user to attempt an OAuth login. If everything is correct, you're good to
    go.
  </Step>
</Steps>

***

## Editing or Removing an IDP

<Steps>
  <Step title="Locate the IDP Instance">
    Under <strong>Integrations → Identity Providers</strong>, find the one you want to modify.
  </Step>

  <Step title="Adjust Credentials or Remove">
    Update <em>Client Secret</em> if you rotate it, or remove the IDP if you no longer need it.
  </Step>
</Steps>

<Warning>
  Deleting an IDP prevents any user relying on that method from logging in. Make sure you have alternative access for
  administrative tasks if needed.
</Warning>

***

## Best Practices

* **Multiple IDPs**: You can enable multiple providers so users can choose how to log in.
* **Policy Enforcement**: Ensure you have [Roles & Permissions](/core-concepts/roles-and-permissions) set up for newly created users from any IDP.
* **Failover**: Maintain at least one admin account with native Altostrat credentials in case external IDPs have outages or misconfigurations.

If you encounter issues, check the [Orchestration Log](/management/orchestration-log) or contact [Altostrat Support](/support) for further assistance.


# Integrations Overview
Source: https://docs.sdx.altostrat.io/integrations/integrations-overview

Overview of how Altostrat connects with external platforms for notifications, authentication, and more.

![Placeholder: Integrations Overview Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations-overview-placeholder.jpg)

Altostrat supports **multiple integrations** to enhance your workflow—whether it’s sending notifications via Slack or Microsoft Teams, or handling user logins through external providers like Google or Azure AD.

## Why Integrate?

* **Notifications**: Push alerts to popular messaging platforms so teams get real-time updates.
* **OAuth & SSO**: Allow users to log in with existing corporate or personal accounts (Google, Azure, GitHub, etc.).
* **Streamlined Operations**: Reduce overhead by automating tasks or bridging data across your existing tools.

## Key Integration Categories

1. **Communication Tools**
   Forward critical alerts or changes to Slack, Microsoft Teams, or email distribution lists.
2. **Identity Providers**
   Leverage OAuth 2.0 or third-party SSO for user authentication.
3. **Custom Webhooks**
   For advanced scenarios, push or pull data from your internal services.

***

## Supported Integrations

| **Integration**        | **Description**                                                                    |
| ---------------------- | ---------------------------------------------------------------------------------- |
| **Slack**              | Automatically post alerts to specific channels.                                    |
| **Microsoft Teams**    | Route notifications to dedicated channels for quick collaboration.                 |
| **Google Cloud**       | Use Google credentials for single sign-on or link cloud services for data synergy. |
| **Microsoft Azure**    | Employ Azure AD for user logins or tie in other Azure-based services.              |
| **GitHub (IDP)**       | Let developers or open-source collaborators log in using their GitHub accounts.    |
| **Identity Providers** | Configure OAuth 2.0 connectors for a variety of third-party login services.        |

### Before You Begin

Some integrations—like Slack or Microsoft Teams—require setting up **webhook URLs** or installing an **app**. Identity providers generally need you to **register** an application in their respective portals and supply client secrets to Altostrat.

## Setting Up an Integration

<Steps>
  <Step title="Open Integrations">
    Navigate to <strong>Integrations</strong> in your Altostrat portal or settings menu.
  </Step>

  <Step title="Select the Integration">
    Choose a tool, like <strong>Slack</strong> or <strong>Microsoft Teams</strong>. Follow the on-screen instructions.
  </Step>

  <Step title="Provide Required Info">
    For Slack, you might enter a webhook URL. For Azure AD, fill in <code>Client ID</code>, <code>Client Secret</code>, and <code>Tenant ID</code>.
  </Step>

  <Step title="Save & Test">
    Confirm the details. Send a test notification or try logging in to ensure the integration works.
  </Step>
</Steps>

![Placeholder: Integration Setup](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integration-setup-placeholder.jpg)

***

## Editing or Removing Integrations

<Steps>
  <Step title="Locate the Integration">
    Under <strong>Integrations</strong>, find the service you want to modify.
  </Step>

  <Step title="Make Changes or Disconnect">
    Edit the settings or remove the connection. Some integrations can be temporarily disabled instead of fully uninstalled.
  </Step>
</Steps>

<Warning>
  Removing an integration can break notifications or user logins that rely on it. Make sure you have backups or alternatives in place.
</Warning>

***

## More Information

* **Slack**: [Slack Integration](/integrations/slack)
* **Microsoft Teams**: [Teams Integration](/integrations/microsoft-teams)
* **Google / Azure / GitHub**: [Identity Providers](/integrations/identity-providers)
* **Check Orchestration Logs**: Use the [Orchestration Log](/management/orchestration-log) if your integration jobs fail or don’t appear as expected.


# Microsoft Azure Integration
Source: https://docs.sdx.altostrat.io/integrations/microsoft-azure-integration

Use Microsoft Entra (Azure AD) for secure user authentication in Altostrat.

Leverage **Microsoft Entra** (formerly **Azure AD**) for user logins in Altostrat. This guide explains how to register an app in the Azure portal, get the **client credentials**, and integrate them into Altostrat for **OAuth 2.0** flows.

## Prerequisites

* **Microsoft Azure** subscription with access to **Entra ID (Azure AD)**.
* Sufficient privileges in **Altostrat** to configure identity providers.

## Part 1: Azure Portal Setup

<Steps>
  <Step title="Log into Azure Portal">
    Go to [https://portal.azure.com](https://portal.azure.com) and sign in.
    Use global search to find <strong>Microsoft Entra ID</strong> or <strong>Azure Active Directory</strong>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Azure-Portal-Setup-Step1.jpg" />
    </Frame>
  </Step>

  <Step title="Create App Registration">
    1. In the Entra ID (Azure D) overview, click <strong>App registrations</strong>.
    2. Select <strong>+ New registration</strong> to create a new application.
    3. Name the app (e.g., “Altostrat Login”) and choose <em>Supported account types</em>.
    4. Under <em>Redirect URI</em>, pick <strong>Web</strong> and
       enter <code>[https://auth.altostrat.app/callback](https://auth.altostrat.app/callback)</code>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Azure-Portal-Setup-Step2.jpg" />
    </Frame>
  </Step>

  <Step title="Register and Note Credentials">
    1. After registering, note the <strong>Application (client) ID</strong> and <strong>Directory (tenant)
       ID</strong>.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Azure-Portal-Setup-Step3.jpg" />
    </Frame>

    2. Go to <strong>Certificates & secrets</strong> to generate a <strong>Client Secret</strong>. Copy the
       secret's value immediately.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Azure-Portal-Setup-Step3_2.jpg" />
    </Frame>
  </Step>
</Steps>

<Note>
  You won't be able to view the client secret again after leaving the page. Store it in a safe place.
</Note>

***

## Part 2: Altostrat Configuration

<Steps>
  <Step title="Open Integrations in Altostrat">
    From the Altostrat dashboard, choose <strong>Captive portal</strong> → <strong>Identity Providers</strong>.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Altostrat-Integration-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Altostrat-Integration-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Add Azure Credentials">
    Fill in the <em>Client ID</em> (Application ID), <em>Client Secret</em>, and <em>Tenant ID</em> from your Azure
    app registration.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Altostrat-Integration-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-azure/Altostrat-Integration-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save & Test">
    Click <strong>Save</strong>, then perform a test sign-in to ensure Altostrat redirects to Azure and back
    successfully.
  </Step>
</Steps>

***

## Troubleshooting

* **Redirect URI Mismatch**
  Ensure <code>[https://auth.altostrat.app/callback](https://auth.altostrat.app/callback)</code> matches the one in your Azure app.
* **Invalid Client Secret**
  If you see authentication errors, regenerate a new secret in **Certificates & secrets**, then update Altostrat.
* **User Domain Restrictions**
  If you set <em>Single Tenant</em> in Azure, only users from your tenant can log in. For external users, you need <em>Multi-Tenant</em> or <em>Personal Accounts</em> enabled.
* **Check Orchestration Logs**
  Failed logins or token errors appear in the [Orchestration Log](/management/orchestration-log).

***

## Updating or Removing the Integration

1. **Azure Portal**
   Modify or delete the app registration if you need to rotate secrets or allow different account types.
2. **Altostrat**
   In <strong>Integrations</strong>, remove or edit the <strong>Microsoft Azure</strong> entry.
   If removed, users depending on Azure AD **can't log in** until another method is configured.

<Warning>
  Deleting the integration breaks any user logins that rely on Microsoft Entra credentials. Have a fallback admin
  account if needed.
</Warning>


# Microsoft Teams
Source: https://docs.sdx.altostrat.io/integrations/microsoft-teams

Integrate Altostrat notifications and alerts into Microsoft Teams channels.

By connecting **Microsoft Teams** with Altostrat, you can receive **real-time notifications** directly in your Teams channels—helping your team collaborate faster on critical network events.

## Prerequisites

* A **Microsoft Teams** workspace with permissions to manage connectors or install apps.
* An **Altostrat** account with enough privileges to set up integrations.

## Setting up the Microsoft Teams Webhook

<Steps>
  <Step title="Open Microsoft Teams">
    Launch Microsoft Teams and choose the <strong>channel</strong> you'd like to use for Altostrat notifications.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/ms-teams/Setting-up-webhook-Step1.jpg" />
    </Frame>
  </Step>

  <Step title="Manage Channel Connectors">
    Right-click the channel name and select <strong>Manage channel</strong> or go to <strong>Connectors</strong> in the channel settings.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/ms-teams/Setting-up-webhook-Step2.jpg" />
    </Frame>
  </Step>

  <Step title="Find Incoming Webhook">
    Search for <strong>Incoming Webhook</strong> and click <strong>Add</strong>. If prompted, confirm installation.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/ms-teams/Setting-up-webhook-Step3.jpg" />
    </Frame>

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/ms-teams/Setting-up-webhook-Step3_2.jpg" />
    </Frame>
  </Step>

  <Step title="Configure Webhook">
    Name your webhook (e.g., “Altostrat Notifications”) and optionally upload a custom icon.
    Once created, **copy** the generated webhook URL—this is critical for the Altostrat setup.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/ms-teams/Setting-up-webhook-Step4.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Integrate the Webhook with Altostrat

<Steps>
  <Step title="Open Integrations in Altostrat">
    Go to <strong>Integrations</strong> from the Altostrat dashboard or settings menu.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-teams/Altostrat-Integration-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-teams/Altostrat-Integration-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Microsoft Teams">
    Find the <strong>Teams</strong> integration and enter the <em>webhook URL</em> you copied from Microsoft Teams.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-teams/Altostrat-Integration-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/ms-teams/Altostrat-Integration-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save & Test">
    Click <strong>Test</strong> to send a test notification from Altostrat to confirm messages appear in the chosen Teams channel.

    {/* Images
            <Frame>
                <img className="block dark:hidden" height="1000" src="/images/Integrations/ms-teams/Altostrat-Integration-Step3-light.jpg" />
                <img className="hidden dark:block" height="1000" src="/images/Integrations/ms-teams/Altostrat-Integration-Step3-dark.jpg" />
            </Frame>

            {/* Images *
            <Frame>
                <img className="block dark:hidden" height="1000" src="/images/Integrations/ms-teams/Altostrat-Integration-Step4-light.jpg" />
                <img className="hidden dark:block" height="1000" src="/images/Integrations/ms-teams/Altostrat-Integration-Step4-dark.jpg" />
            </Frame> */}
  </Step>
</Steps>

If the test fails, ensure the webhook URL is correct and that the Teams channel allows external connectors.

***

## Troubleshooting

* **No Message in Teams**
  Double-check the webhook URL and verify external connector settings.
* **Rate Limits**
  Microsoft Teams may have rate limits for messages. Slow down or batch notifications if you encounter errors.
* **Orchestration Logs**
  If alerts are shown as sent in Altostrat but don't appear in Teams, consult the [Orchestration Log](/management/orchestration-log) for details on message delivery attempts.

***

## Removing or Updating the Integration

1. **Microsoft Teams Channel**
   Remove or reconfigure the Incoming Webhook in the channel's connector settings.
2. **Altostrat**
   In the <strong>Integrations</strong> tab, remove or edit the <strong>Microsoft Teams</strong> entry.

<Warning>
  Deleting the integration immediately stops all future messages from appearing in Teams. Ensure you have alternative alert methods before disabling.
</Warning>


# Slack
Source: https://docs.sdx.altostrat.io/integrations/slack

Send Altostrat alerts to Slack channels for quick incident collaboration.

**Slack Integration** allows Altostrat to post **alerts**, **fault notifications**, and **SLA breach messages** into specified Slack channels, improving collaboration when issues arise.

## Prerequisites

* A **Slack** workspace where you have permission to add apps or configure incoming webhooks.
* An **Altostrat** account with admin rights to set up integrations.

## Setting up the Slack Webhook

<Steps>
  <Step title="Open Slack">
    Choose the <strong>channel</strong> in Slack where you want Altostrat alerts to appear.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/slack/Setting-up-webhook-Step1.jpg" />
    </Frame>
  </Step>

  <Step title="Configure Incoming Webhooks">
    Click on the channel name → <strong>Integrations</strong> (or use Slack's <strong>Apps</strong> directory).
    Search for <strong>Incoming Webhooks</strong> and click <strong>Add</strong>.

    Proceed to follow the in screen prompts to add the App.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/slack/Setting-up-webhook-Step2.jpg" />
    </Frame>

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/slack/Setting-up-webhook-Step2_2.jpg" />
    </Frame>
  </Step>

  <Step title="Set a Channel & Copy the Webhook URL">
    Assign the webhook to your chosen channel. Slack provides a <strong>Webhook URL</strong>—copy it for the next
    step.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/slack/Setting-up-webhook-Step3.jpg" />
    </Frame>

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/integrations/slack/Setting-up-webhook-Step3_2.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Integrating with Altostrat

<Steps>
  <Step title="Navigate to Integrations in Altostrat">
    From the Altostrat dashboard, click <strong>Integrations</strong>.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/slack/Altostrat-Integration-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/slack/Altostrat-Integration-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Add Slack">
    Select <strong>Slack</strong> from the list of integrations. Paste the <em>webhook URL</em> you got from Slack.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/slack/Altostrat-Integration-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/Integrations/slack/Altostrat-Integration-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Save & Test">
    Changes will be saved automatically. You can send a test notification to verify that messages appear in the correct channel.
  </Step>
</Steps>

If the test message doesn't show up, confirm your webhook URL is correct and that Slack's **Incoming Webhook** integration is active.

***

## Troubleshooting

* **No Slack Notifications**
  Make sure the Slack channel allows external webhooks and that the pasted URL is correct.
* **Rate Limits**
  Slack might throttle excessive messages. If you see warnings, reduce the alert frequency or batch notifications.
* **Check Orchestration Log**
  See the [Orchestration Log](/management/orchestration-log) for any errors if Altostrat says notifications were sent but Slack never receives them.

***

## Updating or Removing the Integration

1. **Slack**
   Under **Apps** in Slack, remove or reconfigure the webhook if you need a new channel or changed credentials.
2. **Altostrat**
   In <strong>Integrations</strong>, remove or edit the <strong>Slack</strong> entry to stop or reroute notifications.

<Warning>
  Deleting the Slack integration stops all future alerts to Slack. Ensure another notification method is in place if
  you rely on Slack for critical notifications.
</Warning>


# Backups
Source: https://docs.sdx.altostrat.io/management/backups

Manage and schedule configuration backups for MikroTik devices through Altostrat.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Backups-Black.png" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Backups-White.png" />
</Frame>

Regular **configuration backups** are crucial for maintaining recoverability and integrity of your MikroTik devices. Altostrat simplifies this by **automating** and **scheduling** backups, ensuring you always have **recent snapshots** on hand.

## Overview

Altostrat can create **daily backups** of your device configurations, storing them securely. These backups are accessible from the **Backups** page in the Altostrat portal, allowing you to quickly restore or compare configurations.

## Backup Schedules

{/* <Steps>
    <Step title="Frequency">
        By default, backups occur <em>daily</em>. You can customize this in the portal under <strong>Scripts →
        Backup Policies</strong>; where this will show you a list of all your sites with their backups.
    </Step>
    <Step title="Manual Backups">
        You can also trigger one-off backups at any time (e.g., before making major config changes).
    </Step>
  </Steps> */}

* By default, backups occur <em>daily</em>.
* You can also trigger once-off backups at any time (e.g., before making major configuration changes to your devices.)

***

## Accessing Backups

<Steps>
  <Step title="Open the Site in Altostrat">
    From your <strong>Dashboard</strong>, click <strong>Sites</strong>, then pick the relevant site.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="View Config Backups">
    On the site's overview page, click <strong>Config Backups</strong> (or a similar option). Here, you'll see a
    list of recent backups.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step2-dark.jpg" />
    </Frame>

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step2_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Accessing-Backups-Step2_2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

### Options for Each Backup

* **View**: Inspect the configuration file in plain text or compare it with another backup.
* **Download**: Obtain a local copy for offline storage.
* **Restore**: Apply the backup to revert the router to that configuration.

***

## Comparing Backups

Comparisons highlight **differences** between two backup snapshots.

<Steps>
  <Step title="Select Backups to Compare">
    Start by navigating to <strong>Scripts - Backup Scripts</strong>, and then select the site you wish to compare the backups for.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step>
    Check two backups from the list. The <strong>Comparison</strong> should appear automatically.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="View the Diff">
    Lines in <span>red</span> indicate a difference in the configuration.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Comparing-Backups-Step3-dark.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Restoring a Backup

<Note>
  Restoring a backup is a bit of a manual process still at the moment, but we are working on implementing an easier way to restore backups directly from the Altostrat UI.
</Note>

<Steps>
  <Step title="Locate the Backup">
    In <strong>Config Backups</strong>, click the backup you want to restore and then click on the <strong>Download</strong> button to begin downloading the backup file.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Log in to your Device">
    Log in to your router (either locally, or via transient access), and then click on <strong> Files -> Upload</strong>

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step2-winbox.jpg" />
    </Frame>
  </Step>

  <Step title="Select your downloaded backup file.">
    Open your file manager application, and then navigate to where you downloaded your backup file in <strong>Step 1</strong> and then upload that script file to the device.

    * Alternatively, you skip just drag and drop the file from where you downloaded it, to the Winbox application.

    <Note>
      Wait for the upload to complete, as this may take some time, depending on the link speed between your machine and the device.
    </Note>

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step3-winbox.jpg" />
    </Frame>

    <Frame>
      <video autoPlay muted playsInline loop allowfullscreen controls className="w-full aspect-video" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step3.mp4" />
    </Frame>
  </Step>

  <Step title="Confirm the Restore">
    Once the upload has been completed, open up the <strong>Terminal</strong> in Winbox, and type the following command:

    * `import <filename>` and then press <strong> Enter/ Return </strong>

    Wait for the file to be imported successfully.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/backups/Restoring-Backup-Step4-winbox.jpg" />
    </Frame>
  </Step>
</Steps>

<Warning>
  Your router will most likely reboot, and or lose connectivity for a few minutes while all of the tunnels and configuration changes are taking place.

  It is <strong>highly recommended</strong> to make a backup before launching this activity.
</Warning>

***

## Best Practices

* **Schedule Regularly**: Ensure daily or weekly backups to keep your snapshots fresh.
* **Compare Before Restoring**: Review diffs to confirm you're reverting the correct changes.
* **Download & Archive**: Keep offline copies of critical points in your device's lifecycle.
* **Check Logs**: Use the [Orchestration Log](/management/orchestration-log) to confirm backup jobs and spot failures or interruptions.


# Device Tags
Source: https://docs.sdx.altostrat.io/management/device-tags

Organize and categorize your MikroTik devices with custom tags in Altostrat.

![Placeholder: Device Tags Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/device-tags-hero-placeholder.jpg)

**Device Tags** help you **categorize** and **filter** MikroTik routers within Altostrat. By assigning one or more labels, you can quickly locate devices by location, function, or status.

## Why Use Tags?

* **Organization**
  Group devices by **region**, **role**, or **environment** (e.g., “Branch APs,” “Datacenter Core,” “Testing Lab”).
* **Filtering**
  In the **Sites** view, filter devices by tag to see only those relevant to your current task.
* **Multi-Tag**
  A single device can carry **multiple tags** if it belongs to multiple categories.

## Adding Tags

<Steps>
  <Step title="Navigate to Sites">
    From the <strong>Dashboard</strong>, click <strong>Sites</strong>. You’ll see a list of all registered devices.
  </Step>

  <Step title="Edit Tags">
    Hover over a site (or device) entry to reveal an <strong>Add Tag</strong> or <strong>Edit Tags</strong> button.
  </Step>

  <Step title="Create or Assign Tags">
    In the pop-up or sidebar, type the name of a new tag or select from existing ones. Choose a color if desired. Confirm to apply.
  </Step>
</Steps>

![Placeholder: Adding Device Tags](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/device-tags-adding-placeholder.jpg)

***

## Removing or Editing Tags

<Steps>
  <Step title="Open Tags Editor">
    Hover over the site again and select <strong>Edit Tags</strong>.
  </Step>

  <Step title="Remove or Update">
    Click on a tag to remove it, or rename its label if supported (usually by creating a new tag with the desired name).
  </Step>
</Steps>

<Note>
  If no devices remain with a particular tag, Altostrat automatically **deletes** that unused tag from the system.
</Note>

***

## Filtering by Tags

1. **Sites View**
   In the **Sites** list, look for a **Filter by Tag** dropdown or button.
2. **Select the Desired Tag**
   Only devices carrying that tag appear, simplifying device management for large organizations.

![Placeholder: Device Tags Filter](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/device-tags-filter-placeholder.jpg)

***

## Best Practices

* **Use Clear, Meaningful Names**: Keep tags concise yet descriptive (e.g., “Floor-1,” “High-Priority,” “Customer-A”).
* **Combine Tags**: A device can have “NY-Office,” “Production,” and “Firewall” simultaneously.
* **Routine Cleanup**: Remove or rename obsolete tags to maintain clarity and consistency across your environment.
* **Enforce a Tagging Convention**: Decide on a standard format (e.g., location/function, etc.) to keep your docs tidy.


# Faults
Source: https://docs.sdx.altostrat.io/management/faults

Monitor and troubleshoot disruptions or issues in your network via Altostrat.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Faults-Black.png" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Faults-White.png" />
</Frame>

Altostrat **Faults** represent any disruptions or issues at your site—like **loss of connectivity**, **service degradation**, or **hardware failures**. The **Faults Dashboard** helps you **monitor** these in real-time and respond swiftly.

## What Are Faults?

A **Fault** signals a potential network problem, such as:

* **Heartbeat Failures** (router stops reporting)
* **WAN Tunnel Offline** (a monitored interface goes down)
* **Site Rebooted** (unexpected or scheduled device restart)

## How Faults Are Logged

Altostrat automatically detects and logs fault conditions. For example:

* **Heartbeat Checks** run every 30 seconds. If 10 consecutive checks fail, a fault entry is created.
* **Start Time** is backdated to when the first missed heartbeat occurred.
* **End Time** logs when communication is restored.

## Recent Faults Dashboard

<Steps>
  <Step title="Dashboard Overview">
    From your main <strong>Dashboard</strong>, locate the <strong>Recent Faults</strong> tile. This shows any new or ongoing faults in the last 24 hours.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Recent-Faults-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Recent-Faults-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="View Fault Details">
    Click a fault entry to see more info, including timestamps, fault types, and affected devices.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Recent-Faults-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Recent-Faults-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

<Note>If you haven't had any recent faults, the tile will be empty.</Note>

***

## Site-Specific Fault Logs

<Steps>
  <Step title="Open the Site">
    In Altostrat, go to <strong>Sites</strong>, then pick a site you want to investigate.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Site-Specific-Faults-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Site-Specific-Faults-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Select Fault Event Log">
    On the site's overview page, find <strong>Faults</strong> or <strong>Fault Event Log</strong>. Click it to view the site's entire fault history.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Site-Specific-Faults-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/faults/Site-Specific-Faults-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

Here, you can scroll through **historical faults**, including those older than 24 hours.

***

## Interpreting Faults

* **WAN Tunnel Offline**
  Indicates a disruption in the [Management VPN](/management/management-vpn) or a specific WAN interface.
* **Site Rebooted**
  Logged if the router restarts, either by user action or an unexpected power cycle.
* **Site Offline**
  A total loss of communication between the site and Altostrat.

### Downtime Calculations

Each fault also includes **downtime**. If the event overlaps your [Business Hour Policy](/core-concepts/notification-groups), this period is tallied in SLA or uptime reports.

***

## Tips & Troubleshooting

* **Use the Orchestration Log**
  Check the [Orchestration Log](/management/orchestration-log) to see any recent scripts or commands that might have triggered a reboot or changed configs.
* **Investigate WAN**
  If you see frequent **WAN Tunnel Offline** faults, verify your [WAN Failover](/management/wan-failover) settings or ISP connections.
* **Combine with Notifications**
  Tie faults to [Notification Groups](/core-concepts/notification-groups) so the right people get alerted immediately.


# Management VPN
Source: https://docs.sdx.altostrat.io/management/management-vpn

How MikroTik devices connect securely to Altostrat for real-time monitoring and management.

Altostrat's **Management VPN** creates a secure tunnel for **real-time monitoring** and **remote management** of your MikroTik devices—even those behind NAT firewalls. This tunnel uses **OpenVPN** over **TCP 8443**, ensuring stable performance across varied network conditions.

```mermaid
flowchart LR
    A((MikroTik Router)) -->|OpenVPN TCP 8443| B([Regional Servers<br>mgnt.sdx.altostrat.io])
    B --> C([BGP Security Feeds])
    B --> D([DNS Content Filter])
    B --> E([Netflow Collector])
    B --> F([SNMP Collector])
    B --> G([Synchronous API])
    B --> H([System Log ETL])
    B --> I([Transient Access])
```

## How It Works

1. **OpenVPN over TCP**
   Routers connect to `<mgnt.sdx.altostrat.io>:8443`, allowing management-plane traffic to flow securely, even through NAT.
2. **Regional Servers**
   VPN tunnels terminate on regional clusters worldwide for optimal latency and redundancy.
3. **High Availability**
   DNS-based geolocation resolves `mgnt.sdx.altostrat.io` to the closest cluster. Connections automatically reroute during regional outages.

***

## Identification & Authentication

* **Unique UUID**: Each management VPN tunnel is uniquely identified by a v4 UUID, which also appears as the **PPP profile** name on the MikroTik.
* **Authentication**: Certificates are managed server-side—no manual certificate installation is required on the router.

<Note>
  Comments like <code>Altostrat: Management Tunnel</code> often appear in Winbox to denote the VPN interface or PPP profile.
</Note>

## Security & IP Addressing

* **Encryption**: AES-CBC or a similarly secure method is used.
* **Certificate Management**: All certs and key material are hosted centrally by Altostrat.
* **CGNAT Range**: Tunnels use addresses in the `100.64.0.0/10` space, avoiding conflicts with typical private LAN ranges.

***

## Management Traffic Types

Through this tunnel, the router securely transmits:

* **BGP Security Feeds**
* **DNS Requests** for content filtering
* **Traffic Flow (NetFlow)** data
* **SNMP** metrics
* **Synchronous API** calls
* **System logs**
* **Transient Access** sessions for on-demand remote control

Nonessential or user traffic does **not** route through the Management VPN by default, keeping overhead low.

***

## Logging & Monitoring

1. **OpenVPN logs** on Altostrat's regional servers track connection events, data transfer metrics, and remote IP addresses.
2. **ICMP Latency** checks monitor ping times between the router and the regional server.
3. **Metadata** like connection teardown or failures appear in the [Orchestration Log](/management/orchestration-log) for auditing.

***

## Recovery of the Management VPN

If the tunnel is **accidentally deleted** or corrupted:

<Steps>
  <Step title="Go to Site Overview">
    In the Altostrat portal, select your site that lost the tunnel.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Recreate Management VPN">
    Look for a <strong>Recreate</strong> or <strong>Restore Management VPN</strong> button. Clicking it triggers a job to wipe the old config and re-establish the tunnel.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Confirm Connection">
    Wait a few seconds, then check if the router shows as <strong>Online</strong>. The tunnel should reappear under <em>Interfaces</em> in Winbox, typically labeled with the site's UUID.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step3-dark.jpg" />
    </Frame>

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/management-vpn/Recovering-Management-VPN-Step3_2-winbox.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Usage & Restrictions of the Synchronous API

* **Read Operations**: Real-time interface stats and logs flow through this API.
* **Critical Router Tasks**: Certain operations like reboots also pass here.
* **No Full Configuration**: For major config changes, Altostrat uses asynchronous job scheduling to ensure reliability and rollback options.

If you need advanced control-plane manipulation, see [Control Plane Policies](/core-concepts/control-plane) or consult the [Management VPN Logs](/management/orchestration-log) for debugging.


# Managing WAN Failover
Source: https://docs.sdx.altostrat.io/management/managing-wan-failover

Create, reorder, and troubleshoot WAN Failover configurations for reliable multi-link setups.

This page details **advanced management** of WAN Failover, including manual failover, reordering interfaces, and fine-tuning routing distances.

## Setting up WAN Failover

If you haven't already created a WAN Failover configuration, see [WAN Failover](/management/wan-failover).

## Manual Failover and Interface Order

If you ever want to **manually initiate failover**:

1. Return to **WAN Failover** settings.
2. Rearrange interface priority using the **up/down arrows**.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4-dark.jpg" />
</Frame>

3. Confirm the new priority.

<Frame>
  <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4_2-light.jpg" />

  <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4_2-dark.jpg" />
</Frame>

<Warning>
  Brief downtime may occur as the router switches from one interface to another.
</Warning>

***

## Routing Distances

**Routing Distance** determines which default route the router prefers.

<Steps>
  <Step title="Log into Your Router">
    Use <strong>Transient Access</strong> or <strong>WinBox</strong> to open a session.

    If you haven't already used Transient Access, see [Transient Access](/getting-started/transient-access).
  </Step>

  <Step title="View IP Routes">
    Go to <strong>IP → Routes</strong> in WinBox or run <code>ip route print</code> in CLI.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Routing-Distance-Step2.jpg" />
    </Frame>

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Routing-Distance-Step2-cli.jpg" />
    </Frame>
  </Step>

  <Step title="Modify Distance">
    Double-click on a default route (<code>0.0.0.0/0</code>) and adjust its <strong>distance</strong> value. Lower distance = higher priority.

    {/* Images */}

    <Frame>
      <img src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Routing-Distance-Step3.jpg" />
    </Frame>

    <Note>
      Do not change internet links to a <strong>0</strong> distance value, as this will have undesired consequences.
    </Note>

    <Note>
      Depending on the Internet medium used, as well as the uplink connection (<strong>DHCP, PPPoE, Static, etc.</strong>) you may not have the option to change the routing distance here, and you will need to change the routing distance on the interface itself.
    </Note>
  </Step>

  <Step title="Apply">
    Save changes. Routes instantly update with the new priorities.
  </Step>
</Steps>

***

## Fine-Tuning WAN Links

1. **Check Orchestration Logs**
   Confirm the router receives and applies changes.
2. **Review Failover Thresholds**
   Some advanced setups let you specify how quickly the router decides a link is “down.”
3. **Monitor Interface Health**
   Inspect SNMP or throughput metrics for anomalies.

***

## Removing WAN Failover

<Steps>
  <Step title="Open WAN Failover">
    In Altostrat, select your site and go to the <strong>WAN Failover</strong> tab.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1-dark.jpg" />
    </Frame>

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Deactivate">
    Click <strong>Deactivate</strong> or <strong>Remove</strong>. Confirm if prompted. The router reverts to single-WAN or default routing.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Removing-WAN-Failover-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Removing-WAN-Failover-Step2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

<Note>
  All interface configurations for WAN Failover will be cleared once you remove this service.
</Note>

***

## Troubleshooting

* **No Failover During Outage**
  Verify your <strong>DHCP</strong> or <strong>static routes</strong> are correctly set.
* **Repeated Flapping**
  If an unstable link rapidly fails and recovers, consider increasing the <em>detection interval</em> or using a more stable primary link.
* **Lost Remote Access**
  If you're forcibly failing over from a remote interface, have a backup connection or use [Transient Access](/getting-started/transient-access) through the Management VPN to restore connectivity.

Use these tips and the info above to manage WAN Failover smoothly and maintain high availability across multiple internet links.


# Orchestration Log
Source: https://docs.sdx.altostrat.io/management/orchestration-log

Track scripts, API calls, and automated tasks performed by Altostrat on your MikroTik devices.

Altostrat's **Orchestration Log** provides **transparent visibility** into the **actions** performed on your MikroTik devices. It captures **scripts**, **API calls**, and **automated tasks**, allowing you to monitor and troubleshoot changes across your network.

## Why the Orchestration Log Matters

* **Audit Trail**
  Keep a record of who did what and when—essential for compliance.
* **Debugging**
  If something goes wrong with a script or API call, you can quickly spot the failure reason.
* **Monitoring Automated Tasks**
  See all scheduled or triggered actions performed by Altostrat's backend on your routers.

## Accessing the Orchestration Log

<Steps>
  <Step title="Open the Site in Altostrat">
    From your <strong>Dashboard</strong>, click on <strong>Sites</strong>, then select the site you want to investigate.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step1-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Navigate to Orchestration Log">
    In the site's overview page, look for the <strong>Orchestration Log</strong> tab or menu option. Click it to open the device's orchestration records.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step2_1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step2_1-dark.jpg" />
    </Frame>

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step2_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/orchestration-log/Accessing-Orchestration-Log-Step2_2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

## Understanding the Log Interface

Each entry in the Orchestration Log typically shows:

* **Description**: Name or purpose of the action, e.g., “Create Configuration Backup” or “Deploy Policy.”
* **Created / Run**: Timestamp when the action was **initiated** and when it was **executed** (if applicable).
* **Status**: Indicates if the action is <em>Pending</em>, <em>Completed</em>, or <em>Failed</em>.

### Expanded Log Entry

Clicking an entry opens **detailed information** about the job:

* **Timestamped Events**: Each step, from job creation to completion.
* **Device Information**: Target device(s), site ID, or associated metadata.
* **Job Context**: JSON payload containing job ID, scripts, API calls, or additional parameters.
* **Status Messages**: “Job created,” “Script downloaded,” “Express execution requested,” etc.

## How to Use the Orchestration Log

1. **Track Automated Jobs**
   Monitor things like firmware updates, backup schedules, or script executions.
2. **Verify Success**
   Ensure tasks completed without errors. Look for <em>Completed</em> or <em>Failed</em> statuses.
3. **Troubleshoot Failures**
   If a script failed, check the <em>Status Message</em> or <em>Job Context</em> for clues.
4. **Copy JSON**
   For deeper analysis, copy the payload and share it with support or store it in your records.

## Best Practices

* **Regularly Check**: Make orchestration log reviews part of your change-management process.
* **Filter by Status**: Look for frequent failures or pending actions that never complete.
* **Combine with Notification Groups**: If you want alerts on specific job failures, create relevant rules in [Notification Groups](/core-concepts/notification-groups).


# Regional Servers
Source: https://docs.sdx.altostrat.io/management/regional-servers

Improve performance and minimize single points of failure with globally distributed clusters.

![Placeholder: Regional Servers Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/regional-servers-hero-placeholder.jpg)

Altostrat’s **regional servers** form a **globally distributed infrastructure** that optimizes routing and reduces latency for routers connecting to the [Management VPN](/management/management-vpn). By **geographically** locating servers in different continents, we ensure minimal single points of failure.

## Purpose of Regional Servers

* **Optimal Routing**: DNS resolves each router to the closest regional server, cutting down on round-trip times.
* **Reduced Latency**: Traffic from your MikroTik device travels a shorter distance before entering Altostrat’s management plane.
* **High Availability**: If one region encounters downtime, DNS reroutes connections to another operational cluster.

## Example DNS Flow

```mermaid
flowchart LR
    A((mgnt.sdx.altostrat.io)) --> B[DNS-based Geo Routing]
    B -->|Resolves Africa region| C(africa.sdx.altostrat.io)
    C --> D[Load Balancer]
    D --> E(afr1.sdx...)
    D --> F(afr2.sdx...)
    D --> G(afr3.sdx...)
    D --> H(afr4.sdx...)
```

## Available Regional Servers

| **Location**                    | **FQDN**                 | **IP Address**   |
| ------------------------------- | ------------------------ | ---------------- |
| 🇩🇪 Frankfurt, Germany         | `europe.altostrat.io`    | `45.63.116.182`  |
| 🇿🇦 Johannesburg, South Africa | `africa.altostrat.io`    | `139.84.235.246` |
| 🇦🇺 Melbourne, Australia       | `australia.altostrat.io` | `67.219.108.29`  |
| 🇺🇸 Seattle, USA               | `usa.altostrat.io`       | `45.77.214.231`  |

*Last updated: 10 May 2024*

## Geographical DNS Routing

<Steps>
  <Step title="DNS Query">
    When a MikroTik router asks for <code>mgnt.sdx.altostrat.io</code>, Altostrat’s DNS determines the nearest regional
    cluster based on the router’s IP geolocation.
  </Step>

  <Step title="Server Assignment">
    The query returns a server address (e.g., <code>europe.altostrat.io</code>) located in Germany for routers in
    nearby regions.
  </Step>

  <Step title="Performance Boost">
    Shorter travel distance = better latency and faster management-plane interactions. During a regional outage, DNS
    automatically resolves to the next available server cluster.
  </Step>
</Steps>

## Best Practices

* **Default Routing**
  Let your MikroTik resolve `mgnt.sdx.altostrat.io` dynamically. Don’t hardcode IPs unless necessary.
* **Failover Awareness**
  If your region is offline, the router automatically reconnects to another operational cluster once DNS updates.
* **Monitor**
  Keep an eye on the [Orchestration Log](/management/orchestration-log) for any server-switching events.

If you have questions about a specific region or plan to deploy in an unlisted area, contact [Altostrat Support](/support) for guidance on expansions or custom routing.


# Short Links
Source: https://docs.sdx.altostrat.io/management/short-links

Simplify long, signed URLs into user-friendly short links for Altostrat notifications and emails.

![Placeholder: Short Links Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/short-links-hero-placeholder.jpg)

Altostrat uses a **URL shortening service** to turn long, signed links into simpler, user-friendly short links. These short links are primarily used in **emails and notifications** to preserve readability.

## Introduction

All Altostrat-generated links contain a **signature** to ensure they haven’t been tampered with. Because these signatures can be lengthy, we employ a **short-link domain** to keep links concise.

## Link Format

The default structure for a short link looks like:

```text
https://altostr.at/{short-code}
```

* **`altostr.at`** is the dedicated short-link domain.
* **`{short-code}`** uniquely maps back to the full, signed URL in Altostrat’s database.

## Using Short Links

<Steps>
  <Step title="Receive a Link">
    You’ll encounter short links in emails, notifications, or shared references from Altostrat. For example, <strong>[https://altostr.at/abc123](https://altostr.at/abc123)</strong>.
  </Step>

  <Step title="Click the Link">
    When clicked, Altostrat verifies the embedded signature to ensure the link remains valid.
  </Step>

  <Step title="Redirect">
    If valid, the short link redirects to the intended long URL. Otherwise, you’ll see an error if the link is expired or tampered with.
  </Step>
</Steps>

## Rate Limits

Altostrat imposes **60 requests per minute per IP address** for short-link requests to:

* **Prevent abuse** (e.g., bots or DDoS attempts).
* **Maintain stability** across the URL shortener service.

The **target link** itself may have separate rate limits, potentially blocking requests if abused.

## Expiry

<Note>
  If no specific expiry is set, short links **automatically expire** after <strong>90 days</strong>.
</Note>

Once expired, the link produces an error if clicked. If you need a permanent link or want to re-share it, generate a fresh short link or direct users to the main portal reference.

## Security

Because each short link references a **signed** long URL:

* **Tamper-Proof**: The signature check prevents malicious rewrites.
* **No Plain-Text Secrets**: Sensitive query parameters stay hidden in the signed link, not the short code.

Should you encounter expired or invalid links, contact [Altostrat Support](/support).


# WAN Failover
Source: https://docs.sdx.altostrat.io/management/wan-failover

Enhance reliability by combining multiple internet mediums for uninterrupted cloud connectivity.

{/* ![Placeholder: WAN Failover Hero](../images/wan-failover-hero-placeholder.jpg) */}

**WAN Failover** lets you **combine multiple internet connections** to ensure stable cloud connectivity, even if one or more links fail. Continuously monitoring each WAN interface, Altostrat automatically reroutes traffic to a healthy link if the primary link goes down.

## Key Benefits

* **Automatic Failover**
  Traffic switches to a backup link within seconds of a primary link failure.
* **Link Monitoring**
  Throughput and SNMP metrics are collected for real-time diagnostics.
* **Interface Prioritization**
  Easily rearrange interfaces to set your preferred connection order.
* **Detailed Traffic Statistics**
  Per-link metrics like latency, packet loss, and jitter help you troubleshoot.

***

## Setting Up WAN Failover

<Steps>
  <Step title="Navigate to the WAN Failover Page">
    From your Altostrat dashboard, go to your site's <strong>WAN Failover</strong> section.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1-dark.jpg" />
    </Frame>

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step1_2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Enable WAN Failover">
    On the WAN Failover overview, click <strong>Enable</strong> or <strong>Add</strong> to activate the service.
    If you see unconfigured interfaces, you can proceed to set them up next.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step2-dark.jpg" />
    </Frame>
  </Step>

  <Step title="Configure Interfaces">
    Each WAN interface represents a network medium (e.g., DSL, fiber, LTE).

    * Click the <strong>gear icon</strong> next to <strong>WAN 1</strong> to set an interface.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step3-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step3-dark.jpg" />
    </Frame>

    * Provide details like <em>gateway IP</em> and <em>physical/logical interface</em> name.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step3_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step3_2-dark.jpg" />
    </Frame>

    * Repeat for <strong>WAN 2</strong>, <strong>WAN 3</strong>, etc., if available.
  </Step>

  <Step title="Save & Prioritize">
    Once interfaces are configured, you can adjust their order to set which link is primary or backup.

    {/* Images */}

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4-dark.jpg" />
    </Frame>

    Click <strong>Confirm Priority</strong> when done.

    <Frame>
      <img className="block dark:hidden" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4_2-light.jpg" />

      <img className="hidden dark:block" height="1000" src="https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/management/wan-failover/Creating-WAN-Failover-Step4_2-dark.jpg" />
    </Frame>
  </Step>
</Steps>

***

## Best Practices

* **Monitor** the [Orchestration Log](/management/orchestration-log) for link failover events.
* **Set Interface Priorities** carefully to avoid redundant failovers.
* **Combine** with [Security Essentials](/core-concepts/security-essentials) to protect each WAN interface.
* **Test** failover occasionally by unplugging or simulating link loss to confirm expected behavior.


# Installable PWA
Source: https://docs.sdx.altostrat.io/resources/installable-pwa

Learn how to install Altostrat's Progressive Web App (PWA) for an app-like experience and offline support.

![Placeholder: Installable PWA Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/installable-pwa-hero-placeholder.jpg)

A **Progressive Web App (PWA)** offers a more **app-like** experience for your documentation or portal, complete with offline caching, background updates, and the ability to **launch** from your device’s home screen or application list.

## What is a PWA?

* **Web + Native Fusion**
  PWAs combine the best of **web pages** with **native app** elements (e.g., offline capabilities).
* **Standalone Interface**
  Once installed, the PWA runs like an app without needing a separate browser tab.
* **Background Updates**
  A service worker checks for fresh content and prompts you to refresh if a new version is available.

***

## Installing the Altostrat PWA

<Steps>
  <Step title="Open Altostrat in a Supported Browser">
    Use <strong>Google Chrome</strong>, <strong>Microsoft Edge</strong>, or any modern browser that supports PWA
    installation. Go to your Altostrat docs or portal URL.
  </Step>

  <Step title="Look for the Install Prompt">
    In your browser’s address bar, you may see an <strong>Install</strong> or <strong>+</strong> icon. It could also
    appear in the browser menu (e.g., <em>Chrome → More Tools → Create shortcut</em>).
  </Step>

  <Step title="Confirm Installation">
    A pop-up will ask if you want to install the app. Click <strong>Install</strong> to add the Altostrat PWA to
    your device.
  </Step>
</Steps>

![Placeholder: PWA Installation Prompt](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/pwa-install-prompt-placeholder.jpg)

### Launching the Installed App

Once installed, the PWA appears alongside other apps on your **home screen** (mobile) or **application list** (desktop). Log in if necessary, and you’ll have an **immersive** experience without a traditional browser UI.

***

## PWA Updates

When the PWA starts, a **service worker** checks for updates:

1. **Background Download**
   If a newer version exists, it silently downloads.
2. **Prompt to Refresh**
   You’ll see a notification or dialog asking to refresh the app. Accepting applies the update.

<Note>
  Authentication usually happens at <code>[https://auth.altostrat.app](https://auth.altostrat.app)</code>. If you’re not logged in, the PWA
  redirects there before returning to the app.
</Note>

***

## Tips & Best Practices

* **Pin It**: On mobile, place the PWA icon on your home screen for quick access.
* **Offline Usage**: Some content may remain accessible offline, depending on how your caching is configured.
* **Uninstalling**: Remove it like any other app—on desktop, right-click the app icon; on mobile, press and hold to uninstall.
* **Account Security**: If using shared devices, remember to log out of the PWA when done.

By installing the **Altostrat PWA**, you get a streamlined, **app-like** interface for documentation, management tasks, and real-time alerts, all within your device’s native environment. If you have issues or need assistance, reach out to [Altostrat Support](/support).


# Password Policy
Source: https://docs.sdx.altostrat.io/resources/password-policy

Requirements for secure user passwords in Altostrat.

![Placeholder: Password Policy Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/password-policy-hero-placeholder.jpg)

Altostrat enforces **strong password requirements** to enhance account security. This document outlines those requirements and details how passwords are **securely stored**.

## Password Requirements

1. **Minimum Length**: At least **8 characters**.
2. **Required Characters**:

* **Uppercase Letter** (A–Z)
* **Lowercase Letter** (a–z)
* **Number** (0–9)
* **Special Character** (e.g., `!`, `@`, `#`, `$`)

3. **Password History**: You cannot reuse any of your **last 3** passwords.

## Secure Storage

Altostrat **never** stores passwords in plain text. Instead, passwords are hashed (using something like **bcrypt**) so:

* **One-Way Hashing**: During login, Altostrat hashes the entered password and compares it to the stored hash.
* **Hash Comparison**: If they match, the user is authenticated.
* **No Plain Text**: Even if the database is compromised, attackers cannot reverse the hashed passwords.

## Best Practices

* **Use Unique Passwords**: Reusing passwords across multiple services puts all accounts at risk.
* **Enable MFA (2FA)** if available for an extra security layer.
* **Password Manager**: Consider using one to generate and store complex passwords.
* **Regular Rotations**: Change passwords periodically, especially after any security incident.

## Changing or Resetting Your Password

1. **Portal Users**

* Go to your account settings in Altostrat.
* Find the **Change Password** option and enter a new one meeting the criteria above.

2. **Forgotten Password**

* Use the **Forgot Password** link at [https://auth.altostrat.app](https://auth.altostrat.app).
* An email with a reset link will be sent. Check spam or junk folders if not received.

<Note>
  If you are required to adhere to a specific organizational policy that is stricter than Altostrat’s defaults, please
  contact your administrator for any additional requirements.
</Note>


# Supported SMS Regions
Source: https://docs.sdx.altostrat.io/resources/supported-sms-regions

List of countries where Altostrat's SMS delivery is enabled, plus any high-risk or unsupported regions.

![Placeholder: Supported SMS Regions Hero](https://mintlify.s3.us-west-1.amazonaws.com/altostratnetworks/images/supported-sms-regions-hero-placeholder.jpg)

<Warning>
  SMS delivery services are not available in all regions. Check the lists below to confirm if your country is
  supported.
</Warning>

Altostrat uses **phone number prefixes** to determine if SMS delivery is allowed. Some countries are **disabled** due to high risk or minimal user volume.

## Supported Regions

<AccordionGroup>
  <Accordion title="North America">
    | **Country Name**                                                | **Number Prefix**      |
    | --------------------------------------------------------------- | ---------------------- |
    | Anguilla                                                        | +1264                  |
    | Ascension                                                       | +247                   |
    | Belize                                                          | +501                   |
    | Cayman Islands                                                  | +1345                  |
    | Curaçao & Caribbean Netherlands (Bonaire, Sint Eustatius, Saba) | +599                   |
    | Dominican Republic                                              | +1849                  |
    | El Salvador                                                     | +503                   |
    | Guadeloupe                                                      | +590                   |
    | Honduras                                                        | +504                   |
    | Mexico                                                          | +52                    |
    | Panama                                                          | +507                   |
    | St Lucia                                                        | +1758                  |
    | Trinidad & Tobago                                               | +1868                  |
    | Virgin Islands, British                                         | +1284                  |
    | Antigua & Barbuda                                               | +1268                  |
    | Bahamas                                                         | +1242                  |
    | Bermuda                                                         | +1441                  |
    | Costa Rica                                                      | +506                   |
    | Dominica                                                        | +1767                  |
    | Greenland                                                       | +299                   |
    | Guatemala                                                       | +502                   |
    | Jamaica                                                         | +1876                  |
    | Montserrat                                                      | +1664                  |
    | Puerto Rico                                                     | +1787                  |
    | St Pierre & Miquelon                                            | +508                   |
    | Turks & Caicos Islands                                          | +1649                  |
    | Virgin Islands, U.S.                                            | +1340                  |
    | Aruba                                                           | +297                   |
    | Barbados                                                        | +1246                  |
    | Canada                                                          | +1                     |
    | Cuba                                                            | +53                    |
    | Dominican Republic (Alt prefixes)                               | +1829, +1809, +1809201 |
    | Grenada                                                         | +1473                  |
    | Haiti                                                           | +509                   |
    | Martinique                                                      | +596                   |
    | Nicaragua                                                       | +505                   |
    | St Kitts & Nevis                                                | +1869                  |
    | St Vincent & the Grenadines                                     | +1784                  |
    | United States                                                   | +1                     |
  </Accordion>

  <Accordion title="Asia">
    | **Country Name**     | **Number Prefix** |
    | -------------------- | ----------------- |
    | Afghanistan          | +93               |
    | Bahrain              | +973              |
    | Brunei               | +673              |
    | East Timor           | +670              |
    | India                | +91               |
    | Iraq                 | +964              |
    | Jordan               | +962              |
    | Kuwait               | +965              |
    | Lebanon              | +961              |
    | Maldives             | +960              |
    | Nepal                | +977              |
    | Turkmenistan         | +993              |
    | Vietnam              | +84               |
    | Armenia              | +374              |
    | Cambodia             | +855              |
    | Georgia              | +995              |
    | Kyrgyzstan           | +996              |
    | Macau                | +853              |
    | Mongolia             | +976              |
    | Philippines          | +63               |
    | Saudi Arabia         | +966              |
    | Syria                | +963              |
    | Thailand             | +66               |
    | United Arab Emirates | +971              |
    | Yemen                | +967              |
    | Bhutan               | +975              |
    | China                | +86               |
    | Hong Kong            | +852              |
    | Iran                 | +98               |
    | Japan                | +81               |
    | Korea (Republic of)  | +82               |
    | Laos                 | +856              |
    | Malaysia             | +60               |
    | Myanmar              | +95               |
    | Qatar                | +974              |
    | Singapore            | +65               |
    | Taiwan               | +886              |
    | Türkiye (Turkey)     | +90               |
    | Uzbekistan           | +998              |
  </Accordion>

  <Accordion title="Europe">
    | **Country Name**                   | **Number Prefix** |
    | ---------------------------------- | ----------------- |
    | Albania                            | +355              |
    | Andorra                            | +376              |
    | Austria                            | +43               |
    | Belarus                            | +375              |
    | Belgium                            | +32               |
    | Bosnia & Herzegovina               | +387              |
    | Bulgaria                           | +359              |
    | Canary Islands                     | +3491             |
    | Croatia                            | +385              |
    | Cyprus                             | +357              |
    | Czech Republic                     | +420              |
    | Denmark                            | +45               |
    | Estonia                            | +372              |
    | Faroe Islands                      | +298              |
    | Finland/Aland Islands              | +358              |
    | France                             | +33               |
    | Germany                            | +49               |
    | Gibraltar                          | +350              |
    | Greece                             | +30               |
    | Guernsey/Jersey                    | +44               |
    | Hungary                            | +36               |
    | Iceland                            | +354              |
    | Ireland                            | +353              |
    | Isle of Man                        | +44               |
    | Italy                              | +39               |
    | Kosovo                             | +383              |
    | Latvia                             | +371              |
    | Liechtenstein                      | +423              |
    | Lithuania                          | +370              |
    | Luxembourg                         | +352              |
    | Malta                              | +356              |
    | Moldova                            | +373              |
    | Monaco                             | +377              |
    | Montenegro                         | +382              |
    | Netherlands                        | +31               |
    | Norway                             | +47               |
    | Poland                             | +48               |
    | Portugal                           | +351              |
    | North Macedonia                    | +389              |
    | Romania                            | +40               |
    | San Marino                         | +378              |
    | Serbia                             | +381              |
    | Slovakia                           | +421              |
    | Slovenia                           | +386              |
    | Spain                              | +34               |
    | Sweden                             | +46               |
    | Switzerland                        | +41               |
    | Turkey Republic of Northern Cyprus | +90               |
    | Ukraine                            | +380              |
    | United Kingdom                     | +44               |
    | Vatican City                       | +379              |
  </Accordion>

  <Accordion title="South America">
    | **Country Name** | **Number Prefix** |
    | ---------------- | ----------------- |
    | Argentina        | +54               |
    | Bolivia          | +591              |
    | Brazil           | +55               |
    | Chile            | +56               |
    | Colombia         | +57               |
    | Ecuador          | +593              |
    | Falkland Islands | +500              |
    | French Guiana    | +594              |
    | Guyana           | +592              |
    | Paraguay         | +595              |
    | Peru             | +51               |
    | Suriname         | +597              |
    | Uruguay          | +598              |
    | Venezuela        | +58               |
  </Accordion>

  <Accordion title="Africa">
    | **Country Name**       | **Number Prefix** |
    | ---------------------- | ----------------- |
    | Angola                 | +244              |
    | Benin                  | +229              |
    | Botswana               | +267              |
    | Burkina Faso           | +226              |
    | Burundi                | +257              |
    | Cameroon               | +237              |
    | Cape Verde             | +238              |
    | Central Africa         | +236              |
    | Chad                   | +235              |
    | Comoros                | +269              |
    | Congo, Dem Rep         | +243              |
    | Djibouti               | +253              |
    | Egypt                  | +20               |
    | Equatorial Guinea      | +240              |
    | Eritrea                | +291              |
    | Ethiopia               | +251              |
    | Gabon                  | +241              |
    | Gambia                 | +220              |
    | Ghana                  | +233              |
    | Guinea                 | +224              |
    | Guinea-Bissau          | +245              |
    | Ivory Coast            | +225              |
    | Kenya                  | +254              |
    | Lesotho                | +266              |
    | Liberia                | +231              |
    | Libya                  | +218              |
    | Madagascar             | +261              |
    | Malawi                 | +265              |
    | Mali                   | +223              |
    | Mauritania             | +222              |
    | Mauritius              | +230              |
    | Morocco/Western Sahara | +212              |
    | Mozambique             | +258              |
    | Namibia                | +264              |
    | Niger                  | +227              |
    | Réunion/Mayotte        | +262              |
    | Rwanda                 | +250              |
    | Sao Tome & Principe    | +239              |
    | Senegal                | +221              |
    | Seychelles             | +248              |
    | Sierra Leone           | +232              |
    | Somalia                | +252              |
    | South Africa           | +27               |
    | South Sudan            | +211              |
    | Sudan                  | +249              |
    | Swaziland (Eswatini)   | +268              |
    | Tanzania               | +255              |
    | Togo                   | +228              |
    | Uganda                 | +256              |
    | Zambia                 | +260              |
  </Accordion>

  <Accordion title="Oceania">
    | **Country Name**                | **Number Prefix** |
    | ------------------------------- | ----------------- |
    | American Samoa                  | +1684             |
    | Australia / Cocos / Xmas Island | +61               |
    | Cook Islands                    | +682              |
    | Fiji                            | +679              |
    | French Polynesia                | +689              |
    | Guam                            | +1671             |
    | Kiribati                        | +686              |
    | Marshall Islands                | +692              |
    | Micronesia                      | +691              |
    | New Caledonia                   | +687              |
    | New Zealand                     | +64               |
    | Niue                            | +683              |
    | Norfolk Island                  | +672              |
    | Northern Mariana Islands        | +1670             |
    | Palau                           | +680              |
    | Papua New Guinea                | +675              |
    | Samoa                           | +685              |
    | Solomon Islands                 | +677              |
    | Tonga                           | +676              |
    | Tuvalu                          | +688              |
    | Vanuatu                         | +678              |
  </Accordion>
</AccordionGroup>

***

## Unsupported Regions & Services

### High-Risk Regions

<AccordionGroup>
  <Accordion title="High-Risk Regions">
    | **Country Name**    | **Number Prefix** | **Region** |
    | ------------------- | ----------------- | ---------: |
    | Algeria             | +213              |     Africa |
    | Bangladesh          | +880              |       Asia |
    | Nigeria             | +234              |     Africa |
    | Tunisia             | +216              |     Africa |
    | Zimbabwe            | +263              |     Africa |
    | Palestine Territory | +970, +972        |       Asia |
    | Russia/Kazakhstan   | +7                |       Asia |
    | Sri Lanka           | +94               |       Asia |
    | Tajikistan          | +992              |       Asia |
    | Oman                | +968              |       Asia |
    | Pakistan            | +92               |       Asia |
    | Azerbaijan          | +994              |       Asia |
  </Accordion>
</AccordionGroup>

### Satellite & International Networks

<AccordionGroup>
  <Accordion title="Satellite/International">
    | **Network**           | **Number Prefix** |
    | --------------------- | ----------------- |
    | Inmarsat Satellite    | +870              |
    | Iridium Satellite     | +881              |
    | International Network | +883, +882        |
  </Accordion>
</AccordionGroup>

<Note>
  Service availability can change. Check periodically for updates or contact [Altostrat Support](/support) if you need
  an unsupported region enabled.
</Note>


# API Authentication
Source: https://docs.sdx.altostrat.io/sdx-api/authentication

Securely authenticate requests to the Altostrat SDX API using API Keys or OAuth 2.0.

# API Authentication

Welcome to the Altostrat SDX API documentation. This guide explains how to securely authenticate your requests depending on how you intend to interact with the platform.

**API Base URL:** `https://api.altostrat.io`

## Authentication Methods Overview

Altostrat SDX utilizes distinct authentication methods tailored to different use cases:

1. **API Keys (Developer API):**

* **Use Case:** For external developers, scripts, or services integrating with Altostrat SDX programmatically.
* **Mechanism:** Long-lived, team-specific API Keys used directly as Bearer tokens in the `Authorization` header.

2. **OAuth 2.0 (Web Application / SPA):**

* **Use Case:** Used by the official Altostrat SDX web application and potentially other first-party or trusted client applications authenticating *as a user*.
* **Mechanism:** Standard OAuth 2.0 flows (Authorization Code or Implicit Grant) result in short-lived JWT Bearer tokens managed by the client application.

3. **Internal M2M Tokens:**

* **Use Case:** Communication between Altostrat's internal backend microservices.
* **Mechanism:** Service-specific, private Bearer tokens. **Not available or documented for external use.**

## Developer API Authentication (Using API Keys)

To interact with the main Altostrat SDX API endpoints programmatically (e.g., managing teams, users, billing outside the official web UI), you need an API Key.

### Obtaining an API Key

* API Keys are generated within the Altostrat SDX web application.
* Navigate to your **Team Settings** > **API Credentials** section. *(Note: Exact UI path may vary)*.
* You can create multiple keys, typically one per integration or application, giving each a descriptive name.
* Each API Key is **scoped to the specific Team** it was created under. It can only access resources associated with that team.

### API Key Format

An API Key has the following structure:
`{tokenId}:{teamId}:{secret}`

* `tokenId`: The unique UUID of the API token record.
* `teamId`: The UUID of the team the token belongs to.
* `secret`: A randomly generated secret string (62 characters).

**Important:** The `{secret}` part is only shown **once** upon creation. Store it securely.

### Using the API Key

Include your full API Key in the `Authorization` header of your API requests using the `Bearer` scheme:

```http
GET /teams HTTP/1.1
Host: api.altostrat.io
Authorization: Bearer 9c16437d-aaaa-bbbb-cccc-adfbfc156d0c:9b52d930-dddd-eeee-ffff-4c12dff85544:Kq5z...rA9p
Accept: application/json
Content-Type: application/json
```

*(Replace the example key with your actual API Key)*

### Security & Rate Limiting

* **Treat your API Keys like passwords.** Do not expose them in client-side code or public repositories.
* Generate separate keys for different applications and revoke any compromised keys immediately via the web UI.
* API requests using these keys are rate-limited to **60 requests per minute** per key. Exceeding this limit will result in `429 Too Many Requests` errors.

## Web Application / SPA Authentication (OAuth 2.0)

The official Altostrat SDX web application (and potentially other trusted clients) uses OAuth 2.0 to authenticate users.

* **Flow:** Users log in via the web interface (using username/password or an external Identity Provider like Google, Microsoft, GitHub). The application then handles an OAuth 2.0 flow (likely Authorization Code grant) to obtain a JWT (JSON Web Token).
* **Usage:** This JWT is automatically included as a `Bearer` token in the `Authorization` header for subsequent API calls made by the web application itself.
* **End-User Impact:** As an end-user using the web application, you don't typically need to manage these JWTs directly; the application handles their lifecycle (obtaining, refreshing, using).
* **Developer Impact:** If you are building a client application that needs to act *on behalf of an Altostrat SDX user*, you would implement a standard OAuth 2.0 client flow using the endpoints defined in our [OpenID Connect Discovery Document](/api-reference/spa/authentication/authentication-&-user-info/get-openid-connect-configuration).

## Internal Machine-to-Machine APIs

These endpoints are used exclusively for communication between Altostrat SDX's internal services (e.g., syncing site counts, triggering billing events).

* They use separate, internal authentication mechanisms (e.g., `M2mAuth`, `SiteInternalAuth` Bearer tokens).
* These APIs and their authentication details are **not publicly exposed or documented** for external use.

## Summary: Choosing the Right Method

* **Integrating your service/script with Altostrat SDX?** Use the **Developer API Authentication** with an API Key generated for your Team.
* **Using the official Altostrat SDX Web Application?** Authentication is handled automatically via **OAuth 2.0 / JWT**.
* **Building a client that logs users into Altostrat SDX?** Implement an **OAuth 2.0** client flow.
* **Working on Altostrat's internal infrastructure?** Use the designated **Internal M2M Authentication** (details managed internally).

***

*Next Steps:*

* Learn how to [Manage API Credentials](/api-reference/spa/authentication/api-credentials/list-api-credentials-for-team).


